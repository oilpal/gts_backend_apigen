/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmCodeCalendar;
import com.neofect.gts.core.services.sm.repository.SmCodeCalendarRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmCodeCalendar}<br/>
 */
@Service
public class SmCodeCalendarService {

    private final SmCodeCalendarRepository smCodeCalendarRepository;

    public SmCodeCalendarService(SmCodeCalendarRepository smCodeCalendarRepository) {
        this.smCodeCalendarRepository = smCodeCalendarRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smCodeCalendar CRUD

    @Transactional
    public SmCodeCalendar saveSmCodeCalendar(SmCodeCalendar smCodeCalendar) {
        if (smCodeCalendar.getId() == null) {
            addSmCodeCalendar(smCodeCalendar);
        } else {
            modifySmCodeCalendar(smCodeCalendar);
        }

        return smCodeCalendar;
    }

    private int addSmCodeCalendar(SmCodeCalendar smCodeCalendar) {
        int result = smCodeCalendarRepository.insertSmCodeCalendar(smCodeCalendar);
        return result;
    }

    private int modifySmCodeCalendar(SmCodeCalendar smCodeCalendar) {
        int result = smCodeCalendarRepository.updateSmCodeCalendar(smCodeCalendar);
        return result;
    }

    @Transactional
    public int removeSmCodeCalendar(Long id) {
        int rows = smCodeCalendarRepository.deleteSmCodeCalendar(id);
        return rows;
    }

    public SmCodeCalendar getSmCodeCalendar(Long id) {
        SmCodeCalendar smCodeCalendar = smCodeCalendarRepository.getSmCodeCalendar(id);

        return smCodeCalendar;
    }

    public int listSmCodeCalendarCnt(Map<String, Object> params) {
        int rows = smCodeCalendarRepository.listSmCodeCalendarCnt(params);
        return rows;
    }

    public List<SmCodeCalendar> listSmCodeCalendar(Map<String, Object> params) {
        List<SmCodeCalendar> lists = smCodeCalendarRepository.listSmCodeCalendar(params);

        return lists;
    }

    public List<SmCodeCalendar> listSmCodeCalendarByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("WORK_DATE", ids));
        List<SmCodeCalendar> lists = smCodeCalendarRepository.listSmCodeCalendar(params);

        return lists;
    }

    //endregion

}
