/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.member.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.member.domain.MemberClock;
import com.neofect.gts.core.services.member.repository.MemberClockRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link MemberClock}<br/>
 */
@Service
public class MemberClockService {

    private final MemberClockRepository memberClockRepository;

    public MemberClockService(MemberClockRepository memberClockRepository) {
        this.memberClockRepository = memberClockRepository;
    }

    //region ------------------------------------------------------------------------------------------------ memberClock CRUD

    @Transactional
    public MemberClock saveMemberClock(MemberClock memberClock) {
        // if (memberClock.getId() == null) {
        //     addMemberClock(memberClock);
        // } else {
        //     modifyMemberClock(memberClock);
        // }

        return memberClock;
    }

    private int addMemberClock(MemberClock memberClock) {
        int result = memberClockRepository.insertMemberClock(memberClock);
        return result;
    }

    private int modifyMemberClock(MemberClock memberClock) {
        int result = memberClockRepository.updateMemberClock(memberClock);
        return result;
    }

    @Transactional
    public int removeMemberClock(Long id) {
        int rows = memberClockRepository.deleteMemberClock(id);
        return rows;
    }

    public MemberClock getMemberClock(Long id) {
        MemberClock memberClock = memberClockRepository.getMemberClock(id);

        return memberClock;
    }

    public int listMemberClockCnt(Map<String, Object> params) {
        int rows = memberClockRepository.listMemberClockCnt(params);
        return rows;
    }

    public List<MemberClock> listMemberClock(Map<String, Object> params) {
        List<MemberClock> lists = memberClockRepository.listMemberClock(params);

        return lists;
    }

    public List<MemberClock> listMemberClockByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("MEMBER_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("CLOCK_DATE", ids));
        List<MemberClock> lists = memberClockRepository.listMemberClock(params);

        return lists;
    }

    //endregion

}
