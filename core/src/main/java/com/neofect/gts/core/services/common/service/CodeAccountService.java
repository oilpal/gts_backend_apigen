/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.common.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.common.domain.CodeAccount;
import com.neofect.gts.core.services.common.repository.CodeAccountRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link CodeAccount}<br/>
 */
@Service
public class CodeAccountService {

    private final CodeAccountRepository codeAccountRepository;

    public CodeAccountService(CodeAccountRepository codeAccountRepository) {
        this.codeAccountRepository = codeAccountRepository;
    }

    //region ------------------------------------------------------------------------------------------------ codeAccount CRUD

    @Transactional
    public CodeAccount saveCodeAccount(CodeAccount codeAccount) {
        if (codeAccount.getId() == null) {
            addCodeAccount(codeAccount);
        } else {
            modifyCodeAccount(codeAccount);
        }

        return codeAccount;
    }

    private int addCodeAccount(CodeAccount codeAccount) {
        int result = codeAccountRepository.insertCodeAccount(codeAccount);
        return result;
    }

    private int modifyCodeAccount(CodeAccount codeAccount) {
        int result = codeAccountRepository.updateCodeAccount(codeAccount);
        return result;
    }

    @Transactional
    public int removeCodeAccount(Long id) {
        int rows = codeAccountRepository.deleteCodeAccount(id);
        return rows;
    }

    public CodeAccount getCodeAccount(Long id) {
        CodeAccount codeAccount = codeAccountRepository.getCodeAccount(id);

        return codeAccount;
    }

    public int listCodeAccountCnt(Map<String, Object> params) {
        int rows = codeAccountRepository.listCodeAccountCnt(params);
        return rows;
    }

    public List<CodeAccount> listCodeAccount(Map<String, Object> params) {
        List<CodeAccount> lists = codeAccountRepository.listCodeAccount(params);

        return lists;
    }

    public List<CodeAccount> listCodeAccountByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("ACCOUNT_CODE", ids));
        List<CodeAccount> lists = codeAccountRepository.listCodeAccount(params);

        return lists;
    }

    //endregion

}
