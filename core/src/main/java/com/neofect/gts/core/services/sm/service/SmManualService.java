/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmManual;
import com.neofect.gts.core.services.sm.repository.SmManualRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmManual}<br/>
 */
@Service
public class SmManualService {

    private final SmManualRepository smManualRepository;

    public SmManualService(SmManualRepository smManualRepository) {
        this.smManualRepository = smManualRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smManual CRUD

    @Transactional
    public SmManual saveSmManual(SmManual smManual) {
        // if (smManual.getId() == null) {
        //     addSmManual(smManual);
        // } else {
        //     modifySmManual(smManual);
        // }

        return smManual;
    }

    private int addSmManual(SmManual smManual) {
        int result = smManualRepository.insertSmManual(smManual);
        return result;
    }

    private int modifySmManual(SmManual smManual) {
        int result = smManualRepository.updateSmManual(smManual);
        return result;
    }

    @Transactional
    public int removeSmManual(Long id) {
        int rows = smManualRepository.deleteSmManual(id);
        return rows;
    }

    public SmManual getSmManual(Long id) {
        SmManual smManual = smManualRepository.getSmManual(id);

        return smManual;
    }

    public int listSmManualCnt(Map<String, Object> params) {
        int rows = smManualRepository.listSmManualCnt(params);
        return rows;
    }

    public List<SmManual> listSmManual(Map<String, Object> params) {
        List<SmManual> lists = smManualRepository.listSmManual(params);

        return lists;
    }

    public List<SmManual> listSmManualByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("SYS_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PGM_CODE", ids));
        List<SmManual> lists = smManualRepository.listSmManual(params);

        return lists;
    }

    //endregion

}
