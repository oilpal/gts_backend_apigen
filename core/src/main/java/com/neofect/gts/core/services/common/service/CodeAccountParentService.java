/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.common.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.common.domain.CodeAccountParent;
import com.neofect.gts.core.services.common.repository.CodeAccountParentRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link CodeAccountParent}<br/>
 */
@Service
public class CodeAccountParentService {

    private final CodeAccountParentRepository codeAccountParentRepository;

    public CodeAccountParentService(CodeAccountParentRepository codeAccountParentRepository) {
        this.codeAccountParentRepository = codeAccountParentRepository;
    }

    //region ------------------------------------------------------------------------------------------------ codeAccountParent CRUD

    @Transactional
    public CodeAccountParent saveCodeAccountParent(CodeAccountParent codeAccountParent) {
        if (codeAccountParent.getId() == null) {
            addCodeAccountParent(codeAccountParent);
        } else {
            modifyCodeAccountParent(codeAccountParent);
        }

        return codeAccountParent;
    }

    private int addCodeAccountParent(CodeAccountParent codeAccountParent) {
        int result = codeAccountParentRepository.insertCodeAccountParent(codeAccountParent);
        return result;
    }

    private int modifyCodeAccountParent(CodeAccountParent codeAccountParent) {
        int result = codeAccountParentRepository.updateCodeAccountParent(codeAccountParent);
        return result;
    }

    @Transactional
    public int removeCodeAccountParent(Long id) {
        int rows = codeAccountParentRepository.deleteCodeAccountParent(id);
        return rows;
    }

    public CodeAccountParent getCodeAccountParent(Long id) {
        CodeAccountParent codeAccountParent = codeAccountParentRepository.getCodeAccountParent(id);

        return codeAccountParent;
    }

    public int listCodeAccountParentCnt(Map<String, Object> params) {
        int rows = codeAccountParentRepository.listCodeAccountParentCnt(params);
        return rows;
    }

    public List<CodeAccountParent> listCodeAccountParent(Map<String, Object> params) {
        List<CodeAccountParent> lists = codeAccountParentRepository.listCodeAccountParent(params);

        return lists;
    }

    public List<CodeAccountParent> listCodeAccountParentByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("ACNT_PARENT", ids));
        List<CodeAccountParent> lists = codeAccountParentRepository.listCodeAccountParent(params);

        return lists;
    }

    //endregion

}
