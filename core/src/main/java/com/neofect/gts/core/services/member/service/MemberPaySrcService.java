/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.member.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.member.domain.MemberPaySrc;
import com.neofect.gts.core.services.member.repository.MemberPaySrcRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link MemberPaySrc}<br/>
 */
@Service
public class MemberPaySrcService {

    private final MemberPaySrcRepository memberPaySrcRepository;

    public MemberPaySrcService(MemberPaySrcRepository memberPaySrcRepository) {
        this.memberPaySrcRepository = memberPaySrcRepository;
    }

    //region ------------------------------------------------------------------------------------------------ memberPaySrc CRUD

    @Transactional
    public MemberPaySrc saveMemberPaySrc(MemberPaySrc memberPaySrc) {
        // if (memberPaySrc.getId() == null) {
        //     addMemberPaySrc(memberPaySrc);
        // } else {
        //     modifyMemberPaySrc(memberPaySrc);
        // }

        return memberPaySrc;
    }

    private int addMemberPaySrc(MemberPaySrc memberPaySrc) {
        int result = memberPaySrcRepository.insertMemberPaySrc(memberPaySrc);
        return result;
    }

    private int modifyMemberPaySrc(MemberPaySrc memberPaySrc) {
        int result = memberPaySrcRepository.updateMemberPaySrc(memberPaySrc);
        return result;
    }

    @Transactional
    public int removeMemberPaySrc(Long id) {
        int rows = memberPaySrcRepository.deleteMemberPaySrc(id);
        return rows;
    }

    public MemberPaySrc getMemberPaySrc(Long id) {
        MemberPaySrc memberPaySrc = memberPaySrcRepository.getMemberPaySrc(id);

        return memberPaySrc;
    }

    public int listMemberPaySrcCnt(Map<String, Object> params) {
        int rows = memberPaySrcRepository.listMemberPaySrcCnt(params);
        return rows;
    }

    public List<MemberPaySrc> listMemberPaySrc(Map<String, Object> params) {
        List<MemberPaySrc> lists = memberPaySrcRepository.listMemberPaySrc(params);

        return lists;
    }

    public List<MemberPaySrc> listMemberPaySrcByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("MEMBER_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("DEPT_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("YYYYMM", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("WORK_TYPE", ids));
        List<MemberPaySrc> lists = memberPaySrcRepository.listMemberPaySrc(params);

        return lists;
    }

    //endregion

}
