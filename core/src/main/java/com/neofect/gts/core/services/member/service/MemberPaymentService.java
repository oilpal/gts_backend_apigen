/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.member.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.member.domain.MemberPayment;
import com.neofect.gts.core.services.member.repository.MemberPaymentRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link MemberPayment}<br/>
 */
@Service
public class MemberPaymentService {

    private final MemberPaymentRepository memberPaymentRepository;

    public MemberPaymentService(MemberPaymentRepository memberPaymentRepository) {
        this.memberPaymentRepository = memberPaymentRepository;
    }

    //region ------------------------------------------------------------------------------------------------ memberPayment CRUD

    @Transactional
    public MemberPayment saveMemberPayment(MemberPayment memberPayment) {
        // if (memberPayment.getId() == null) {
        //     addMemberPayment(memberPayment);
        // } else {
        //     modifyMemberPayment(memberPayment);
        // }

        return memberPayment;
    }

    private int addMemberPayment(MemberPayment memberPayment) {
        int result = memberPaymentRepository.insertMemberPayment(memberPayment);
        return result;
    }

    private int modifyMemberPayment(MemberPayment memberPayment) {
        int result = memberPaymentRepository.updateMemberPayment(memberPayment);
        return result;
    }

    @Transactional
    public int removeMemberPayment(Long id) {
        int rows = memberPaymentRepository.deleteMemberPayment(id);
        return rows;
    }

    public MemberPayment getMemberPayment(Long id) {
        MemberPayment memberPayment = memberPaymentRepository.getMemberPayment(id);

        return memberPayment;
    }

    public int listMemberPaymentCnt(Map<String, Object> params) {
        int rows = memberPaymentRepository.listMemberPaymentCnt(params);
        return rows;
    }

    public List<MemberPayment> listMemberPayment(Map<String, Object> params) {
        List<MemberPayment> lists = memberPaymentRepository.listMemberPayment(params);

        return lists;
    }

    public List<MemberPayment> listMemberPaymentByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("MEMBER_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("DEPT_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("YYYYMM", ids));
        List<MemberPayment> lists = memberPaymentRepository.listMemberPayment(params);

        return lists;
    }

    //endregion

}
