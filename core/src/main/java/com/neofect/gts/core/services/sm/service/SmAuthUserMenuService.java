/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmAuthUserMenu;
import com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmAuthUserMenu}<br/>
 */
@Service
public class SmAuthUserMenuService {

    private final SmAuthUserMenuRepository smAuthUserMenuRepository;

    public SmAuthUserMenuService(SmAuthUserMenuRepository smAuthUserMenuRepository) {
        this.smAuthUserMenuRepository = smAuthUserMenuRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smAuthUserMenu CRUD

    @Transactional
    public SmAuthUserMenu saveSmAuthUserMenu(SmAuthUserMenu smAuthUserMenu) {
        // if (smAuthUserMenu.getId() == null) {
        //     addSmAuthUserMenu(smAuthUserMenu);
        // } else {
        //     modifySmAuthUserMenu(smAuthUserMenu);
        // }

        return smAuthUserMenu;
    }

    private int addSmAuthUserMenu(SmAuthUserMenu smAuthUserMenu) {
        int result = smAuthUserMenuRepository.insertSmAuthUserMenu(smAuthUserMenu);
        return result;
    }

    private int modifySmAuthUserMenu(SmAuthUserMenu smAuthUserMenu) {
        int result = smAuthUserMenuRepository.updateSmAuthUserMenu(smAuthUserMenu);
        return result;
    }

    @Transactional
    public int removeSmAuthUserMenu(Long id) {
        int rows = smAuthUserMenuRepository.deleteSmAuthUserMenu(id);
        return rows;
    }

    public SmAuthUserMenu getSmAuthUserMenu(Long id) {
        SmAuthUserMenu smAuthUserMenu = smAuthUserMenuRepository.getSmAuthUserMenu(id);

        return smAuthUserMenu;
    }

    public int listSmAuthUserMenuCnt(Map<String, Object> params) {
        int rows = smAuthUserMenuRepository.listSmAuthUserMenuCnt(params);
        return rows;
    }

    public List<SmAuthUserMenu> listSmAuthUserMenu(Map<String, Object> params) {
        List<SmAuthUserMenu> lists = smAuthUserMenuRepository.listSmAuthUserMenu(params);

        return lists;
    }

    public List<SmAuthUserMenu> listSmAuthUserMenuByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("USER_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("SYS_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PGM_CODE", ids));
        List<SmAuthUserMenu> lists = smAuthUserMenuRepository.listSmAuthUserMenu(params);

        return lists;
    }

    //endregion

}
