/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmAuthGroupUsers;
import com.neofect.gts.core.services.sm.repository.SmAuthGroupUsersRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmAuthGroupUsers}<br/>
 */
@Service
public class SmAuthGroupUsersService {

    private final SmAuthGroupUsersRepository smAuthGroupUsersRepository;

    public SmAuthGroupUsersService(SmAuthGroupUsersRepository smAuthGroupUsersRepository) {
        this.smAuthGroupUsersRepository = smAuthGroupUsersRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smAuthGroupUsers CRUD

    @Transactional
    public SmAuthGroupUsers saveSmAuthGroupUsers(SmAuthGroupUsers smAuthGroupUsers) {
        // if (smAuthGroupUsers.getId() == null) {
        //     addSmAuthGroupUsers(smAuthGroupUsers);
        // } else {
        //     modifySmAuthGroupUsers(smAuthGroupUsers);
        // }

        return smAuthGroupUsers;
    }

    private int addSmAuthGroupUsers(SmAuthGroupUsers smAuthGroupUsers) {
        int result = smAuthGroupUsersRepository.insertSmAuthGroupUsers(smAuthGroupUsers);
        return result;
    }

    private int modifySmAuthGroupUsers(SmAuthGroupUsers smAuthGroupUsers) {
        int result = smAuthGroupUsersRepository.updateSmAuthGroupUsers(smAuthGroupUsers);
        return result;
    }

    @Transactional
    public int removeSmAuthGroupUsers(Long id) {
        int rows = smAuthGroupUsersRepository.deleteSmAuthGroupUsers(id);
        return rows;
    }

    public SmAuthGroupUsers getSmAuthGroupUsers(Long id) {
        SmAuthGroupUsers smAuthGroupUsers = smAuthGroupUsersRepository.getSmAuthGroupUsers(id);

        return smAuthGroupUsers;
    }

    public int listSmAuthGroupUsersCnt(Map<String, Object> params) {
        int rows = smAuthGroupUsersRepository.listSmAuthGroupUsersCnt(params);
        return rows;
    }

    public List<SmAuthGroupUsers> listSmAuthGroupUsers(Map<String, Object> params) {
        List<SmAuthGroupUsers> lists = smAuthGroupUsersRepository.listSmAuthGroupUsers(params);

        return lists;
    }

    public List<SmAuthGroupUsers> listSmAuthGroupUsersByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("USER_GROUP_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("USER_ID", ids));
        List<SmAuthGroupUsers> lists = smAuthGroupUsersRepository.listSmAuthGroupUsers(params);

        return lists;
    }

    //endregion

}
