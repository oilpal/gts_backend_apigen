/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.member.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.member.domain.MemberPay;
import com.neofect.gts.core.services.member.repository.MemberPayRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link MemberPay}<br/>
 */
@Service
public class MemberPayService {

    private final MemberPayRepository memberPayRepository;

    public MemberPayService(MemberPayRepository memberPayRepository) {
        this.memberPayRepository = memberPayRepository;
    }

    //region ------------------------------------------------------------------------------------------------ memberPay CRUD

    @Transactional
    public MemberPay saveMemberPay(MemberPay memberPay) {
        // if (memberPay.getId() == null) {
        //     addMemberPay(memberPay);
        // } else {
        //     modifyMemberPay(memberPay);
        // }

        return memberPay;
    }

    private int addMemberPay(MemberPay memberPay) {
        int result = memberPayRepository.insertMemberPay(memberPay);
        return result;
    }

    private int modifyMemberPay(MemberPay memberPay) {
        int result = memberPayRepository.updateMemberPay(memberPay);
        return result;
    }

    @Transactional
    public int removeMemberPay(Long id) {
        int rows = memberPayRepository.deleteMemberPay(id);
        return rows;
    }

    public MemberPay getMemberPay(Long id) {
        MemberPay memberPay = memberPayRepository.getMemberPay(id);

        return memberPay;
    }

    public int listMemberPayCnt(Map<String, Object> params) {
        int rows = memberPayRepository.listMemberPayCnt(params);
        return rows;
    }

    public List<MemberPay> listMemberPay(Map<String, Object> params) {
        List<MemberPay> lists = memberPayRepository.listMemberPay(params);

        return lists;
    }

    public List<MemberPay> listMemberPayByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("MEMBER_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("YYYYMM", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PAY_DIV", ids));
        List<MemberPay> lists = memberPayRepository.listMemberPay(params);

        return lists;
    }

    //endregion

}
