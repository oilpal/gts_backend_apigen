/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.zp.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.zp.domain.ZUserFavorite;
import com.neofect.gts.core.services.zp.repository.ZUserFavoriteRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link ZUserFavorite}<br/>
 */
@Service
public class ZUserFavoriteService {

    private final ZUserFavoriteRepository zUserFavoriteRepository;

    public ZUserFavoriteService(ZUserFavoriteRepository zUserFavoriteRepository) {
        this.zUserFavoriteRepository = zUserFavoriteRepository;
    }

    //region ------------------------------------------------------------------------------------------------ zUserFavorite CRUD

    @Transactional
    public ZUserFavorite saveZUserFavorite(ZUserFavorite zUserFavorite) {
        // if (zUserFavorite.getId() == null) {
        //     addZUserFavorite(zUserFavorite);
        // } else {
        //     modifyZUserFavorite(zUserFavorite);
        // }

        return zUserFavorite;
    }

    private int addZUserFavorite(ZUserFavorite zUserFavorite) {
        int result = zUserFavoriteRepository.insertZUserFavorite(zUserFavorite);
        return result;
    }

    private int modifyZUserFavorite(ZUserFavorite zUserFavorite) {
        int result = zUserFavoriteRepository.updateZUserFavorite(zUserFavorite);
        return result;
    }

    @Transactional
    public int removeZUserFavorite(Long id) {
        int rows = zUserFavoriteRepository.deleteZUserFavorite(id);
        return rows;
    }

    public ZUserFavorite getZUserFavorite(Long id) {
        ZUserFavorite zUserFavorite = zUserFavoriteRepository.getZUserFavorite(id);

        return zUserFavorite;
    }

    public int listZUserFavoriteCnt(Map<String, Object> params) {
        int rows = zUserFavoriteRepository.listZUserFavoriteCnt(params);
        return rows;
    }

    public List<ZUserFavorite> listZUserFavorite(Map<String, Object> params) {
        List<ZUserFavorite> lists = zUserFavoriteRepository.listZUserFavorite(params);

        return lists;
    }

    public List<ZUserFavorite> listZUserFavoriteByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPCODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("EMPNO", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PGMCODE", ids));
        List<ZUserFavorite> lists = zUserFavoriteRepository.listZUserFavorite(params);

        return lists;
    }

    //endregion

}
