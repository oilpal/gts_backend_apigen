/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.am.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.am.domain.AmCodeEvidence;
import com.neofect.gts.core.services.am.repository.AmCodeEvidenceRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link AmCodeEvidence}<br/>
 */
@Service
public class AmCodeEvidenceService {

    private final AmCodeEvidenceRepository amCodeEvidenceRepository;

    public AmCodeEvidenceService(AmCodeEvidenceRepository amCodeEvidenceRepository) {
        this.amCodeEvidenceRepository = amCodeEvidenceRepository;
    }

    //region ------------------------------------------------------------------------------------------------ amCodeEvidence CRUD

    @Transactional
    public AmCodeEvidence saveAmCodeEvidence(AmCodeEvidence amCodeEvidence) {
        if (amCodeEvidence.getId() == null) {
            addAmCodeEvidence(amCodeEvidence);
        } else {
            modifyAmCodeEvidence(amCodeEvidence);
        }

        return amCodeEvidence;
    }

    private int addAmCodeEvidence(AmCodeEvidence amCodeEvidence) {
        int result = amCodeEvidenceRepository.insertAmCodeEvidence(amCodeEvidence);
        return result;
    }

    private int modifyAmCodeEvidence(AmCodeEvidence amCodeEvidence) {
        int result = amCodeEvidenceRepository.updateAmCodeEvidence(amCodeEvidence);
        return result;
    }

    @Transactional
    public int removeAmCodeEvidence(Long id) {
        int rows = amCodeEvidenceRepository.deleteAmCodeEvidence(id);
        return rows;
    }

    public AmCodeEvidence getAmCodeEvidence(Long id) {
        AmCodeEvidence amCodeEvidence = amCodeEvidenceRepository.getAmCodeEvidence(id);

        return amCodeEvidence;
    }

    public int listAmCodeEvidenceCnt(Map<String, Object> params) {
        int rows = amCodeEvidenceRepository.listAmCodeEvidenceCnt(params);
        return rows;
    }

    public List<AmCodeEvidence> listAmCodeEvidence(Map<String, Object> params) {
        List<AmCodeEvidence> lists = amCodeEvidenceRepository.listAmCodeEvidence(params);

        return lists;
    }

    public List<AmCodeEvidence> listAmCodeEvidenceByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("EVIDENCE_CODE", ids));
        List<AmCodeEvidence> lists = amCodeEvidenceRepository.listAmCodeEvidence(params);

        return lists;
    }

    //endregion

}
