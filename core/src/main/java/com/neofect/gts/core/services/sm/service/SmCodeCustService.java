/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmCodeCust;
import com.neofect.gts.core.services.sm.repository.SmCodeCustRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmCodeCust}<br/>
 */
@Service
public class SmCodeCustService {

    private final SmCodeCustRepository smCodeCustRepository;

    public SmCodeCustService(SmCodeCustRepository smCodeCustRepository) {
        this.smCodeCustRepository = smCodeCustRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smCodeCust CRUD

    @Transactional
    public SmCodeCust saveSmCodeCust(SmCodeCust smCodeCust) {
        if (smCodeCust.getId() == null) {
            addSmCodeCust(smCodeCust);
        } else {
            modifySmCodeCust(smCodeCust);
        }

        return smCodeCust;
    }

    private int addSmCodeCust(SmCodeCust smCodeCust) {
        int result = smCodeCustRepository.insertSmCodeCust(smCodeCust);
        return result;
    }

    private int modifySmCodeCust(SmCodeCust smCodeCust) {
        int result = smCodeCustRepository.updateSmCodeCust(smCodeCust);
        return result;
    }

    @Transactional
    public int removeSmCodeCust(Long id) {
        int rows = smCodeCustRepository.deleteSmCodeCust(id);
        return rows;
    }

    public SmCodeCust getSmCodeCust(Long id) {
        SmCodeCust smCodeCust = smCodeCustRepository.getSmCodeCust(id);

        return smCodeCust;
    }

    public int listSmCodeCustCnt(Map<String, Object> params) {
        int rows = smCodeCustRepository.listSmCodeCustCnt(params);
        return rows;
    }

    public List<SmCodeCust> listSmCodeCust(Map<String, Object> params) {
        List<SmCodeCust> lists = smCodeCustRepository.listSmCodeCust(params);

        return lists;
    }

    public List<SmCodeCust> listSmCodeCustByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("CUST_CODE", ids));
        List<SmCodeCust> lists = smCodeCustRepository.listSmCodeCust(params);

        return lists;
    }

    //endregion

}
