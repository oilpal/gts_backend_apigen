/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.am.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.am.domain.AmCodeDeposit;
import com.neofect.gts.core.services.am.repository.AmCodeDepositRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link AmCodeDeposit}<br/>
 */
@Service
public class AmCodeDepositService {

    private final AmCodeDepositRepository amCodeDepositRepository;

    public AmCodeDepositService(AmCodeDepositRepository amCodeDepositRepository) {
        this.amCodeDepositRepository = amCodeDepositRepository;
    }

    //region ------------------------------------------------------------------------------------------------ amCodeDeposit CRUD

    @Transactional
    public AmCodeDeposit saveAmCodeDeposit(AmCodeDeposit amCodeDeposit) {
        // if (amCodeDeposit.getId() == null) {
        //     addAmCodeDeposit(amCodeDeposit);
        // } else {
        //     modifyAmCodeDeposit(amCodeDeposit);
        // }

        return amCodeDeposit;
    }

    private int addAmCodeDeposit(AmCodeDeposit amCodeDeposit) {
        int result = amCodeDepositRepository.insertAmCodeDeposit(amCodeDeposit);
        return result;
    }

    private int modifyAmCodeDeposit(AmCodeDeposit amCodeDeposit) {
        int result = amCodeDepositRepository.updateAmCodeDeposit(amCodeDeposit);
        return result;
    }

    @Transactional
    public int removeAmCodeDeposit(Long id) {
        int rows = amCodeDepositRepository.deleteAmCodeDeposit(id);
        return rows;
    }

    public AmCodeDeposit getAmCodeDeposit(Long id) {
        AmCodeDeposit amCodeDeposit = amCodeDepositRepository.getAmCodeDeposit(id);

        return amCodeDeposit;
    }

    public int listAmCodeDepositCnt(Map<String, Object> params) {
        int rows = amCodeDepositRepository.listAmCodeDepositCnt(params);
        return rows;
    }

    public List<AmCodeDeposit> listAmCodeDeposit(Map<String, Object> params) {
        List<AmCodeDeposit> lists = amCodeDepositRepository.listAmCodeDeposit(params);

        return lists;
    }

    public List<AmCodeDeposit> listAmCodeDepositByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("DEPOSIT_NO", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        List<AmCodeDeposit> lists = amCodeDepositRepository.listAmCodeDeposit(params);

        return lists;
    }

    //endregion

}
