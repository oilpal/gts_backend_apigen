/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.common.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.common.domain.CodeCard;
import com.neofect.gts.core.services.common.repository.CodeCardRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link CodeCard}<br/>
 */
@Service
public class CodeCardService {

    private final CodeCardRepository codeCardRepository;

    public CodeCardService(CodeCardRepository codeCardRepository) {
        this.codeCardRepository = codeCardRepository;
    }

    //region ------------------------------------------------------------------------------------------------ codeCard CRUD

    @Transactional
    public CodeCard saveCodeCard(CodeCard codeCard) {
        if (codeCard.getId() == null) {
            addCodeCard(codeCard);
        } else {
            modifyCodeCard(codeCard);
        }

        return codeCard;
    }

    private int addCodeCard(CodeCard codeCard) {
        int result = codeCardRepository.insertCodeCard(codeCard);
        return result;
    }

    private int modifyCodeCard(CodeCard codeCard) {
        int result = codeCardRepository.updateCodeCard(codeCard);
        return result;
    }

    @Transactional
    public int removeCodeCard(Long id) {
        int rows = codeCardRepository.deleteCodeCard(id);
        return rows;
    }

    public CodeCard getCodeCard(Long id) {
        CodeCard codeCard = codeCardRepository.getCodeCard(id);

        return codeCard;
    }

    public int listCodeCardCnt(Map<String, Object> params) {
        int rows = codeCardRepository.listCodeCardCnt(params);
        return rows;
    }

    public List<CodeCard> listCodeCard(Map<String, Object> params) {
        List<CodeCard> lists = codeCardRepository.listCodeCard(params);

        return lists;
    }

    public List<CodeCard> listCodeCardByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("CARD_NO", ids));
        List<CodeCard> lists = codeCardRepository.listCodeCard(params);

        return lists;
    }

    //endregion

}
