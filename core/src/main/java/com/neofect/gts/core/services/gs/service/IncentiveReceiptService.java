/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.gs.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.gs.domain.IncentiveReceipt;
import com.neofect.gts.core.services.gs.repository.IncentiveReceiptRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link IncentiveReceipt}<br/>
 */
@Service
public class IncentiveReceiptService {

    private final IncentiveReceiptRepository incentiveReceiptRepository;

    public IncentiveReceiptService(IncentiveReceiptRepository incentiveReceiptRepository) {
        this.incentiveReceiptRepository = incentiveReceiptRepository;
    }

    //region ------------------------------------------------------------------------------------------------ incentiveReceipt CRUD

    @Transactional
    public IncentiveReceipt saveIncentiveReceipt(IncentiveReceipt incentiveReceipt) {
        // if (incentiveReceipt.getId() == null) {
        //     addIncentiveReceipt(incentiveReceipt);
        // } else {
        //     modifyIncentiveReceipt(incentiveReceipt);
        // }

        return incentiveReceipt;
    }

    private int addIncentiveReceipt(IncentiveReceipt incentiveReceipt) {
        int result = incentiveReceiptRepository.insertIncentiveReceipt(incentiveReceipt);
        return result;
    }

    private int modifyIncentiveReceipt(IncentiveReceipt incentiveReceipt) {
        int result = incentiveReceiptRepository.updateIncentiveReceipt(incentiveReceipt);
        return result;
    }

    @Transactional
    public int removeIncentiveReceipt(Long id) {
        int rows = incentiveReceiptRepository.deleteIncentiveReceipt(id);
        return rows;
    }

    public IncentiveReceipt getIncentiveReceipt(Long id) {
        IncentiveReceipt incentiveReceipt = incentiveReceiptRepository.getIncentiveReceipt(id);

        return incentiveReceipt;
    }

    public int listIncentiveReceiptCnt(Map<String, Object> params) {
        int rows = incentiveReceiptRepository.listIncentiveReceiptCnt(params);
        return rows;
    }

    public List<IncentiveReceipt> listIncentiveReceipt(Map<String, Object> params) {
        List<IncentiveReceipt> lists = incentiveReceiptRepository.listIncentiveReceipt(params);

        return lists;
    }

    public List<IncentiveReceipt> listIncentiveReceiptByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("DEPT_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("MEMBER_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PAY_DATE", ids));
        List<IncentiveReceipt> lists = incentiveReceiptRepository.listIncentiveReceipt(params);

        return lists;
    }

    //endregion

}
