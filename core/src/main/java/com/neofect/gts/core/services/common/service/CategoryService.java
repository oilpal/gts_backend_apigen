/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template pack-unvus-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.common.service;

import com.neofect.gts.core.services.common.domain.Category;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;
import com.neofect.gts.core.services.common.domain.Category;
import com.neofect.gts.core.services.common.repository.CategoryRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Map;

/**
 * Service for {@link Category}<br/>
 */
@Service
public class CategoryService {

    private final CategoryRepository categoryRepository;

    public CategoryService(CategoryRepository categoryRepository) {
        this.categoryRepository = categoryRepository;
    }

    //region --------------------------------------------------------------------------------------------- category CRUD

    @Transactional
    public Category saveCategory(Category category) {
        if (category.getId() == null) {
            addCategory(category);
        } else {
            modifyCategory(category);
        }

        return category;
    }

    private int addCategory(Category category) {
        int result = categoryRepository.insertCategory(category);
        return result;
    }

    private int modifyCategory(Category category) {
        int result = categoryRepository.updateCategory(category);
        return result;
    }

    @Transactional
    public int removeCategory(Long id) {
        int rows = categoryRepository.markAsDelete(id);
        return rows;
    }

    public Category getCategory(Long id) {
        Category category = categoryRepository.getCategory(id);

        return category;
    }

    public Category getCategoryByCode(String namespace, String parentCode) {
        Category category = categoryRepository.getCategoryByCode(namespace, parentCode);
        return category;
    }

    public int listCategoryCnt(Map<String, Object> params) {
        int rows = categoryRepository.listCategoryCnt(params);
        return rows;
    }

    public List<Category> listCategory(Map<String, Object> params) {
        List<Category> lists = categoryRepository.listCategory(params);

        return lists;
    }

    public List<Category> listCategoryByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("cate_id", ids));
        List<Category> lists = categoryRepository.listCategory(params);

        return lists;
    }

    //endregion

}
