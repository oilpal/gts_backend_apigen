/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.slip.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.slip.domain.SlipSaleDetail;
import com.neofect.gts.core.services.slip.repository.SlipSaleDetailRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SlipSaleDetail}<br/>
 */
@Service
public class SlipSaleDetailService {

    private final SlipSaleDetailRepository slipSaleDetailRepository;

    public SlipSaleDetailService(SlipSaleDetailRepository slipSaleDetailRepository) {
        this.slipSaleDetailRepository = slipSaleDetailRepository;
    }

    //region ------------------------------------------------------------------------------------------------ slipSaleDetail CRUD

    @Transactional
    public SlipSaleDetail saveSlipSaleDetail(SlipSaleDetail slipSaleDetail) {
        // if (slipSaleDetail.getId() == null) {
        //     addSlipSaleDetail(slipSaleDetail);
        // } else {
        //     modifySlipSaleDetail(slipSaleDetail);
        // }

        return slipSaleDetail;
    }

    private int addSlipSaleDetail(SlipSaleDetail slipSaleDetail) {
        int result = slipSaleDetailRepository.insertSlipSaleDetail(slipSaleDetail);
        return result;
    }

    private int modifySlipSaleDetail(SlipSaleDetail slipSaleDetail) {
        int result = slipSaleDetailRepository.updateSlipSaleDetail(slipSaleDetail);
        return result;
    }

    @Transactional
    public int removeSlipSaleDetail(Long id) {
        int rows = slipSaleDetailRepository.deleteSlipSaleDetail(id);
        return rows;
    }

    public SlipSaleDetail getSlipSaleDetail(Long id) {
        SlipSaleDetail slipSaleDetail = slipSaleDetailRepository.getSlipSaleDetail(id);

        return slipSaleDetail;
    }

    public int listSlipSaleDetailCnt(Map<String, Object> params) {
        int rows = slipSaleDetailRepository.listSlipSaleDetailCnt(params);
        return rows;
    }

    public List<SlipSaleDetail> listSlipSaleDetail(Map<String, Object> params) {
        List<SlipSaleDetail> lists = slipSaleDetailRepository.listSlipSaleDetail(params);

        return lists;
    }

    public List<SlipSaleDetail> listSlipSaleDetailByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("SLIP_DATE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("DEPT_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("SLIP_SEQ", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("SLIP_ITEM", ids));
        List<SlipSaleDetail> lists = slipSaleDetailRepository.listSlipSaleDetail(params);

        return lists;
    }

    //endregion

}
