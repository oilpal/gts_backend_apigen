/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.am.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.am.domain.AmCodeCdComp;
import com.neofect.gts.core.services.am.repository.AmCodeCdCompRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link AmCodeCdComp}<br/>
 */
@Service
public class AmCodeCdCompService {

    private final AmCodeCdCompRepository amCodeCdCompRepository;

    public AmCodeCdCompService(AmCodeCdCompRepository amCodeCdCompRepository) {
        this.amCodeCdCompRepository = amCodeCdCompRepository;
    }

    //region ------------------------------------------------------------------------------------------------ amCodeCdComp CRUD

    @Transactional
    public AmCodeCdComp saveAmCodeCdComp(AmCodeCdComp amCodeCdComp) {
        if (amCodeCdComp.getId() == null) {
            addAmCodeCdComp(amCodeCdComp);
        } else {
            modifyAmCodeCdComp(amCodeCdComp);
        }

        return amCodeCdComp;
    }

    private int addAmCodeCdComp(AmCodeCdComp amCodeCdComp) {
        int result = amCodeCdCompRepository.insertAmCodeCdComp(amCodeCdComp);
        return result;
    }

    private int modifyAmCodeCdComp(AmCodeCdComp amCodeCdComp) {
        int result = amCodeCdCompRepository.updateAmCodeCdComp(amCodeCdComp);
        return result;
    }

    @Transactional
    public int removeAmCodeCdComp(Long id) {
        int rows = amCodeCdCompRepository.deleteAmCodeCdComp(id);
        return rows;
    }

    public AmCodeCdComp getAmCodeCdComp(Long id) {
        AmCodeCdComp amCodeCdComp = amCodeCdCompRepository.getAmCodeCdComp(id);

        return amCodeCdComp;
    }

    public int listAmCodeCdCompCnt(Map<String, Object> params) {
        int rows = amCodeCdCompRepository.listAmCodeCdCompCnt(params);
        return rows;
    }

    public List<AmCodeCdComp> listAmCodeCdComp(Map<String, Object> params) {
        List<AmCodeCdComp> lists = amCodeCdCompRepository.listAmCodeCdComp(params);

        return lists;
    }

    public List<AmCodeCdComp> listAmCodeCdCompByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("CD_CARD_COMP_CODE", ids));
        List<AmCodeCdComp> lists = amCodeCdCompRepository.listAmCodeCdComp(params);

        return lists;
    }

    //endregion

}
