/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SumMm;
import com.neofect.gts.core.services.sm.repository.SumMmRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link SumMm}<br/>
 */
@Service
public class SumMmService {

    private final SumMmRepository sumMmRepository;

    public SumMmService(SumMmRepository sumMmRepository) {
        this.sumMmRepository = sumMmRepository;
    }

    //region ------------------------------------------------------------------------------------------------ sumMm CRUD

    @Transactional
    public SumMm saveSumMm(SumMm sumMm) {
        // if (sumMm.getId() == null) {
        //     addSumMm(sumMm);
        // } else {
        //     modifySumMm(sumMm);
        // }

        return sumMm;
    }

    private int addSumMm(SumMm sumMm) {
        int result = sumMmRepository.insertSumMm(sumMm);
        return result;
    }

    private int modifySumMm(SumMm sumMm) {
        int result = sumMmRepository.updateSumMm(sumMm);
        return result;
    }

    @Transactional
    public int removeSumMm(Long id) {
        int rows = sumMmRepository.deleteSumMm(id);
        return rows;
    }

    public SumMm getSumMm(Long id) {
        SumMm sumMm = sumMmRepository.getSumMm(id);

        return sumMm;
    }

    public int listSumMmCnt(Map<String, Object> params) {
        int rows = sumMmRepository.listSumMmCnt(params);
        return rows;
    }

    public List<SumMm> listSumMm(Map<String, Object> params) {
        List<SumMm> lists = sumMmRepository.listSumMm(params);

        return lists;
    }

    public List<SumMm> listSumMmByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("DEPT_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("YYYYMM", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("ACNT_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("STATUS", ids));
        List<SumMm> lists = sumMmRepository.listSumMm(params);

        return lists;
    }

    //endregion

}
