/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmAuthPgmcode;
import com.neofect.gts.core.services.sm.repository.SmAuthPgmcodeRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmAuthPgmcode}<br/>
 */
@Service
public class SmAuthPgmcodeService {

    private final SmAuthPgmcodeRepository smAuthPgmcodeRepository;

    public SmAuthPgmcodeService(SmAuthPgmcodeRepository smAuthPgmcodeRepository) {
        this.smAuthPgmcodeRepository = smAuthPgmcodeRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smAuthPgmcode CRUD

    @Transactional
    public SmAuthPgmcode saveSmAuthPgmcode(SmAuthPgmcode smAuthPgmcode) {
        // if (smAuthPgmcode.getId() == null) {
        //     addSmAuthPgmcode(smAuthPgmcode);
        // } else {
        //     modifySmAuthPgmcode(smAuthPgmcode);
        // }

        return smAuthPgmcode;
    }

    private int addSmAuthPgmcode(SmAuthPgmcode smAuthPgmcode) {
        int result = smAuthPgmcodeRepository.insertSmAuthPgmcode(smAuthPgmcode);
        return result;
    }

    private int modifySmAuthPgmcode(SmAuthPgmcode smAuthPgmcode) {
        int result = smAuthPgmcodeRepository.updateSmAuthPgmcode(smAuthPgmcode);
        return result;
    }

    @Transactional
    public int removeSmAuthPgmcode(Long id) {
        int rows = smAuthPgmcodeRepository.deleteSmAuthPgmcode(id);
        return rows;
    }

    public SmAuthPgmcode getSmAuthPgmcode(Long id) {
        SmAuthPgmcode smAuthPgmcode = smAuthPgmcodeRepository.getSmAuthPgmcode(id);

        return smAuthPgmcode;
    }

    public int listSmAuthPgmcodeCnt(Map<String, Object> params) {
        int rows = smAuthPgmcodeRepository.listSmAuthPgmcodeCnt(params);
        return rows;
    }

    public List<SmAuthPgmcode> listSmAuthPgmcode(Map<String, Object> params) {
        List<SmAuthPgmcode> lists = smAuthPgmcodeRepository.listSmAuthPgmcode(params);

        return lists;
    }

    public List<SmAuthPgmcode> listSmAuthPgmcodeByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("SYS_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PGM_CODE", ids));
        List<SmAuthPgmcode> lists = smAuthPgmcodeRepository.listSmAuthPgmcode(params);

        return lists;
    }

    //endregion

}
