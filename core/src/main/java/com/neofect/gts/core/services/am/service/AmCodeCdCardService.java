/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.am.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.am.domain.AmCodeCdCard;
import com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link AmCodeCdCard}<br/>
 */
@Service
public class AmCodeCdCardService {

    private final AmCodeCdCardRepository amCodeCdCardRepository;

    public AmCodeCdCardService(AmCodeCdCardRepository amCodeCdCardRepository) {
        this.amCodeCdCardRepository = amCodeCdCardRepository;
    }

    //region ------------------------------------------------------------------------------------------------ amCodeCdCard CRUD

    @Transactional
    public AmCodeCdCard saveAmCodeCdCard(AmCodeCdCard amCodeCdCard) {
        // if (amCodeCdCard.getId() == null) {
        //     addAmCodeCdCard(amCodeCdCard);
        // } else {
        //     modifyAmCodeCdCard(amCodeCdCard);
        // }

        return amCodeCdCard;
    }

    private int addAmCodeCdCard(AmCodeCdCard amCodeCdCard) {
        int result = amCodeCdCardRepository.insertAmCodeCdCard(amCodeCdCard);
        return result;
    }

    private int modifyAmCodeCdCard(AmCodeCdCard amCodeCdCard) {
        int result = amCodeCdCardRepository.updateAmCodeCdCard(amCodeCdCard);
        return result;
    }

    @Transactional
    public int removeAmCodeCdCard(Long id) {
        int rows = amCodeCdCardRepository.deleteAmCodeCdCard(id);
        return rows;
    }

    public AmCodeCdCard getAmCodeCdCard(Long id) {
        AmCodeCdCard amCodeCdCard = amCodeCdCardRepository.getAmCodeCdCard(id);

        return amCodeCdCard;
    }

    public int listAmCodeCdCardCnt(Map<String, Object> params) {
        int rows = amCodeCdCardRepository.listAmCodeCdCardCnt(params);
        return rows;
    }

    public List<AmCodeCdCard> listAmCodeCdCard(Map<String, Object> params) {
        List<AmCodeCdCard> lists = amCodeCdCardRepository.listAmCodeCdCard(params);

        return lists;
    }

    public List<AmCodeCdCard> listAmCodeCdCardByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("CD_CARD_NO", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        List<AmCodeCdCard> lists = amCodeCdCardRepository.listAmCodeCdCard(params);

        return lists;
    }

    //endregion

}
