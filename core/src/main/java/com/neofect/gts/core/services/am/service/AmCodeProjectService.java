/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.am.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.am.domain.AmCodeProject;
import com.neofect.gts.core.services.am.repository.AmCodeProjectRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link AmCodeProject}<br/>
 */
@Service
public class AmCodeProjectService {

    private final AmCodeProjectRepository amCodeProjectRepository;

    public AmCodeProjectService(AmCodeProjectRepository amCodeProjectRepository) {
        this.amCodeProjectRepository = amCodeProjectRepository;
    }

    //region ------------------------------------------------------------------------------------------------ amCodeProject CRUD

    @Transactional
    public AmCodeProject saveAmCodeProject(AmCodeProject amCodeProject) {
        // if (amCodeProject.getId() == null) {
        //     addAmCodeProject(amCodeProject);
        // } else {
        //     modifyAmCodeProject(amCodeProject);
        // }

        return amCodeProject;
    }

    private int addAmCodeProject(AmCodeProject amCodeProject) {
        int result = amCodeProjectRepository.insertAmCodeProject(amCodeProject);
        return result;
    }

    private int modifyAmCodeProject(AmCodeProject amCodeProject) {
        int result = amCodeProjectRepository.updateAmCodeProject(amCodeProject);
        return result;
    }

    @Transactional
    public int removeAmCodeProject(Long id) {
        int rows = amCodeProjectRepository.deleteAmCodeProject(id);
        return rows;
    }

    public AmCodeProject getAmCodeProject(Long id) {
        AmCodeProject amCodeProject = amCodeProjectRepository.getAmCodeProject(id);

        return amCodeProject;
    }

    public int listAmCodeProjectCnt(Map<String, Object> params) {
        int rows = amCodeProjectRepository.listAmCodeProjectCnt(params);
        return rows;
    }

    public List<AmCodeProject> listAmCodeProject(Map<String, Object> params) {
        List<AmCodeProject> lists = amCodeProjectRepository.listAmCodeProject(params);

        return lists;
    }

    public List<AmCodeProject> listAmCodeProjectByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PROJECT_CODE", ids));
        List<AmCodeProject> lists = amCodeProjectRepository.listAmCodeProject(params);

        return lists;
    }

    //endregion

}
