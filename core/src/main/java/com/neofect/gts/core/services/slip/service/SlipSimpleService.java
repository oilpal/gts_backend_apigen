/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.slip.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.slip.domain.SlipSimple;
import com.neofect.gts.core.services.slip.repository.SlipSimpleRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link SlipSimple}<br/>
 */
@Service
public class SlipSimpleService {

    private final SlipSimpleRepository slipSimpleRepository;

    public SlipSimpleService(SlipSimpleRepository slipSimpleRepository) {
        this.slipSimpleRepository = slipSimpleRepository;
    }

    //region ------------------------------------------------------------------------------------------------ slipSimple CRUD

    @Transactional
    public SlipSimple saveSlipSimple(SlipSimple slipSimple) {
        if (slipSimple.getId() == null) {
            addSlipSimple(slipSimple);
        } else {
            modifySlipSimple(slipSimple);
        }

        return slipSimple;
    }

    private int addSlipSimple(SlipSimple slipSimple) {
        int result = slipSimpleRepository.insertSlipSimple(slipSimple);
        return result;
    }

    private int modifySlipSimple(SlipSimple slipSimple) {
        int result = slipSimpleRepository.updateSlipSimple(slipSimple);
        return result;
    }

    @Transactional
    public int removeSlipSimple(Long id) {
        int rows = slipSimpleRepository.deleteSlipSimple(id);
        return rows;
    }

    public SlipSimple getSlipSimple(Long id) {
        SlipSimple slipSimple = slipSimpleRepository.getSlipSimple(id);

        return slipSimple;
    }

    public int listSlipSimpleCnt(Map<String, Object> params) {
        int rows = slipSimpleRepository.listSlipSimpleCnt(params);
        return rows;
    }

    public List<SlipSimple> listSlipSimple(Map<String, Object> params) {
        List<SlipSimple> lists = slipSimpleRepository.listSlipSimple(params);

        return lists;
    }

    public List<SlipSimple> listSlipSimpleByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("SLIP_SEQ", ids));
        List<SlipSimple> lists = slipSimpleRepository.listSlipSimple(params);

        return lists;
    }

    //endregion

}
