/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.srvce.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.srvce.domain.ServicePaySum;
import com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link ServicePaySum}<br/>
 */
@Service
public class ServicePaySumService {

    private final ServicePaySumRepository servicePaySumRepository;

    public ServicePaySumService(ServicePaySumRepository servicePaySumRepository) {
        this.servicePaySumRepository = servicePaySumRepository;
    }

    //region ------------------------------------------------------------------------------------------------ servicePaySum CRUD

    @Transactional
    public ServicePaySum saveServicePaySum(ServicePaySum servicePaySum) {
        // if (servicePaySum.getId() == null) {
        //     addServicePaySum(servicePaySum);
        // } else {
        //     modifyServicePaySum(servicePaySum);
        // }

        return servicePaySum;
    }

    private int addServicePaySum(ServicePaySum servicePaySum) {
        int result = servicePaySumRepository.insertServicePaySum(servicePaySum);
        return result;
    }

    private int modifyServicePaySum(ServicePaySum servicePaySum) {
        int result = servicePaySumRepository.updateServicePaySum(servicePaySum);
        return result;
    }

    @Transactional
    public int removeServicePaySum(Long id) {
        int rows = servicePaySumRepository.deleteServicePaySum(id);
        return rows;
    }

    public ServicePaySum getServicePaySum(Long id) {
        ServicePaySum servicePaySum = servicePaySumRepository.getServicePaySum(id);

        return servicePaySum;
    }

    public int listServicePaySumCnt(Map<String, Object> params) {
        int rows = servicePaySumRepository.listServicePaySumCnt(params);
        return rows;
    }

    public List<ServicePaySum> listServicePaySum(Map<String, Object> params) {
        List<ServicePaySum> lists = servicePaySumRepository.listServicePaySum(params);

        return lists;
    }

    public List<ServicePaySum> listServicePaySumByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("DEPT_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("CUST_ID", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("YYYYMM", ids));
        List<ServicePaySum> lists = servicePaySumRepository.listServicePaySum(params);

        return lists;
    }

    //endregion

}
