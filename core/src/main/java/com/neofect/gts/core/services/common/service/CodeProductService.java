/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.common.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.common.domain.CodeProduct;
import com.neofect.gts.core.services.common.repository.CodeProductRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;

/**
 * Service for {@link CodeProduct}<br/>
 */
@Service
public class CodeProductService {

    private final CodeProductRepository codeProductRepository;

    public CodeProductService(CodeProductRepository codeProductRepository) {
        this.codeProductRepository = codeProductRepository;
    }

    //region ------------------------------------------------------------------------------------------------ codeProduct CRUD

    @Transactional
    public CodeProduct saveCodeProduct(CodeProduct codeProduct) {
        if (codeProduct.getId() == null) {
            addCodeProduct(codeProduct);
        } else {
            modifyCodeProduct(codeProduct);
        }

        return codeProduct;
    }

    private int addCodeProduct(CodeProduct codeProduct) {
        int result = codeProductRepository.insertCodeProduct(codeProduct);
        return result;
    }

    private int modifyCodeProduct(CodeProduct codeProduct) {
        int result = codeProductRepository.updateCodeProduct(codeProduct);
        return result;
    }

    @Transactional
    public int removeCodeProduct(Long id) {
        int rows = codeProductRepository.deleteCodeProduct(id);
        return rows;
    }

    public CodeProduct getCodeProduct(Long id) {
        CodeProduct codeProduct = codeProductRepository.getCodeProduct(id);

        return codeProduct;
    }

    public int listCodeProductCnt(Map<String, Object> params) {
        int rows = codeProductRepository.listCodeProductCnt(params);
        return rows;
    }

    public List<CodeProduct> listCodeProduct(Map<String, Object> params) {
        List<CodeProduct> lists = codeProductRepository.listCodeProduct(params);

        return lists;
    }

    public List<CodeProduct> listCodeProductByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("PRODUCT_ID", ids));
        List<CodeProduct> lists = codeProductRepository.listCodeProduct(params);

        return lists;
    }

    //endregion

}
