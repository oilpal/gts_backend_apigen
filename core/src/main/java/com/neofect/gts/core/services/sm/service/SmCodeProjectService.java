/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmCodeProject;
import com.neofect.gts.core.services.sm.repository.SmCodeProjectRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmCodeProject}<br/>
 */
@Service
public class SmCodeProjectService {

    private final SmCodeProjectRepository smCodeProjectRepository;

    public SmCodeProjectService(SmCodeProjectRepository smCodeProjectRepository) {
        this.smCodeProjectRepository = smCodeProjectRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smCodeProject CRUD

    @Transactional
    public SmCodeProject saveSmCodeProject(SmCodeProject smCodeProject) {
        // if (smCodeProject.getId() == null) {
        //     addSmCodeProject(smCodeProject);
        // } else {
        //     modifySmCodeProject(smCodeProject);
        // }

        return smCodeProject;
    }

    private int addSmCodeProject(SmCodeProject smCodeProject) {
        int result = smCodeProjectRepository.insertSmCodeProject(smCodeProject);
        return result;
    }

    private int modifySmCodeProject(SmCodeProject smCodeProject) {
        int result = smCodeProjectRepository.updateSmCodeProject(smCodeProject);
        return result;
    }

    @Transactional
    public int removeSmCodeProject(Long id) {
        int rows = smCodeProjectRepository.deleteSmCodeProject(id);
        return rows;
    }

    public SmCodeProject getSmCodeProject(Long id) {
        SmCodeProject smCodeProject = smCodeProjectRepository.getSmCodeProject(id);

        return smCodeProject;
    }

    public int listSmCodeProjectCnt(Map<String, Object> params) {
        int rows = smCodeProjectRepository.listSmCodeProjectCnt(params);
        return rows;
    }

    public List<SmCodeProject> listSmCodeProject(Map<String, Object> params) {
        List<SmCodeProject> lists = smCodeProjectRepository.listSmCodeProject(params);

        return lists;
    }

    public List<SmCodeProject> listSmCodeProjectByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("PROJ_CODE", ids));
        List<SmCodeProject> lists = smCodeProjectRepository.listSmCodeProject(params);

        return lists;
    }

    //endregion

}
