/*
 * Source code generated by UnvUS.
 * Copyright(c) 2017 unvus.com All rights reserved.
 * Template skrull-pack-mybatis:src/main/java/service/Service.e.vm.java
 * Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
 */
package com.neofect.gts.core.services.sm.service;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.neofect.gts.core.services.sm.domain.SmAuthActUser;
import com.neofect.gts.core.services.sm.repository.SmAuthActUserRepository;
import com.unvus.config.mybatis.pagination.OrderBy;
import com.unvus.query.QueryTool;


/**
 * Service for {@link SmAuthActUser}<br/>
 */
@Service
public class SmAuthActUserService {

    private final SmAuthActUserRepository smAuthActUserRepository;

    public SmAuthActUserService(SmAuthActUserRepository smAuthActUserRepository) {
        this.smAuthActUserRepository = smAuthActUserRepository;
    }

    //region ------------------------------------------------------------------------------------------------ smAuthActUser CRUD

    @Transactional
    public SmAuthActUser saveSmAuthActUser(SmAuthActUser smAuthActUser) {
        // if (smAuthActUser.getId() == null) {
        //     addSmAuthActUser(smAuthActUser);
        // } else {
        //     modifySmAuthActUser(smAuthActUser);
        // }

        return smAuthActUser;
    }

    private int addSmAuthActUser(SmAuthActUser smAuthActUser) {
        int result = smAuthActUserRepository.insertSmAuthActUser(smAuthActUser);
        return result;
    }

    private int modifySmAuthActUser(SmAuthActUser smAuthActUser) {
        int result = smAuthActUserRepository.updateSmAuthActUser(smAuthActUser);
        return result;
    }

    @Transactional
    public int removeSmAuthActUser(Long id) {
        int rows = smAuthActUserRepository.deleteSmAuthActUser(id);
        return rows;
    }

    public SmAuthActUser getSmAuthActUser(Long id) {
        SmAuthActUser smAuthActUser = smAuthActUserRepository.getSmAuthActUser(id);

        return smAuthActUser;
    }

    public int listSmAuthActUserCnt(Map<String, Object> params) {
        int rows = smAuthActUserRepository.listSmAuthActUserCnt(params);
        return rows;
    }

    public List<SmAuthActUser> listSmAuthActUser(Map<String, Object> params) {
        List<SmAuthActUser> lists = smAuthActUserRepository.listSmAuthActUser(params);

        return lists;
    }

    public List<SmAuthActUser> listSmAuthActUserByIds(List<Long> ids, Map<String, Object> params) {
        params.put("ids", ids);
        QueryTool.setDefaultOrderBy(new OrderBy("COMPANY_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("ACT_CODE", ids));
        QueryTool.setDefaultOrderBy(new OrderBy("USER_ID", ids));
        List<SmAuthActUser> lists = smAuthActUserRepository.listSmAuthActUser(params);

        return lists;
    }

    //endregion

}
