<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_">

    <resultMap id="simpleAmCodeDeptResult_" type="com.neofect.gts.core.services.am.domain.AmCodeDept">
        <!-- 회사코드 -->
        <id     property="companyCode" column="COMPANY_CODE"/>
        <!-- 부서코드 -->
        <id     property="deptCode" column="DEPT_CODE"/>
        <!-- 세무회사코드 -->
        <result property="taxCompCode" column="TAX_COMP_CODE"/>
        <!-- 원가종류코드 -->
        <result property="costKindCode" column="COST_KIND_CODE"/>
        <!-- 집계부서코드 -->
        <result property="totalizeCode" column="TOTALIZE_CODE"/>
        <!-- 예산대비부서코드 -->
        <result property="bdgtDeptCode" column="BDGT_DEPT_CODE"/>
        <!-- 내부명칭 -->
        <result property="deptName" column="DEPT_NAME"/>
        <!-- 부서종류 -->
        <result property="deptKind" column="DEPT_KIND"/>
        <!-- 사용여부 -->
        <result property="useYn" column="USE_YN"/>
        <!-- 외부명칭 -->
        <result property="deptOutName" column="DEPT_OUT_NAME"/>
        <!-- 부서약칭 -->
        <result property="deptAbbr" column="DEPT_ABBR"/>
        <!-- 부서영문 -->
        <result property="deptEng" column="DEPT_ENG"/>
        <!-- 부서한자 -->
        <result property="deptChi" column="DEPT_CHI"/>
        <!-- 출력순위 -->
        <result property="printOrder" column="PRINT_ORDER"/>
        <!-- 불공제율 -->
        <result property="undeductRate" column="UNDEDUCT_RATE"/>
        <!-- 원천신고처코드 -->
        <result property="sourReportDiv" column="SOUR_REPORT_DIV"/>
        <!-- 공동공사여부 -->
        <result property="joincontYn" column="JOINCONT_YN"/>
        <!-- 면세여부 -->
        <result property="vatYn" column="VAT_YN"/>
        <!-- 건설중인자산여부 -->
        <result property="assetYn" column="ASSET_YN"/>
        <!-- 입력담당 -->
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        <!-- 입력일시 -->
        <result property="inputDate" column="INPUT_DATE"/>
        <!-- 변경담당 -->
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        <!-- 변경일시 -->
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="levelCode" column="LEVEL_CODE"/>
        
        <result property="costCenterCode" column="COST_CENTER_CODE"/>
        
        <result property="costDeptCode" column="COST_DEPT_CODE"/>
        
        <result property="custCode" column="CUST_CODE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeDeptCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="deptCodes != null and !deptCodes.isEmpty()">
            AND ${_alias}DEPT_CODE IN <foreach collection="deptCodes" item="deptCodeValue" open="(" close=")" separator=",">#{ deptCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="deptCode != null and deptCode != ''">
            AND ${_alias}DEPT_CODE = #{deptCode}
        </if>
        <if test="taxCompCode != null and taxCompCode != ''">
            AND ${_alias}TAX_COMP_CODE = #{taxCompCode}
        </if>
        <if test="costKindCode != null and costKindCode != ''">
            AND ${_alias}COST_KIND_CODE = #{costKindCode}
        </if>
        <if test="totalizeCode != null and totalizeCode != ''">
            AND ${_alias}TOTALIZE_CODE = #{totalizeCode}
        </if>
        <if test="bdgtDeptCode != null and bdgtDeptCode != ''">
            AND ${_alias}BDGT_DEPT_CODE = #{bdgtDeptCode}
        </if>
        <if test="deptName != null and deptName != ''">
            AND ${_alias}DEPT_NAME = #{deptName}
        </if>
        <if test="deptKind != null and deptKind != ''">
            AND ${_alias}DEPT_KIND = #{deptKind}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="deptOutName != null and deptOutName != ''">
            AND ${_alias}DEPT_OUT_NAME = #{deptOutName}
        </if>
        <if test="deptAbbr != null and deptAbbr != ''">
            AND ${_alias}DEPT_ABBR = #{deptAbbr}
        </if>
        <if test="deptEng != null and deptEng != ''">
            AND ${_alias}DEPT_ENG = #{deptEng}
        </if>
        <if test="deptChi != null and deptChi != ''">
            AND ${_alias}DEPT_CHI = #{deptChi}
        </if>
        <if test="printOrder != null">
            AND ${_alias}PRINT_ORDER = #{printOrder}
        </if>
        <if test="undeductRate != null">
            AND ${_alias}UNDEDUCT_RATE = #{undeductRate}
        </if>
        <if test="sourReportDiv != null and sourReportDiv != ''">
            AND ${_alias}SOUR_REPORT_DIV = #{sourReportDiv}
        </if>
        <if test="joincontYn != null and joincontYn != ''">
            AND ${_alias}JOINCONT_YN = #{joincontYn}
        </if>
        <if test="vatYn != null and vatYn != ''">
            AND ${_alias}VAT_YN = #{vatYn}
        </if>
        <if test="assetYn != null and assetYn != ''">
            AND ${_alias}ASSET_YN = #{assetYn}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="levelCode != null and levelCode != ''">
            AND ${_alias}LEVEL_CODE = #{levelCode}
        </if>
        <if test="costCenterCode != null and costCenterCode != ''">
            AND ${_alias}COST_CENTER_CODE = #{costCenterCode}
        </if>
        <if test="costDeptCode != null and costDeptCode != ''">
            AND ${_alias}COST_DEPT_CODE = #{costDeptCode}
        </if>
        <if test="custCode != null and custCode != ''">
            AND ${_alias}CUST_CODE = #{custCode}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}DEPT_CODE AS ${_asPrefix}DEPT_CODE, ${_alias}TAX_COMP_CODE AS ${_asPrefix}TAX_COMP_CODE, ${_alias}COST_KIND_CODE AS ${_asPrefix}COST_KIND_CODE, ${_alias}TOTALIZE_CODE AS ${_asPrefix}TOTALIZE_CODE, ${_alias}BDGT_DEPT_CODE AS ${_asPrefix}BDGT_DEPT_CODE, ${_alias}DEPT_NAME AS ${_asPrefix}DEPT_NAME, ${_alias}DEPT_KIND AS ${_asPrefix}DEPT_KIND, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}DEPT_OUT_NAME AS ${_asPrefix}DEPT_OUT_NAME, ${_alias}DEPT_ABBR AS ${_asPrefix}DEPT_ABBR, ${_alias}DEPT_ENG AS ${_asPrefix}DEPT_ENG, ${_alias}DEPT_CHI AS ${_asPrefix}DEPT_CHI, ${_alias}PRINT_ORDER AS ${_asPrefix}PRINT_ORDER, ${_alias}UNDEDUCT_RATE AS ${_asPrefix}UNDEDUCT_RATE, ${_alias}SOUR_REPORT_DIV AS ${_asPrefix}SOUR_REPORT_DIV, ${_alias}JOINCONT_YN AS ${_asPrefix}JOINCONT_YN, ${_alias}VAT_YN AS ${_asPrefix}VAT_YN, ${_alias}ASSET_YN AS ${_asPrefix}ASSET_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}LEVEL_CODE AS ${_asPrefix}LEVEL_CODE, ${_alias}COST_CENTER_CODE AS ${_asPrefix}COST_CENTER_CODE, ${_alias}COST_DEPT_CODE AS ${_asPrefix}COST_DEPT_CODE, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}DEPT_CODE, ${_alias}TAX_COMP_CODE, ${_alias}COST_KIND_CODE, ${_alias}TOTALIZE_CODE, ${_alias}BDGT_DEPT_CODE, ${_alias}DEPT_NAME, ${_alias}DEPT_KIND, ${_alias}USE_YN, ${_alias}DEPT_OUT_NAME, ${_alias}DEPT_ABBR, ${_alias}DEPT_ENG, ${_alias}DEPT_CHI, ${_alias}PRINT_ORDER, ${_alias}UNDEDUCT_RATE, ${_alias}SOUR_REPORT_DIV, ${_alias}JOINCONT_YN, ${_alias}VAT_YN, ${_alias}ASSET_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}LEVEL_CODE, ${_alias}COST_CENTER_CODE, ${_alias}COST_DEPT_CODE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}TAX_COMP_CODE AS ${_asPrefix}TAX_COMP_CODE, ${_alias}COST_KIND_CODE AS ${_asPrefix}COST_KIND_CODE, ${_alias}TOTALIZE_CODE AS ${_asPrefix}TOTALIZE_CODE, ${_alias}BDGT_DEPT_CODE AS ${_asPrefix}BDGT_DEPT_CODE, ${_alias}DEPT_NAME AS ${_asPrefix}DEPT_NAME, ${_alias}DEPT_KIND AS ${_asPrefix}DEPT_KIND, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}DEPT_OUT_NAME AS ${_asPrefix}DEPT_OUT_NAME, ${_alias}DEPT_ABBR AS ${_asPrefix}DEPT_ABBR, ${_alias}DEPT_ENG AS ${_asPrefix}DEPT_ENG, ${_alias}DEPT_CHI AS ${_asPrefix}DEPT_CHI, ${_alias}PRINT_ORDER AS ${_asPrefix}PRINT_ORDER, ${_alias}UNDEDUCT_RATE AS ${_asPrefix}UNDEDUCT_RATE, ${_alias}SOUR_REPORT_DIV AS ${_asPrefix}SOUR_REPORT_DIV, ${_alias}JOINCONT_YN AS ${_asPrefix}JOINCONT_YN, ${_alias}VAT_YN AS ${_asPrefix}VAT_YN, ${_alias}ASSET_YN AS ${_asPrefix}ASSET_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}LEVEL_CODE AS ${_asPrefix}LEVEL_CODE, ${_alias}COST_CENTER_CODE AS ${_asPrefix}COST_CENTER_CODE, ${_alias}COST_DEPT_CODE AS ${_asPrefix}COST_DEPT_CODE, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}TAX_COMP_CODE, ${_alias}COST_KIND_CODE, ${_alias}TOTALIZE_CODE, ${_alias}BDGT_DEPT_CODE, ${_alias}DEPT_NAME, ${_alias}DEPT_KIND, ${_alias}USE_YN, ${_alias}DEPT_OUT_NAME, ${_alias}DEPT_ABBR, ${_alias}DEPT_ENG, ${_alias}DEPT_CHI, ${_alias}PRINT_ORDER, ${_alias}UNDEDUCT_RATE, ${_alias}SOUR_REPORT_DIV, ${_alias}JOINCONT_YN, ${_alias}VAT_YN, ${_alias}ASSET_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}LEVEL_CODE, ${_alias}COST_CENTER_CODE, ${_alias}COST_DEPT_CODE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}DEPT_CODE, ${_alias}TAX_COMP_CODE, ${_alias}COST_KIND_CODE, ${_alias}TOTALIZE_CODE, ${_alias}BDGT_DEPT_CODE, ${_alias}DEPT_NAME, ${_alias}DEPT_KIND, ${_alias}USE_YN, ${_alias}DEPT_OUT_NAME, ${_alias}DEPT_ABBR, ${_alias}DEPT_ENG, ${_alias}DEPT_CHI, ${_alias}PRINT_ORDER, ${_alias}UNDEDUCT_RATE, ${_alias}SOUR_REPORT_DIV, ${_alias}JOINCONT_YN, ${_alias}VAT_YN, ${_alias}ASSET_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}LEVEL_CODE, ${_alias}COST_CENTER_CODE, ${_alias}COST_DEPT_CODE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}TAX_COMP_CODE, ${_alias}COST_KIND_CODE, ${_alias}TOTALIZE_CODE, ${_alias}BDGT_DEPT_CODE, ${_alias}DEPT_NAME, ${_alias}DEPT_KIND, ${_alias}USE_YN, ${_alias}DEPT_OUT_NAME, ${_alias}DEPT_ABBR, ${_alias}DEPT_ENG, ${_alias}DEPT_CHI, ${_alias}PRINT_ORDER, ${_alias}UNDEDUCT_RATE, ${_alias}SOUR_REPORT_DIV, ${_alias}JOINCONT_YN, ${_alias}VAT_YN, ${_alias}ASSET_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}LEVEL_CODE, ${_alias}COST_CENTER_CODE, ${_alias}COST_DEPT_CODE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeDept" parameterType="long" resultMap="simpleAmCodeDeptResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_.simpleGetAmCodeDept */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_DEPT
        WHERE
        COMPANY_CODE = #{companyCode}
        AND DEPT_CODE = #{deptCode}
	</select>

    <select id="simpleListAmCodeDeptCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_.simpleListAmCodeDeptCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_DEPT
        <include refid="simpleAmCodeDeptCondition_" />
    </select>

    <select id="simpleListAmCodeDept" resultMap="simpleAmCodeDeptResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_.simpleListAmCodeDept */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_DEPT
        <include refid="simpleAmCodeDeptCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="taxCompCode != null and taxCompCode != ''">
            ${_alias}TAX_COMP_CODE = #{taxCompCode},
        </if>
        <if test="costKindCode != null and costKindCode != ''">
            ${_alias}COST_KIND_CODE = #{costKindCode},
        </if>
        <if test="totalizeCode != null and totalizeCode != ''">
            ${_alias}TOTALIZE_CODE = #{totalizeCode},
        </if>
        <if test="bdgtDeptCode != null and bdgtDeptCode != ''">
            ${_alias}BDGT_DEPT_CODE = #{bdgtDeptCode},
        </if>
        <if test="deptName != null and deptName != ''">
            ${_alias}DEPT_NAME = #{deptName},
        </if>
        <if test="deptKind != null and deptKind != ''">
            ${_alias}DEPT_KIND = #{deptKind},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="deptOutName != null and deptOutName != ''">
            ${_alias}DEPT_OUT_NAME = #{deptOutName},
        </if>
        <if test="deptAbbr != null and deptAbbr != ''">
            ${_alias}DEPT_ABBR = #{deptAbbr},
        </if>
        <if test="deptEng != null and deptEng != ''">
            ${_alias}DEPT_ENG = #{deptEng},
        </if>
        <if test="deptChi != null and deptChi != ''">
            ${_alias}DEPT_CHI = #{deptChi},
        </if>
        <if test="printOrder != null">
            ${_alias}PRINT_ORDER = #{printOrder},
        </if>
        <if test="undeductRate != null">
            ${_alias}UNDEDUCT_RATE = #{undeductRate},
        </if>
        <if test="sourReportDiv != null and sourReportDiv != ''">
            ${_alias}SOUR_REPORT_DIV = #{sourReportDiv},
        </if>
        <if test="joincontYn != null and joincontYn != ''">
            ${_alias}JOINCONT_YN = #{joincontYn},
        </if>
        <if test="vatYn != null and vatYn != ''">
            ${_alias}VAT_YN = #{vatYn},
        </if>
        <if test="assetYn != null and assetYn != ''">
            ${_alias}ASSET_YN = #{assetYn},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="levelCode != null and levelCode != ''">
            ${_alias}LEVEL_CODE = #{levelCode},
        </if>
        <if test="costCenterCode != null and costCenterCode != ''">
            ${_alias}COST_CENTER_CODE = #{costCenterCode},
        </if>
        <if test="costDeptCode != null and costDeptCode != ''">
            ${_alias}COST_DEPT_CODE = #{costDeptCode},
        </if>
        <if test="custCode != null and custCode != ''">
            ${_alias}CUST_CODE = #{custCode},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeDept" parameterType="com.neofect.gts.core.services.am.domain.AmCodeDept">
        /* com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_.updateAmCodeDept */

        UPDATE GTS2016.AM_CODE_DEPT
        SET
             TAX_COMP_CODE = #{taxCompCode}
            , COST_KIND_CODE = #{costKindCode}
            , TOTALIZE_CODE = #{totalizeCode}
            , BDGT_DEPT_CODE = #{bdgtDeptCode}
            , DEPT_NAME = #{deptName}
            , DEPT_KIND = #{deptKind}
            , USE_YN = #{useYn}
            , DEPT_OUT_NAME = #{deptOutName}
            , DEPT_ABBR = #{deptAbbr}
            , DEPT_ENG = #{deptEng}
            , DEPT_CHI = #{deptChi}
            , PRINT_ORDER = #{printOrder}
            , UNDEDUCT_RATE = #{undeductRate}
            , SOUR_REPORT_DIV = #{sourReportDiv}
            , JOINCONT_YN = #{joincontYn}
            , VAT_YN = #{vatYn}
            , ASSET_YN = #{assetYn}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , LEVEL_CODE = #{levelCode}
            , COST_CENTER_CODE = #{costCenterCode}
            , COST_DEPT_CODE = #{costDeptCode}
            , CUST_CODE = #{custCode}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND DEPT_CODE = #{deptCode}
    </update>

    <update id="updateAmCodeDeptDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeDept">
        /* com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_.updateAmCodeDeptDynamic */

        UPDATE GTS2016.AM_CODE_DEPT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND DEPT_CODE = #{deptCode}
    </update>

    <delete id="deleteAmCodeDept" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_.deleteAmCodeDept */

        DELETE FROM GTS2016.AM_CODE_DEPT
        WHERE
            COMPANY_CODE = #{companyCode}
            AND DEPT_CODE = #{deptCode}
    </delete>

    <sql id="insert_values_">

        #{taxCompCode},
        #{costKindCode},
        #{totalizeCode},
        #{bdgtDeptCode},
        #{deptName},
        #{deptKind},
        #{useYn},
        #{deptOutName},
        #{deptAbbr},
        #{deptEng},
        #{deptChi},
        #{printOrder},
        #{undeductRate},
        #{sourReportDiv},
        #{joincontYn},
        #{vatYn},
        #{assetYn},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{levelCode},
        #{costCenterCode},
        #{costDeptCode},
        #{custCode},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeDept">
        /* com.neofect.gts.core.services.am.repository.AmCodeDeptRepository_.insertAmCodeDept */


        INSERT INTO GTS2016.AM_CODE_DEPT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

