<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_">

    <resultMap id="simpleAmCodeTaxOfficeResult_" type="com.neofect.gts.core.services.am.domain.AmCodeTaxOffice">
        <!-- 세무서코드 -->
        <id     property="id" column="TAX_OFFICE_CODE"/>
        <!-- 세무서명칭 -->
        <result property="taxOfficeName" column="TAX_OFFICE_NAME"/>
        <!-- 사용여부 -->
        <result property="useYn" column="USE_YN"/>
        <!-- 전화번호 -->
        <result property="phone" column="PHONE"/>
        <!-- 우편번호 -->
        <result property="zipCode" column="ZIP_CODE"/>
        <!-- 주소 -->
        <result property="addr1" column="ADDR1"/>
        <!-- 번지 -->
        <result property="addr2" column="ADDR2"/>
        <!-- 계좌번호 -->
        <result property="depositNo" column="DEPOSIT_NO"/>
        <!-- 입력담당 -->
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        <!-- 입력일시 -->
        <result property="inputDate" column="INPUT_DATE"/>
        <!-- 변경담당 -->
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        <!-- 변경일시 -->
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeTaxOfficeCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}TAX_OFFICE_CODE IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null and id != ''">
            AND ${_alias}TAX_OFFICE_CODE = #{id}
        </if>
        <if test="taxOfficeName != null and taxOfficeName != ''">
            AND ${_alias}TAX_OFFICE_NAME = #{taxOfficeName}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="phone != null and phone != ''">
            AND ${_alias}PHONE = #{phone}
        </if>
        <if test="zipCode != null and zipCode != ''">
            AND ${_alias}ZIP_CODE = #{zipCode}
        </if>
        <if test="addr1 != null and addr1 != ''">
            AND ${_alias}ADDR1 = #{addr1}
        </if>
        <if test="addr2 != null and addr2 != ''">
            AND ${_alias}ADDR2 = #{addr2}
        </if>
        <if test="depositNo != null and depositNo != ''">
            AND ${_alias}DEPOSIT_NO = #{depositNo}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}TAX_OFFICE_CODE AS ${_asPrefix}TAX_OFFICE_CODE, ${_alias}TAX_OFFICE_NAME AS ${_asPrefix}TAX_OFFICE_NAME, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}DEPOSIT_NO AS ${_asPrefix}DEPOSIT_NO, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}TAX_OFFICE_CODE, ${_alias}TAX_OFFICE_NAME, ${_alias}USE_YN, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPOSIT_NO, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}TAX_OFFICE_NAME AS ${_asPrefix}TAX_OFFICE_NAME, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}DEPOSIT_NO AS ${_asPrefix}DEPOSIT_NO, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}TAX_OFFICE_NAME, ${_alias}USE_YN, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPOSIT_NO, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}TAX_OFFICE_CODE, ${_alias}TAX_OFFICE_NAME, ${_alias}USE_YN, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPOSIT_NO, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}TAX_OFFICE_NAME, ${_alias}USE_YN, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPOSIT_NO, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeTaxOffice" parameterType="long" resultMap="simpleAmCodeTaxOfficeResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_.simpleGetAmCodeTaxOffice */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_TAX_OFFICE
        WHERE
        TAX_OFFICE_CODE = #{id}
	</select>

    <select id="simpleListAmCodeTaxOfficeCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_.simpleListAmCodeTaxOfficeCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_TAX_OFFICE
        <include refid="simpleAmCodeTaxOfficeCondition_" />
    </select>

    <select id="simpleListAmCodeTaxOffice" resultMap="simpleAmCodeTaxOfficeResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_.simpleListAmCodeTaxOffice */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_TAX_OFFICE
        <include refid="simpleAmCodeTaxOfficeCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="taxOfficeName != null and taxOfficeName != ''">
            ${_alias}TAX_OFFICE_NAME = #{taxOfficeName},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="phone != null and phone != ''">
            ${_alias}PHONE = #{phone},
        </if>
        <if test="zipCode != null and zipCode != ''">
            ${_alias}ZIP_CODE = #{zipCode},
        </if>
        <if test="addr1 != null and addr1 != ''">
            ${_alias}ADDR1 = #{addr1},
        </if>
        <if test="addr2 != null and addr2 != ''">
            ${_alias}ADDR2 = #{addr2},
        </if>
        <if test="depositNo != null and depositNo != ''">
            ${_alias}DEPOSIT_NO = #{depositNo},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeTaxOffice" parameterType="com.neofect.gts.core.services.am.domain.AmCodeTaxOffice">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_.updateAmCodeTaxOffice */

        UPDATE GTS2016.AM_CODE_TAX_OFFICE
        SET
             TAX_OFFICE_NAME = #{taxOfficeName}
            , USE_YN = #{useYn}
            , PHONE = #{phone}
            , ZIP_CODE = #{zipCode}
            , ADDR1 = #{addr1}
            , ADDR2 = #{addr2}
            , DEPOSIT_NO = #{depositNo}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            TAX_OFFICE_CODE = #{id}
    </update>

    <update id="updateAmCodeTaxOfficeDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeTaxOffice">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_.updateAmCodeTaxOfficeDynamic */

        UPDATE GTS2016.AM_CODE_TAX_OFFICE
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            TAX_OFFICE_CODE = #{id}
    </update>

    <delete id="deleteAmCodeTaxOffice" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_.deleteAmCodeTaxOffice */

        DELETE FROM GTS2016.AM_CODE_TAX_OFFICE
        WHERE
            TAX_OFFICE_CODE = #{id}
    </delete>

    <sql id="insert_values_">

        #{taxOfficeName},
        #{useYn},
        #{phone},
        #{zipCode},
        #{addr1},
        #{addr2},
        #{depositNo},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeTaxOffice">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxOfficeRepository_.insertAmCodeTaxOffice */


        INSERT INTO GTS2016.AM_CODE_TAX_OFFICE
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

