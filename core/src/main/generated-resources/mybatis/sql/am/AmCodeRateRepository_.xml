<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeRateRepository_">

    <resultMap id="simpleAmCodeRateResult_" type="com.neofect.gts.core.services.am.domain.AmCodeRate">
        <!-- 내용년수 -->
        <id     property="id" column="CONTENTS_YEAR"/>
        <!-- 정율5 -->
        <result property="fixedRate5" column="FIXED_RATE5"/>
        <!-- 정율10 -->
        <result property="fixedRate10" column="FIXED_RATE10"/>
        <!-- 정액 -->
        <result property="fixedAmt" column="FIXED_AMT"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeRateCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}CONTENTS_YEAR IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}CONTENTS_YEAR = #{id}
        </if>
        <if test="fixedRate5 != null">
            AND ${_alias}FIXED_RATE5 = #{fixedRate5}
        </if>
        <if test="fixedRate10 != null">
            AND ${_alias}FIXED_RATE10 = #{fixedRate10}
        </if>
        <if test="fixedAmt != null">
            AND ${_alias}FIXED_AMT = #{fixedAmt}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CONTENTS_YEAR AS ${_asPrefix}CONTENTS_YEAR, ${_alias}FIXED_RATE5 AS ${_asPrefix}FIXED_RATE5, ${_alias}FIXED_RATE10 AS ${_asPrefix}FIXED_RATE10, ${_alias}FIXED_AMT AS ${_asPrefix}FIXED_AMT, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}CONTENTS_YEAR, ${_alias}FIXED_RATE5, ${_alias}FIXED_RATE10, ${_alias}FIXED_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}FIXED_RATE5 AS ${_asPrefix}FIXED_RATE5, ${_alias}FIXED_RATE10 AS ${_asPrefix}FIXED_RATE10, ${_alias}FIXED_AMT AS ${_asPrefix}FIXED_AMT, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}FIXED_RATE5, ${_alias}FIXED_RATE10, ${_alias}FIXED_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}CONTENTS_YEAR, ${_alias}FIXED_RATE5, ${_alias}FIXED_RATE10, ${_alias}FIXED_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}FIXED_RATE5, ${_alias}FIXED_RATE10, ${_alias}FIXED_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeRate" parameterType="long" resultMap="simpleAmCodeRateResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeRateRepository_.simpleGetAmCodeRate */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_RATE
        WHERE
        CONTENTS_YEAR = #{id}
	</select>

    <select id="simpleListAmCodeRateCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeRateRepository_.simpleListAmCodeRateCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_RATE
        <include refid="simpleAmCodeRateCondition_" />
    </select>

    <select id="simpleListAmCodeRate" resultMap="simpleAmCodeRateResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeRateRepository_.simpleListAmCodeRate */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_RATE
        <include refid="simpleAmCodeRateCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="fixedRate5 != null">
            ${_alias}FIXED_RATE5 = #{fixedRate5},
        </if>
        <if test="fixedRate10 != null">
            ${_alias}FIXED_RATE10 = #{fixedRate10},
        </if>
        <if test="fixedAmt != null">
            ${_alias}FIXED_AMT = #{fixedAmt},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeRate" parameterType="com.neofect.gts.core.services.am.domain.AmCodeRate">
        /* com.neofect.gts.core.services.am.repository.AmCodeRateRepository_.updateAmCodeRate */

        UPDATE GTS2016.AM_CODE_RATE
        SET
             FIXED_RATE5 = #{fixedRate5}
            , FIXED_RATE10 = #{fixedRate10}
            , FIXED_AMT = #{fixedAmt}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            CONTENTS_YEAR = #{id}
    </update>

    <update id="updateAmCodeRateDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeRate">
        /* com.neofect.gts.core.services.am.repository.AmCodeRateRepository_.updateAmCodeRateDynamic */

        UPDATE GTS2016.AM_CODE_RATE
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            CONTENTS_YEAR = #{id}
    </update>

    <delete id="deleteAmCodeRate" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeRateRepository_.deleteAmCodeRate */

        DELETE FROM GTS2016.AM_CODE_RATE
        WHERE
            CONTENTS_YEAR = #{id}
    </delete>

    <sql id="insert_values_">

        #{fixedRate5},
        #{fixedRate10},
        #{fixedAmt},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeRate">
        /* com.neofect.gts.core.services.am.repository.AmCodeRateRepository_.insertAmCodeRate */


        INSERT INTO GTS2016.AM_CODE_RATE
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

