<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_">

    <resultMap id="simpleAmCodeProjectResult_" type="com.neofect.gts.core.services.am.domain.AmCodeProject">
        
        <id     property="companyCode" column="COMPANY_CODE"/>
        
        <id     property="projectCode" column="PROJECT_CODE"/>
        
        <result property="projectName" column="PROJECT_NAME"/>
        
        <result property="projectKind" column="PROJECT_KIND"/>
        
        <result property="parentProjectCode" column="PARENT_PROJECT_CODE"/>
        
        <result property="useYn" column="USE_YN"/>
        
        <result property="remark" column="REMARK"/>
        
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        
        <result property="inputDate" column="INPUT_DATE"/>
        
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeProjectCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="projectCodes != null and !projectCodes.isEmpty()">
            AND ${_alias}PROJECT_CODE IN <foreach collection="projectCodes" item="projectCodeValue" open="(" close=")" separator=",">#{ projectCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="projectCode != null and projectCode != ''">
            AND ${_alias}PROJECT_CODE = #{projectCode}
        </if>
        <if test="projectName != null and projectName != ''">
            AND ${_alias}PROJECT_NAME = #{projectName}
        </if>
        <if test="projectKind != null and projectKind != ''">
            AND ${_alias}PROJECT_KIND = #{projectKind}
        </if>
        <if test="parentProjectCode != null and parentProjectCode != ''">
            AND ${_alias}PARENT_PROJECT_CODE = #{parentProjectCode}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}PROJECT_CODE AS ${_asPrefix}PROJECT_CODE, ${_alias}PROJECT_NAME AS ${_asPrefix}PROJECT_NAME, ${_alias}PROJECT_KIND AS ${_asPrefix}PROJECT_KIND, ${_alias}PARENT_PROJECT_CODE AS ${_asPrefix}PARENT_PROJECT_CODE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}PROJECT_CODE, ${_alias}PROJECT_NAME, ${_alias}PROJECT_KIND, ${_alias}PARENT_PROJECT_CODE, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}PROJECT_NAME AS ${_asPrefix}PROJECT_NAME, ${_alias}PROJECT_KIND AS ${_asPrefix}PROJECT_KIND, ${_alias}PARENT_PROJECT_CODE AS ${_asPrefix}PARENT_PROJECT_CODE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}PROJECT_NAME, ${_alias}PROJECT_KIND, ${_alias}PARENT_PROJECT_CODE, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}PROJECT_CODE, ${_alias}PROJECT_NAME, ${_alias}PROJECT_KIND, ${_alias}PARENT_PROJECT_CODE, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}PROJECT_NAME, ${_alias}PROJECT_KIND, ${_alias}PARENT_PROJECT_CODE, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeProject" parameterType="long" resultMap="simpleAmCodeProjectResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_.simpleGetAmCodeProject */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_PROJECT
        WHERE
        COMPANY_CODE = #{companyCode}
        AND PROJECT_CODE = #{projectCode}
	</select>

    <select id="simpleListAmCodeProjectCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_.simpleListAmCodeProjectCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_PROJECT
        <include refid="simpleAmCodeProjectCondition_" />
    </select>

    <select id="simpleListAmCodeProject" resultMap="simpleAmCodeProjectResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_.simpleListAmCodeProject */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_PROJECT
        <include refid="simpleAmCodeProjectCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="projectName != null and projectName != ''">
            ${_alias}PROJECT_NAME = #{projectName},
        </if>
        <if test="projectKind != null and projectKind != ''">
            ${_alias}PROJECT_KIND = #{projectKind},
        </if>
        <if test="parentProjectCode != null and parentProjectCode != ''">
            ${_alias}PARENT_PROJECT_CODE = #{parentProjectCode},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeProject" parameterType="com.neofect.gts.core.services.am.domain.AmCodeProject">
        /* com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_.updateAmCodeProject */

        UPDATE GTS2016.AM_CODE_PROJECT
        SET
             PROJECT_NAME = #{projectName}
            , PROJECT_KIND = #{projectKind}
            , PARENT_PROJECT_CODE = #{parentProjectCode}
            , USE_YN = #{useYn}
            , REMARK = #{remark}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND PROJECT_CODE = #{projectCode}
    </update>

    <update id="updateAmCodeProjectDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeProject">
        /* com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_.updateAmCodeProjectDynamic */

        UPDATE GTS2016.AM_CODE_PROJECT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND PROJECT_CODE = #{projectCode}
    </update>

    <delete id="deleteAmCodeProject" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_.deleteAmCodeProject */

        DELETE FROM GTS2016.AM_CODE_PROJECT
        WHERE
            COMPANY_CODE = #{companyCode}
            AND PROJECT_CODE = #{projectCode}
    </delete>

    <sql id="insert_values_">

        #{projectName},
        #{projectKind},
        #{parentProjectCode},
        #{useYn},
        #{remark},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeProject">
        /* com.neofect.gts.core.services.am.repository.AmCodeProjectRepository_.insertAmCodeProject */


        INSERT INTO GTS2016.AM_CODE_PROJECT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

