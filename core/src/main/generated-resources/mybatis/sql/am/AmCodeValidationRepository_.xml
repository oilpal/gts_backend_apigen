<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_">

    <resultMap id="simpleAmCodeValidationResult_" type="com.neofect.gts.core.services.am.domain.AmCodeValidation">
        <!-- 공통분류코드 -->
        <id     property="validationCode" column="VALIDATION_CODE"/>
        <!-- 공통코드 -->
        <id     property="validValueCode" column="VALID_VALUE_CODE"/>
        <!-- 공통분류명칭 -->
        <result property="validationName" column="VALIDATION_NAME"/>
        <!-- 공통코드명칭 -->
        <result property="validValueName" column="VALID_VALUE_NAME"/>
        <!-- 공통코드레벨 -->
        <result property="validValueLevel" column="VALID_VALUE_LEVEL"/>
        <!-- 비고 -->
        <result property="remark" column="REMARK"/>
        <!-- 사용여부 -->
        <result property="useYn" column="USE_YN"/>
        <!-- 입력담당 -->
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        <!-- 입력일시 -->
        <result property="inputDate" column="INPUT_DATE"/>
        <!-- 변경담당 -->
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        <!-- 변경일시 -->
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeValidationCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="validationCodes != null and !validationCodes.isEmpty()">
            AND ${_alias}VALIDATION_CODE IN <foreach collection="validationCodes" item="validationCodeValue" open="(" close=")" separator=",">#{ validationCodeValue }</foreach>
        </if>
        <if test="validValueCodes != null and !validValueCodes.isEmpty()">
            AND ${_alias}VALID_VALUE_CODE IN <foreach collection="validValueCodes" item="validValueCodeValue" open="(" close=")" separator=",">#{ validValueCodeValue }</foreach>
        </if>
        <if test="validationCode != null and validationCode != ''">
            AND ${_alias}VALIDATION_CODE = #{validationCode}
        </if>
        <if test="validValueCode != null and validValueCode != ''">
            AND ${_alias}VALID_VALUE_CODE = #{validValueCode}
        </if>
        <if test="validationName != null and validationName != ''">
            AND ${_alias}VALIDATION_NAME = #{validationName}
        </if>
        <if test="validValueName != null and validValueName != ''">
            AND ${_alias}VALID_VALUE_NAME = #{validValueName}
        </if>
        <if test="validValueLevel != null and validValueLevel != ''">
            AND ${_alias}VALID_VALUE_LEVEL = #{validValueLevel}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}VALIDATION_CODE AS ${_asPrefix}VALIDATION_CODE, ${_alias}VALID_VALUE_CODE AS ${_asPrefix}VALID_VALUE_CODE, ${_alias}VALIDATION_NAME AS ${_asPrefix}VALIDATION_NAME, ${_alias}VALID_VALUE_NAME AS ${_asPrefix}VALID_VALUE_NAME, ${_alias}VALID_VALUE_LEVEL AS ${_asPrefix}VALID_VALUE_LEVEL, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}VALIDATION_CODE, ${_alias}VALID_VALUE_CODE, ${_alias}VALIDATION_NAME, ${_alias}VALID_VALUE_NAME, ${_alias}VALID_VALUE_LEVEL, ${_alias}REMARK, ${_alias}USE_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}VALIDATION_NAME AS ${_asPrefix}VALIDATION_NAME, ${_alias}VALID_VALUE_NAME AS ${_asPrefix}VALID_VALUE_NAME, ${_alias}VALID_VALUE_LEVEL AS ${_asPrefix}VALID_VALUE_LEVEL, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}VALIDATION_NAME, ${_alias}VALID_VALUE_NAME, ${_alias}VALID_VALUE_LEVEL, ${_alias}REMARK, ${_alias}USE_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}VALIDATION_CODE, ${_alias}VALID_VALUE_CODE, ${_alias}VALIDATION_NAME, ${_alias}VALID_VALUE_NAME, ${_alias}VALID_VALUE_LEVEL, ${_alias}REMARK, ${_alias}USE_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}VALIDATION_NAME, ${_alias}VALID_VALUE_NAME, ${_alias}VALID_VALUE_LEVEL, ${_alias}REMARK, ${_alias}USE_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeValidation" parameterType="long" resultMap="simpleAmCodeValidationResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_.simpleGetAmCodeValidation */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_VALIDATION
        WHERE
        VALIDATION_CODE = #{validationCode}
        AND VALID_VALUE_CODE = #{validValueCode}
	</select>

    <select id="simpleListAmCodeValidationCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_.simpleListAmCodeValidationCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_VALIDATION
        <include refid="simpleAmCodeValidationCondition_" />
    </select>

    <select id="simpleListAmCodeValidation" resultMap="simpleAmCodeValidationResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_.simpleListAmCodeValidation */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_VALIDATION
        <include refid="simpleAmCodeValidationCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="validationName != null and validationName != ''">
            ${_alias}VALIDATION_NAME = #{validationName},
        </if>
        <if test="validValueName != null and validValueName != ''">
            ${_alias}VALID_VALUE_NAME = #{validValueName},
        </if>
        <if test="validValueLevel != null and validValueLevel != ''">
            ${_alias}VALID_VALUE_LEVEL = #{validValueLevel},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeValidation" parameterType="com.neofect.gts.core.services.am.domain.AmCodeValidation">
        /* com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_.updateAmCodeValidation */

        UPDATE GTS2016.AM_CODE_VALIDATION
        SET
             VALIDATION_NAME = #{validationName}
            , VALID_VALUE_NAME = #{validValueName}
            , VALID_VALUE_LEVEL = #{validValueLevel}
            , REMARK = #{remark}
            , USE_YN = #{useYn}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            VALIDATION_CODE = #{validationCode}
            AND VALID_VALUE_CODE = #{validValueCode}
    </update>

    <update id="updateAmCodeValidationDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeValidation">
        /* com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_.updateAmCodeValidationDynamic */

        UPDATE GTS2016.AM_CODE_VALIDATION
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            VALIDATION_CODE = #{validationCode}
            AND VALID_VALUE_CODE = #{validValueCode}
    </update>

    <delete id="deleteAmCodeValidation" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_.deleteAmCodeValidation */

        DELETE FROM GTS2016.AM_CODE_VALIDATION
        WHERE
            VALIDATION_CODE = #{validationCode}
            AND VALID_VALUE_CODE = #{validValueCode}
    </delete>

    <sql id="insert_values_">

        #{validationName},
        #{validValueName},
        #{validValueLevel},
        #{remark},
        #{useYn},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeValidation">
        /* com.neofect.gts.core.services.am.repository.AmCodeValidationRepository_.insertAmCodeValidation */


        INSERT INTO GTS2016.AM_CODE_VALIDATION
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

