<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_">

    <resultMap id="simpleAmCodeTaxcompResult_" type="com.neofect.gts.core.services.am.domain.AmCodeTaxcomp">
        
        <id     property="companyCode" column="COMPANY_CODE"/>
        
        <id     property="taxCompCode" column="TAX_COMP_CODE"/>
        
        <result property="taxCompName" column="TAX_COMP_NAME"/>
        
        <result property="taxOfficeCode" column="TAX_OFFICE_CODE"/>
        
        <result property="vendorNo" column="VENDOR_NO"/>
        
        <result property="vendorName" column="VENDOR_NAME"/>
        
        <result property="vendorNameEng" column="VENDOR_NAME_ENG"/>
        
        <result property="representName" column="REPRESENT_NAME"/>
        
        <result property="representRrn" column="REPRESENT_RRN"/>
        
        <result property="legalNo" column="LEGAL_NO"/>
        
        <result property="bizStatus" column="BIZ_STATUS"/>
        
        <result property="bizType" column="BIZ_TYPE"/>
        
        <result property="phone" column="PHONE"/>
        
        <result property="zipCode" column="ZIP_CODE"/>
        
        <result property="addr1" column="ADDR1"/>
        
        <result property="addr2" column="ADDR2"/>
        
        <result property="useYn" column="USE_YN"/>
        
        <result property="slipEvidCntYn" column="SLIP_EVID_CNT_YN"/>
        
        <result property="taxEvidIssueYn" column="TAX_EVID_ISSUE_YN"/>
        
        <result property="vatInYn" column="VAT_IN_YN"/>
        
        <result property="vatOutYn" column="VAT_OUT_YN"/>
        
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        
        <result property="inputDate" column="INPUT_DATE"/>
        
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeTaxcompCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="taxCompCodes != null and !taxCompCodes.isEmpty()">
            AND ${_alias}TAX_COMP_CODE IN <foreach collection="taxCompCodes" item="taxCompCodeValue" open="(" close=")" separator=",">#{ taxCompCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="taxCompCode != null and taxCompCode != ''">
            AND ${_alias}TAX_COMP_CODE = #{taxCompCode}
        </if>
        <if test="taxCompName != null and taxCompName != ''">
            AND ${_alias}TAX_COMP_NAME = #{taxCompName}
        </if>
        <if test="taxOfficeCode != null and taxOfficeCode != ''">
            AND ${_alias}TAX_OFFICE_CODE = #{taxOfficeCode}
        </if>
        <if test="vendorNo != null and vendorNo != ''">
            AND ${_alias}VENDOR_NO = #{vendorNo}
        </if>
        <if test="vendorName != null and vendorName != ''">
            AND ${_alias}VENDOR_NAME = #{vendorName}
        </if>
        <if test="vendorNameEng != null and vendorNameEng != ''">
            AND ${_alias}VENDOR_NAME_ENG = #{vendorNameEng}
        </if>
        <if test="representName != null and representName != ''">
            AND ${_alias}REPRESENT_NAME = #{representName}
        </if>
        <if test="representRrn != null and representRrn != ''">
            AND ${_alias}REPRESENT_RRN = #{representRrn}
        </if>
        <if test="legalNo != null and legalNo != ''">
            AND ${_alias}LEGAL_NO = #{legalNo}
        </if>
        <if test="bizStatus != null and bizStatus != ''">
            AND ${_alias}BIZ_STATUS = #{bizStatus}
        </if>
        <if test="bizType != null and bizType != ''">
            AND ${_alias}BIZ_TYPE = #{bizType}
        </if>
        <if test="phone != null and phone != ''">
            AND ${_alias}PHONE = #{phone}
        </if>
        <if test="zipCode != null and zipCode != ''">
            AND ${_alias}ZIP_CODE = #{zipCode}
        </if>
        <if test="addr1 != null and addr1 != ''">
            AND ${_alias}ADDR1 = #{addr1}
        </if>
        <if test="addr2 != null and addr2 != ''">
            AND ${_alias}ADDR2 = #{addr2}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="slipEvidCntYn != null and slipEvidCntYn != ''">
            AND ${_alias}SLIP_EVID_CNT_YN = #{slipEvidCntYn}
        </if>
        <if test="taxEvidIssueYn != null and taxEvidIssueYn != ''">
            AND ${_alias}TAX_EVID_ISSUE_YN = #{taxEvidIssueYn}
        </if>
        <if test="vatInYn != null and vatInYn != ''">
            AND ${_alias}VAT_IN_YN = #{vatInYn}
        </if>
        <if test="vatOutYn != null and vatOutYn != ''">
            AND ${_alias}VAT_OUT_YN = #{vatOutYn}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}TAX_COMP_CODE AS ${_asPrefix}TAX_COMP_CODE, ${_alias}TAX_COMP_NAME AS ${_asPrefix}TAX_COMP_NAME, ${_alias}TAX_OFFICE_CODE AS ${_asPrefix}TAX_OFFICE_CODE, ${_alias}VENDOR_NO AS ${_asPrefix}VENDOR_NO, ${_alias}VENDOR_NAME AS ${_asPrefix}VENDOR_NAME, ${_alias}VENDOR_NAME_ENG AS ${_asPrefix}VENDOR_NAME_ENG, ${_alias}REPRESENT_NAME AS ${_asPrefix}REPRESENT_NAME, ${_alias}REPRESENT_RRN AS ${_asPrefix}REPRESENT_RRN, ${_alias}LEGAL_NO AS ${_asPrefix}LEGAL_NO, ${_alias}BIZ_STATUS AS ${_asPrefix}BIZ_STATUS, ${_alias}BIZ_TYPE AS ${_asPrefix}BIZ_TYPE, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}SLIP_EVID_CNT_YN AS ${_asPrefix}SLIP_EVID_CNT_YN, ${_alias}TAX_EVID_ISSUE_YN AS ${_asPrefix}TAX_EVID_ISSUE_YN, ${_alias}VAT_IN_YN AS ${_asPrefix}VAT_IN_YN, ${_alias}VAT_OUT_YN AS ${_asPrefix}VAT_OUT_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}TAX_COMP_CODE, ${_alias}TAX_COMP_NAME, ${_alias}TAX_OFFICE_CODE, ${_alias}VENDOR_NO, ${_alias}VENDOR_NAME, ${_alias}VENDOR_NAME_ENG, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}LEGAL_NO, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}USE_YN, ${_alias}SLIP_EVID_CNT_YN, ${_alias}TAX_EVID_ISSUE_YN, ${_alias}VAT_IN_YN, ${_alias}VAT_OUT_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}TAX_COMP_NAME AS ${_asPrefix}TAX_COMP_NAME, ${_alias}TAX_OFFICE_CODE AS ${_asPrefix}TAX_OFFICE_CODE, ${_alias}VENDOR_NO AS ${_asPrefix}VENDOR_NO, ${_alias}VENDOR_NAME AS ${_asPrefix}VENDOR_NAME, ${_alias}VENDOR_NAME_ENG AS ${_asPrefix}VENDOR_NAME_ENG, ${_alias}REPRESENT_NAME AS ${_asPrefix}REPRESENT_NAME, ${_alias}REPRESENT_RRN AS ${_asPrefix}REPRESENT_RRN, ${_alias}LEGAL_NO AS ${_asPrefix}LEGAL_NO, ${_alias}BIZ_STATUS AS ${_asPrefix}BIZ_STATUS, ${_alias}BIZ_TYPE AS ${_asPrefix}BIZ_TYPE, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}SLIP_EVID_CNT_YN AS ${_asPrefix}SLIP_EVID_CNT_YN, ${_alias}TAX_EVID_ISSUE_YN AS ${_asPrefix}TAX_EVID_ISSUE_YN, ${_alias}VAT_IN_YN AS ${_asPrefix}VAT_IN_YN, ${_alias}VAT_OUT_YN AS ${_asPrefix}VAT_OUT_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}TAX_COMP_NAME, ${_alias}TAX_OFFICE_CODE, ${_alias}VENDOR_NO, ${_alias}VENDOR_NAME, ${_alias}VENDOR_NAME_ENG, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}LEGAL_NO, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}USE_YN, ${_alias}SLIP_EVID_CNT_YN, ${_alias}TAX_EVID_ISSUE_YN, ${_alias}VAT_IN_YN, ${_alias}VAT_OUT_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}TAX_COMP_CODE, ${_alias}TAX_COMP_NAME, ${_alias}TAX_OFFICE_CODE, ${_alias}VENDOR_NO, ${_alias}VENDOR_NAME, ${_alias}VENDOR_NAME_ENG, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}LEGAL_NO, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}USE_YN, ${_alias}SLIP_EVID_CNT_YN, ${_alias}TAX_EVID_ISSUE_YN, ${_alias}VAT_IN_YN, ${_alias}VAT_OUT_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}TAX_COMP_NAME, ${_alias}TAX_OFFICE_CODE, ${_alias}VENDOR_NO, ${_alias}VENDOR_NAME, ${_alias}VENDOR_NAME_ENG, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}LEGAL_NO, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}USE_YN, ${_alias}SLIP_EVID_CNT_YN, ${_alias}TAX_EVID_ISSUE_YN, ${_alias}VAT_IN_YN, ${_alias}VAT_OUT_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeTaxcomp" parameterType="long" resultMap="simpleAmCodeTaxcompResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_.simpleGetAmCodeTaxcomp */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_TAXCOMP
        WHERE
        COMPANY_CODE = #{companyCode}
        AND TAX_COMP_CODE = #{taxCompCode}
	</select>

    <select id="simpleListAmCodeTaxcompCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_.simpleListAmCodeTaxcompCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_TAXCOMP
        <include refid="simpleAmCodeTaxcompCondition_" />
    </select>

    <select id="simpleListAmCodeTaxcomp" resultMap="simpleAmCodeTaxcompResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_.simpleListAmCodeTaxcomp */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_TAXCOMP
        <include refid="simpleAmCodeTaxcompCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="taxCompName != null and taxCompName != ''">
            ${_alias}TAX_COMP_NAME = #{taxCompName},
        </if>
        <if test="taxOfficeCode != null and taxOfficeCode != ''">
            ${_alias}TAX_OFFICE_CODE = #{taxOfficeCode},
        </if>
        <if test="vendorNo != null and vendorNo != ''">
            ${_alias}VENDOR_NO = #{vendorNo},
        </if>
        <if test="vendorName != null and vendorName != ''">
            ${_alias}VENDOR_NAME = #{vendorName},
        </if>
        <if test="vendorNameEng != null and vendorNameEng != ''">
            ${_alias}VENDOR_NAME_ENG = #{vendorNameEng},
        </if>
        <if test="representName != null and representName != ''">
            ${_alias}REPRESENT_NAME = #{representName},
        </if>
        <if test="representRrn != null and representRrn != ''">
            ${_alias}REPRESENT_RRN = #{representRrn},
        </if>
        <if test="legalNo != null and legalNo != ''">
            ${_alias}LEGAL_NO = #{legalNo},
        </if>
        <if test="bizStatus != null and bizStatus != ''">
            ${_alias}BIZ_STATUS = #{bizStatus},
        </if>
        <if test="bizType != null and bizType != ''">
            ${_alias}BIZ_TYPE = #{bizType},
        </if>
        <if test="phone != null and phone != ''">
            ${_alias}PHONE = #{phone},
        </if>
        <if test="zipCode != null and zipCode != ''">
            ${_alias}ZIP_CODE = #{zipCode},
        </if>
        <if test="addr1 != null and addr1 != ''">
            ${_alias}ADDR1 = #{addr1},
        </if>
        <if test="addr2 != null and addr2 != ''">
            ${_alias}ADDR2 = #{addr2},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="slipEvidCntYn != null and slipEvidCntYn != ''">
            ${_alias}SLIP_EVID_CNT_YN = #{slipEvidCntYn},
        </if>
        <if test="taxEvidIssueYn != null and taxEvidIssueYn != ''">
            ${_alias}TAX_EVID_ISSUE_YN = #{taxEvidIssueYn},
        </if>
        <if test="vatInYn != null and vatInYn != ''">
            ${_alias}VAT_IN_YN = #{vatInYn},
        </if>
        <if test="vatOutYn != null and vatOutYn != ''">
            ${_alias}VAT_OUT_YN = #{vatOutYn},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeTaxcomp" parameterType="com.neofect.gts.core.services.am.domain.AmCodeTaxcomp">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_.updateAmCodeTaxcomp */

        UPDATE GTS2016.AM_CODE_TAXCOMP
        SET
             TAX_COMP_NAME = #{taxCompName}
            , TAX_OFFICE_CODE = #{taxOfficeCode}
            , VENDOR_NO = #{vendorNo}
            , VENDOR_NAME = #{vendorName}
            , VENDOR_NAME_ENG = #{vendorNameEng}
            , REPRESENT_NAME = #{representName}
            , REPRESENT_RRN = #{representRrn}
            , LEGAL_NO = #{legalNo}
            , BIZ_STATUS = #{bizStatus}
            , BIZ_TYPE = #{bizType}
            , PHONE = #{phone}
            , ZIP_CODE = #{zipCode}
            , ADDR1 = #{addr1}
            , ADDR2 = #{addr2}
            , USE_YN = #{useYn}
            , SLIP_EVID_CNT_YN = #{slipEvidCntYn}
            , TAX_EVID_ISSUE_YN = #{taxEvidIssueYn}
            , VAT_IN_YN = #{vatInYn}
            , VAT_OUT_YN = #{vatOutYn}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND TAX_COMP_CODE = #{taxCompCode}
    </update>

    <update id="updateAmCodeTaxcompDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeTaxcomp">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_.updateAmCodeTaxcompDynamic */

        UPDATE GTS2016.AM_CODE_TAXCOMP
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND TAX_COMP_CODE = #{taxCompCode}
    </update>

    <delete id="deleteAmCodeTaxcomp" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_.deleteAmCodeTaxcomp */

        DELETE FROM GTS2016.AM_CODE_TAXCOMP
        WHERE
            COMPANY_CODE = #{companyCode}
            AND TAX_COMP_CODE = #{taxCompCode}
    </delete>

    <sql id="insert_values_">

        #{taxCompName},
        #{taxOfficeCode},
        #{vendorNo},
        #{vendorName},
        #{vendorNameEng},
        #{representName},
        #{representRrn},
        #{legalNo},
        #{bizStatus},
        #{bizType},
        #{phone},
        #{zipCode},
        #{addr1},
        #{addr2},
        #{useYn},
        #{slipEvidCntYn},
        #{taxEvidIssueYn},
        #{vatInYn},
        #{vatOutYn},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeTaxcomp">
        /* com.neofect.gts.core.services.am.repository.AmCodeTaxcompRepository_.insertAmCodeTaxcomp */


        INSERT INTO GTS2016.AM_CODE_TAXCOMP
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

