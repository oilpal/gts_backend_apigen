<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCalcKindRepository_">

    <resultMap id="simpleAmCalcKindResult_" type="com.neofect.gts.core.services.am.domain.AmCalcKind">
        
        <id     property="companyCode" column="COMPANY_CODE"/>
        <!-- 산식종류코드 -->
        <id     property="calcKindCode" column="CALC_KIND_CODE"/>
        <!-- 원가종류코드 -->
        <result property="costKindCode" column="COST_KIND_CODE"/>
        <!-- 산식종류명칭 -->
        <result property="calcKindName" column="CALC_KIND_NAME"/>
        <!-- 표현금액단위 -->
        <result property="amtUnit" column="AMT_UNIT"/>
        <!-- 절사구분 -->
        <result property="cutDiv" column="CUT_DIV"/>
        <!-- 입력담당 -->
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        <!-- 입력일시 -->
        <result property="inputDate" column="INPUT_DATE"/>
        <!-- 변경담당 -->
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        <!-- 변경일시 -->
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCalcKindCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="calcKindCodes != null and !calcKindCodes.isEmpty()">
            AND ${_alias}CALC_KIND_CODE IN <foreach collection="calcKindCodes" item="calcKindCodeValue" open="(" close=")" separator=",">#{ calcKindCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="calcKindCode != null and calcKindCode != ''">
            AND ${_alias}CALC_KIND_CODE = #{calcKindCode}
        </if>
        <if test="costKindCode != null and costKindCode != ''">
            AND ${_alias}COST_KIND_CODE = #{costKindCode}
        </if>
        <if test="calcKindName != null and calcKindName != ''">
            AND ${_alias}CALC_KIND_NAME = #{calcKindName}
        </if>
        <if test="amtUnit != null">
            AND ${_alias}AMT_UNIT = #{amtUnit}
        </if>
        <if test="cutDiv != null and cutDiv != ''">
            AND ${_alias}CUT_DIV = #{cutDiv}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}CALC_KIND_CODE AS ${_asPrefix}CALC_KIND_CODE, ${_alias}COST_KIND_CODE AS ${_asPrefix}COST_KIND_CODE, ${_alias}CALC_KIND_NAME AS ${_asPrefix}CALC_KIND_NAME, ${_alias}AMT_UNIT AS ${_asPrefix}AMT_UNIT, ${_alias}CUT_DIV AS ${_asPrefix}CUT_DIV, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}CALC_KIND_CODE, ${_alias}COST_KIND_CODE, ${_alias}CALC_KIND_NAME, ${_alias}AMT_UNIT, ${_alias}CUT_DIV, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COST_KIND_CODE AS ${_asPrefix}COST_KIND_CODE, ${_alias}CALC_KIND_NAME AS ${_asPrefix}CALC_KIND_NAME, ${_alias}AMT_UNIT AS ${_asPrefix}AMT_UNIT, ${_alias}CUT_DIV AS ${_asPrefix}CUT_DIV, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COST_KIND_CODE, ${_alias}CALC_KIND_NAME, ${_alias}AMT_UNIT, ${_alias}CUT_DIV, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}CALC_KIND_CODE, ${_alias}COST_KIND_CODE, ${_alias}CALC_KIND_NAME, ${_alias}AMT_UNIT, ${_alias}CUT_DIV, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}COST_KIND_CODE, ${_alias}CALC_KIND_NAME, ${_alias}AMT_UNIT, ${_alias}CUT_DIV, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCalcKind" parameterType="long" resultMap="simpleAmCalcKindResult_">
        /* com.neofect.gts.core.services.am.repository.AmCalcKindRepository_.simpleGetAmCalcKind */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CALC_KIND
        WHERE
        COMPANY_CODE = #{companyCode}
        AND CALC_KIND_CODE = #{calcKindCode}
	</select>

    <select id="simpleListAmCalcKindCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCalcKindRepository_.simpleListAmCalcKindCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CALC_KIND
        <include refid="simpleAmCalcKindCondition_" />
    </select>

    <select id="simpleListAmCalcKind" resultMap="simpleAmCalcKindResult_">
        /* com.neofect.gts.core.services.am.repository.AmCalcKindRepository_.simpleListAmCalcKind */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CALC_KIND
        <include refid="simpleAmCalcKindCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="costKindCode != null and costKindCode != ''">
            ${_alias}COST_KIND_CODE = #{costKindCode},
        </if>
        <if test="calcKindName != null and calcKindName != ''">
            ${_alias}CALC_KIND_NAME = #{calcKindName},
        </if>
        <if test="amtUnit != null">
            ${_alias}AMT_UNIT = #{amtUnit},
        </if>
        <if test="cutDiv != null and cutDiv != ''">
            ${_alias}CUT_DIV = #{cutDiv},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCalcKind" parameterType="com.neofect.gts.core.services.am.domain.AmCalcKind">
        /* com.neofect.gts.core.services.am.repository.AmCalcKindRepository_.updateAmCalcKind */

        UPDATE GTS2016.AM_CALC_KIND
        SET
             COST_KIND_CODE = #{costKindCode}
            , CALC_KIND_NAME = #{calcKindName}
            , AMT_UNIT = #{amtUnit}
            , CUT_DIV = #{cutDiv}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND CALC_KIND_CODE = #{calcKindCode}
    </update>

    <update id="updateAmCalcKindDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCalcKind">
        /* com.neofect.gts.core.services.am.repository.AmCalcKindRepository_.updateAmCalcKindDynamic */

        UPDATE GTS2016.AM_CALC_KIND
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND CALC_KIND_CODE = #{calcKindCode}
    </update>

    <delete id="deleteAmCalcKind" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCalcKindRepository_.deleteAmCalcKind */

        DELETE FROM GTS2016.AM_CALC_KIND
        WHERE
            COMPANY_CODE = #{companyCode}
            AND CALC_KIND_CODE = #{calcKindCode}
    </delete>

    <sql id="insert_values_">

        #{costKindCode},
        #{calcKindName},
        #{amtUnit},
        #{cutDiv},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCalcKind">
        /* com.neofect.gts.core.services.am.repository.AmCalcKindRepository_.insertAmCalcKind */


        INSERT INTO GTS2016.AM_CALC_KIND
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

