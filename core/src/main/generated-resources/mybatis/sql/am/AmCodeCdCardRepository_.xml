<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_">

    <resultMap id="simpleAmCodeCdCardResult_" type="com.neofect.gts.core.services.am.domain.AmCodeCdCard">
        <!-- 신용카드번호 -->
        <id     property="cdCardNo" column="CD_CARD_NO"/>
        <!-- 회사코드 -->
        <id     property="companyCode" column="COMPANY_CODE"/>
        <!-- 신용카드회사코드 -->
        <result property="cdCardCompCode" column="CD_CARD_COMP_CODE"/>
        <!-- 신용카드소유자사번 -->
        <result property="cdCardOwner" column="CD_CARD_OWNER"/>
        <!-- 법인카드여부 -->
        <result property="corpCardYn" column="CORP_CARD_YN"/>
        <!-- 신용카드종류명칭 -->
        <result property="cdCardName" column="CD_CARD_NAME"/>
        <!-- 결재은행코드 -->
        <result property="bankHeadCode" column="BANK_HEAD_CODE"/>
        <!-- 결재계좌 -->
        <result property="depositNo" column="DEPOSIT_NO"/>
        <!-- 결재일 -->
        <result property="approvalDay" column="APPROVAL_DAY"/>
        
        <result property="limitAmt" column="LIMIT_AMT"/>
        
        <result property="paymentDate" column="PAYMENT_DATE"/>
        
        <result property="recoverDate" column="RECOVER_DATE"/>
        <!-- 입력담당 -->
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        <!-- 입력일시 -->
        <result property="inputDate" column="INPUT_DATE"/>
        <!-- 변경담당 -->
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        <!-- 변경일시 -->
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="endDate" column="END_DATE"/>
        
        <result property="custCode" column="CUST_CODE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeCdCardCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="cdCardNos != null and !cdCardNos.isEmpty()">
            AND ${_alias}CD_CARD_NO IN <foreach collection="cdCardNos" item="cdCardNoValue" open="(" close=")" separator=",">#{ cdCardNoValue }</foreach>
        </if>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="cdCardNo != null and cdCardNo != ''">
            AND ${_alias}CD_CARD_NO = #{cdCardNo}
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="cdCardCompCode != null and cdCardCompCode != ''">
            AND ${_alias}CD_CARD_COMP_CODE = #{cdCardCompCode}
        </if>
        <if test="cdCardOwner != null and cdCardOwner != ''">
            AND ${_alias}CD_CARD_OWNER = #{cdCardOwner}
        </if>
        <if test="corpCardYn != null and corpCardYn != ''">
            AND ${_alias}CORP_CARD_YN = #{corpCardYn}
        </if>
        <if test="cdCardName != null and cdCardName != ''">
            AND ${_alias}CD_CARD_NAME = #{cdCardName}
        </if>
        <if test="bankHeadCode != null and bankHeadCode != ''">
            AND ${_alias}BANK_HEAD_CODE = #{bankHeadCode}
        </if>
        <if test="depositNo != null and depositNo != ''">
            AND ${_alias}DEPOSIT_NO = #{depositNo}
        </if>
        <if test="approvalDay != null and approvalDay != ''">
            AND ${_alias}APPROVAL_DAY = #{approvalDay}
        </if>
        <if test="limitAmt != null">
            AND ${_alias}LIMIT_AMT = #{limitAmt}
        </if>
        <if test="paymentDate != null and paymentDate != ''">
            AND ${_alias}PAYMENT_DATE = #{paymentDate}
        </if>
        <if test="recoverDate != null and recoverDate != ''">
            AND ${_alias}RECOVER_DATE = #{recoverDate}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND ${_alias}END_DATE = #{endDate}
        </if>
        <if test="custCode != null and custCode != ''">
            AND ${_alias}CUST_CODE = #{custCode}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CD_CARD_NO AS ${_asPrefix}CD_CARD_NO, ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}CD_CARD_COMP_CODE AS ${_asPrefix}CD_CARD_COMP_CODE, ${_alias}CD_CARD_OWNER AS ${_asPrefix}CD_CARD_OWNER, ${_alias}CORP_CARD_YN AS ${_asPrefix}CORP_CARD_YN, ${_alias}CD_CARD_NAME AS ${_asPrefix}CD_CARD_NAME, ${_alias}BANK_HEAD_CODE AS ${_asPrefix}BANK_HEAD_CODE, ${_alias}DEPOSIT_NO AS ${_asPrefix}DEPOSIT_NO, ${_alias}APPROVAL_DAY AS ${_asPrefix}APPROVAL_DAY, ${_alias}LIMIT_AMT AS ${_asPrefix}LIMIT_AMT, ${_alias}PAYMENT_DATE AS ${_asPrefix}PAYMENT_DATE, ${_alias}RECOVER_DATE AS ${_asPrefix}RECOVER_DATE, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}CD_CARD_NO, ${_alias}COMPANY_CODE, ${_alias}CD_CARD_COMP_CODE, ${_alias}CD_CARD_OWNER, ${_alias}CORP_CARD_YN, ${_alias}CD_CARD_NAME, ${_alias}BANK_HEAD_CODE, ${_alias}DEPOSIT_NO, ${_alias}APPROVAL_DAY, ${_alias}LIMIT_AMT, ${_alias}PAYMENT_DATE, ${_alias}RECOVER_DATE, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}END_DATE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CD_CARD_COMP_CODE AS ${_asPrefix}CD_CARD_COMP_CODE, ${_alias}CD_CARD_OWNER AS ${_asPrefix}CD_CARD_OWNER, ${_alias}CORP_CARD_YN AS ${_asPrefix}CORP_CARD_YN, ${_alias}CD_CARD_NAME AS ${_asPrefix}CD_CARD_NAME, ${_alias}BANK_HEAD_CODE AS ${_asPrefix}BANK_HEAD_CODE, ${_alias}DEPOSIT_NO AS ${_asPrefix}DEPOSIT_NO, ${_alias}APPROVAL_DAY AS ${_asPrefix}APPROVAL_DAY, ${_alias}LIMIT_AMT AS ${_asPrefix}LIMIT_AMT, ${_alias}PAYMENT_DATE AS ${_asPrefix}PAYMENT_DATE, ${_alias}RECOVER_DATE AS ${_asPrefix}RECOVER_DATE, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}CD_CARD_COMP_CODE, ${_alias}CD_CARD_OWNER, ${_alias}CORP_CARD_YN, ${_alias}CD_CARD_NAME, ${_alias}BANK_HEAD_CODE, ${_alias}DEPOSIT_NO, ${_alias}APPROVAL_DAY, ${_alias}LIMIT_AMT, ${_alias}PAYMENT_DATE, ${_alias}RECOVER_DATE, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}END_DATE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}CD_CARD_NO, ${_alias}COMPANY_CODE, ${_alias}CD_CARD_COMP_CODE, ${_alias}CD_CARD_OWNER, ${_alias}CORP_CARD_YN, ${_alias}CD_CARD_NAME, ${_alias}BANK_HEAD_CODE, ${_alias}DEPOSIT_NO, ${_alias}APPROVAL_DAY, ${_alias}LIMIT_AMT, ${_alias}PAYMENT_DATE, ${_alias}RECOVER_DATE, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}END_DATE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}CD_CARD_COMP_CODE, ${_alias}CD_CARD_OWNER, ${_alias}CORP_CARD_YN, ${_alias}CD_CARD_NAME, ${_alias}BANK_HEAD_CODE, ${_alias}DEPOSIT_NO, ${_alias}APPROVAL_DAY, ${_alias}LIMIT_AMT, ${_alias}PAYMENT_DATE, ${_alias}RECOVER_DATE, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}END_DATE, ${_alias}CUST_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeCdCard" parameterType="long" resultMap="simpleAmCodeCdCardResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_.simpleGetAmCodeCdCard */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_CD_CARD
        WHERE
        CD_CARD_NO = #{cdCardNo}
        AND COMPANY_CODE = #{companyCode}
	</select>

    <select id="simpleListAmCodeCdCardCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_.simpleListAmCodeCdCardCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_CD_CARD
        <include refid="simpleAmCodeCdCardCondition_" />
    </select>

    <select id="simpleListAmCodeCdCard" resultMap="simpleAmCodeCdCardResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_.simpleListAmCodeCdCard */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_CD_CARD
        <include refid="simpleAmCodeCdCardCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="cdCardCompCode != null and cdCardCompCode != ''">
            ${_alias}CD_CARD_COMP_CODE = #{cdCardCompCode},
        </if>
        <if test="cdCardOwner != null and cdCardOwner != ''">
            ${_alias}CD_CARD_OWNER = #{cdCardOwner},
        </if>
        <if test="corpCardYn != null and corpCardYn != ''">
            ${_alias}CORP_CARD_YN = #{corpCardYn},
        </if>
        <if test="cdCardName != null and cdCardName != ''">
            ${_alias}CD_CARD_NAME = #{cdCardName},
        </if>
        <if test="bankHeadCode != null and bankHeadCode != ''">
            ${_alias}BANK_HEAD_CODE = #{bankHeadCode},
        </if>
        <if test="depositNo != null and depositNo != ''">
            ${_alias}DEPOSIT_NO = #{depositNo},
        </if>
        <if test="approvalDay != null and approvalDay != ''">
            ${_alias}APPROVAL_DAY = #{approvalDay},
        </if>
        <if test="limitAmt != null">
            ${_alias}LIMIT_AMT = #{limitAmt},
        </if>
        <if test="paymentDate != null and paymentDate != ''">
            ${_alias}PAYMENT_DATE = #{paymentDate},
        </if>
        <if test="recoverDate != null and recoverDate != ''">
            ${_alias}RECOVER_DATE = #{recoverDate},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="endDate != null and endDate != ''">
            ${_alias}END_DATE = #{endDate},
        </if>
        <if test="custCode != null and custCode != ''">
            ${_alias}CUST_CODE = #{custCode},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeCdCard" parameterType="com.neofect.gts.core.services.am.domain.AmCodeCdCard">
        /* com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_.updateAmCodeCdCard */

        UPDATE GTS2016.AM_CODE_CD_CARD
        SET
             CD_CARD_COMP_CODE = #{cdCardCompCode}
            , CD_CARD_OWNER = #{cdCardOwner}
            , CORP_CARD_YN = #{corpCardYn}
            , CD_CARD_NAME = #{cdCardName}
            , BANK_HEAD_CODE = #{bankHeadCode}
            , DEPOSIT_NO = #{depositNo}
            , APPROVAL_DAY = #{approvalDay}
            , LIMIT_AMT = #{limitAmt}
            , PAYMENT_DATE = #{paymentDate}
            , RECOVER_DATE = #{recoverDate}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , END_DATE = #{endDate}
            , CUST_CODE = #{custCode}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            CD_CARD_NO = #{cdCardNo}
            AND COMPANY_CODE = #{companyCode}
    </update>

    <update id="updateAmCodeCdCardDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeCdCard">
        /* com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_.updateAmCodeCdCardDynamic */

        UPDATE GTS2016.AM_CODE_CD_CARD
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            CD_CARD_NO = #{cdCardNo}
            AND COMPANY_CODE = #{companyCode}
    </update>

    <delete id="deleteAmCodeCdCard" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_.deleteAmCodeCdCard */

        DELETE FROM GTS2016.AM_CODE_CD_CARD
        WHERE
            CD_CARD_NO = #{cdCardNo}
            AND COMPANY_CODE = #{companyCode}
    </delete>

    <sql id="insert_values_">

        #{cdCardCompCode},
        #{cdCardOwner},
        #{corpCardYn},
        #{cdCardName},
        #{bankHeadCode},
        #{depositNo},
        #{approvalDay},
        #{limitAmt},
        #{paymentDate},
        #{recoverDate},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{endDate},
        #{custCode},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeCdCard">
        /* com.neofect.gts.core.services.am.repository.AmCodeCdCardRepository_.insertAmCodeCdCard */


        INSERT INTO GTS2016.AM_CODE_CD_CARD
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

