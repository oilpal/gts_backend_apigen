<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_">

    <resultMap id="simpleAmCodeSlipKindResult_" type="com.neofect.gts.core.services.am.domain.AmCodeSlipKind">
        <!-- 전표종류코드 -->
        <id     property="id" column="SLIP_KIND_CODE"/>
        <!-- 전표종류명칭 -->
        <result property="slipKindName" column="SLIP_KIND_NAME"/>
        <!-- 전표처리시스템 -->
        <result property="slipProcessDiv" column="SLIP_PROCESS_DIV"/>
        <!-- 자동발생여부 -->
        <result property="autoYn" column="AUTO_YN"/>
        <!-- 재무결산구분 -->
        <result property="financeDiv" column="FINANCE_DIV"/>
        <!-- 가전표수정구분 -->
        <result property="deleteYn" column="DELETE_YN"/>
        <!-- 매출증빙발행처리구분 -->
        <result property="taxEvidIssueDiv" column="TAX_EVID_ISSUE_DIV"/>
        <!-- 원가이체처리여부 -->
        <result property="costTransYn" column="COST_TRANS_YN"/>
        <!-- 원가이체확정여부 -->
        <result property="costConfirmYn" column="COST_CONFIRM_YN"/>
        <!-- 가전표경유여부 -->
        <result property="workPassYn" column="WORK_PASS_YN"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeSlipKindCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}SLIP_KIND_CODE IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null and id != ''">
            AND ${_alias}SLIP_KIND_CODE = #{id}
        </if>
        <if test="slipKindName != null and slipKindName != ''">
            AND ${_alias}SLIP_KIND_NAME = #{slipKindName}
        </if>
        <if test="slipProcessDiv != null and slipProcessDiv != ''">
            AND ${_alias}SLIP_PROCESS_DIV = #{slipProcessDiv}
        </if>
        <if test="autoYn != null and autoYn != ''">
            AND ${_alias}AUTO_YN = #{autoYn}
        </if>
        <if test="financeDiv != null and financeDiv != ''">
            AND ${_alias}FINANCE_DIV = #{financeDiv}
        </if>
        <if test="deleteYn != null and deleteYn != ''">
            AND ${_alias}DELETE_YN = #{deleteYn}
        </if>
        <if test="taxEvidIssueDiv != null and taxEvidIssueDiv != ''">
            AND ${_alias}TAX_EVID_ISSUE_DIV = #{taxEvidIssueDiv}
        </if>
        <if test="costTransYn != null and costTransYn != ''">
            AND ${_alias}COST_TRANS_YN = #{costTransYn}
        </if>
        <if test="costConfirmYn != null and costConfirmYn != ''">
            AND ${_alias}COST_CONFIRM_YN = #{costConfirmYn}
        </if>
        <if test="workPassYn != null and workPassYn != ''">
            AND ${_alias}WORK_PASS_YN = #{workPassYn}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SLIP_KIND_CODE AS ${_asPrefix}SLIP_KIND_CODE, ${_alias}SLIP_KIND_NAME AS ${_asPrefix}SLIP_KIND_NAME, ${_alias}SLIP_PROCESS_DIV AS ${_asPrefix}SLIP_PROCESS_DIV, ${_alias}AUTO_YN AS ${_asPrefix}AUTO_YN, ${_alias}FINANCE_DIV AS ${_asPrefix}FINANCE_DIV, ${_alias}DELETE_YN AS ${_asPrefix}DELETE_YN, ${_alias}TAX_EVID_ISSUE_DIV AS ${_asPrefix}TAX_EVID_ISSUE_DIV, ${_alias}COST_TRANS_YN AS ${_asPrefix}COST_TRANS_YN, ${_alias}COST_CONFIRM_YN AS ${_asPrefix}COST_CONFIRM_YN, ${_alias}WORK_PASS_YN AS ${_asPrefix}WORK_PASS_YN, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}SLIP_KIND_CODE, ${_alias}SLIP_KIND_NAME, ${_alias}SLIP_PROCESS_DIV, ${_alias}AUTO_YN, ${_alias}FINANCE_DIV, ${_alias}DELETE_YN, ${_alias}TAX_EVID_ISSUE_DIV, ${_alias}COST_TRANS_YN, ${_alias}COST_CONFIRM_YN, ${_alias}WORK_PASS_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SLIP_KIND_NAME AS ${_asPrefix}SLIP_KIND_NAME, ${_alias}SLIP_PROCESS_DIV AS ${_asPrefix}SLIP_PROCESS_DIV, ${_alias}AUTO_YN AS ${_asPrefix}AUTO_YN, ${_alias}FINANCE_DIV AS ${_asPrefix}FINANCE_DIV, ${_alias}DELETE_YN AS ${_asPrefix}DELETE_YN, ${_alias}TAX_EVID_ISSUE_DIV AS ${_asPrefix}TAX_EVID_ISSUE_DIV, ${_alias}COST_TRANS_YN AS ${_asPrefix}COST_TRANS_YN, ${_alias}COST_CONFIRM_YN AS ${_asPrefix}COST_CONFIRM_YN, ${_alias}WORK_PASS_YN AS ${_asPrefix}WORK_PASS_YN, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}SLIP_KIND_NAME, ${_alias}SLIP_PROCESS_DIV, ${_alias}AUTO_YN, ${_alias}FINANCE_DIV, ${_alias}DELETE_YN, ${_alias}TAX_EVID_ISSUE_DIV, ${_alias}COST_TRANS_YN, ${_alias}COST_CONFIRM_YN, ${_alias}WORK_PASS_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}SLIP_KIND_CODE, ${_alias}SLIP_KIND_NAME, ${_alias}SLIP_PROCESS_DIV, ${_alias}AUTO_YN, ${_alias}FINANCE_DIV, ${_alias}DELETE_YN, ${_alias}TAX_EVID_ISSUE_DIV, ${_alias}COST_TRANS_YN, ${_alias}COST_CONFIRM_YN, ${_alias}WORK_PASS_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}SLIP_KIND_NAME, ${_alias}SLIP_PROCESS_DIV, ${_alias}AUTO_YN, ${_alias}FINANCE_DIV, ${_alias}DELETE_YN, ${_alias}TAX_EVID_ISSUE_DIV, ${_alias}COST_TRANS_YN, ${_alias}COST_CONFIRM_YN, ${_alias}WORK_PASS_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeSlipKind" parameterType="long" resultMap="simpleAmCodeSlipKindResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_.simpleGetAmCodeSlipKind */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_SLIP_KIND
        WHERE
        SLIP_KIND_CODE = #{id}
	</select>

    <select id="simpleListAmCodeSlipKindCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_.simpleListAmCodeSlipKindCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_SLIP_KIND
        <include refid="simpleAmCodeSlipKindCondition_" />
    </select>

    <select id="simpleListAmCodeSlipKind" resultMap="simpleAmCodeSlipKindResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_.simpleListAmCodeSlipKind */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_SLIP_KIND
        <include refid="simpleAmCodeSlipKindCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="slipKindName != null and slipKindName != ''">
            ${_alias}SLIP_KIND_NAME = #{slipKindName},
        </if>
        <if test="slipProcessDiv != null and slipProcessDiv != ''">
            ${_alias}SLIP_PROCESS_DIV = #{slipProcessDiv},
        </if>
        <if test="autoYn != null and autoYn != ''">
            ${_alias}AUTO_YN = #{autoYn},
        </if>
        <if test="financeDiv != null and financeDiv != ''">
            ${_alias}FINANCE_DIV = #{financeDiv},
        </if>
        <if test="deleteYn != null and deleteYn != ''">
            ${_alias}DELETE_YN = #{deleteYn},
        </if>
        <if test="taxEvidIssueDiv != null and taxEvidIssueDiv != ''">
            ${_alias}TAX_EVID_ISSUE_DIV = #{taxEvidIssueDiv},
        </if>
        <if test="costTransYn != null and costTransYn != ''">
            ${_alias}COST_TRANS_YN = #{costTransYn},
        </if>
        <if test="costConfirmYn != null and costConfirmYn != ''">
            ${_alias}COST_CONFIRM_YN = #{costConfirmYn},
        </if>
        <if test="workPassYn != null and workPassYn != ''">
            ${_alias}WORK_PASS_YN = #{workPassYn},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeSlipKind" parameterType="com.neofect.gts.core.services.am.domain.AmCodeSlipKind">
        /* com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_.updateAmCodeSlipKind */

        UPDATE GTS2016.AM_CODE_SLIP_KIND
        SET
             SLIP_KIND_NAME = #{slipKindName}
            , SLIP_PROCESS_DIV = #{slipProcessDiv}
            , AUTO_YN = #{autoYn}
            , FINANCE_DIV = #{financeDiv}
            , DELETE_YN = #{deleteYn}
            , TAX_EVID_ISSUE_DIV = #{taxEvidIssueDiv}
            , COST_TRANS_YN = #{costTransYn}
            , COST_CONFIRM_YN = #{costConfirmYn}
            , WORK_PASS_YN = #{workPassYn}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            SLIP_KIND_CODE = #{id}
    </update>

    <update id="updateAmCodeSlipKindDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeSlipKind">
        /* com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_.updateAmCodeSlipKindDynamic */

        UPDATE GTS2016.AM_CODE_SLIP_KIND
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            SLIP_KIND_CODE = #{id}
    </update>

    <delete id="deleteAmCodeSlipKind" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_.deleteAmCodeSlipKind */

        DELETE FROM GTS2016.AM_CODE_SLIP_KIND
        WHERE
            SLIP_KIND_CODE = #{id}
    </delete>

    <sql id="insert_values_">

        #{slipKindName},
        #{slipProcessDiv},
        #{autoYn},
        #{financeDiv},
        #{deleteYn},
        #{taxEvidIssueDiv},
        #{costTransYn},
        #{costConfirmYn},
        #{workPassYn},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeSlipKind">
        /* com.neofect.gts.core.services.am.repository.AmCodeSlipKindRepository_.insertAmCodeSlipKind */


        INSERT INTO GTS2016.AM_CODE_SLIP_KIND
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

