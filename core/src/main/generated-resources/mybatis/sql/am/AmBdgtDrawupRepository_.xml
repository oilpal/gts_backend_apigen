<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_">

    <resultMap id="simpleAmBdgtDrawupResult_" type="com.neofect.gts.core.services.am.domain.AmBdgtDrawup">
        
        <id     property="companyCode" column="COMPANY_CODE"/>
        
        <id     property="deptCode" column="DEPT_CODE"/>
        
        <id     property="projCode" column="PROJ_CODE"/>
        
        <id     property="acntCode" column="ACNT_CODE"/>
        
        <id     property="drawupYymm" column="DRAWUP_YYMM"/>
        
        <result property="approveYn" column="APPROVE_YN"/>
        
        <result property="orgAmt" column="ORG_AMT"/>
        
        <result property="confirmAmt" column="CONFIRM_AMT"/>
        
        <result property="addAmt" column="ADD_AMT"/>
        
        <result property="adjustAmt" column="ADJUST_AMT"/>
        
        <result property="resultAmt" column="RESULT_AMT"/>
        
        <result property="execAmt" column="EXEC_AMT"/>
        
        <result property="bdgtQuarter" column="BDGT_QUARTER"/>
        
        <result property="quarterAmt" column="QUARTER_AMT"/>
        
        <result property="approveDutyId" column="APPROVE_DUTY_ID"/>
        
        <result property="approveDate" column="APPROVE_DATE"/>
        
        <result property="remark" column="REMARK"/>
        
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        
        <result property="inputDate" column="INPUT_DATE"/>
        
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmBdgtDrawupCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="deptCodes != null and !deptCodes.isEmpty()">
            AND ${_alias}DEPT_CODE IN <foreach collection="deptCodes" item="deptCodeValue" open="(" close=")" separator=",">#{ deptCodeValue }</foreach>
        </if>
        <if test="projCodes != null and !projCodes.isEmpty()">
            AND ${_alias}PROJ_CODE IN <foreach collection="projCodes" item="projCodeValue" open="(" close=")" separator=",">#{ projCodeValue }</foreach>
        </if>
        <if test="acntCodes != null and !acntCodes.isEmpty()">
            AND ${_alias}ACNT_CODE IN <foreach collection="acntCodes" item="acntCodeValue" open="(" close=")" separator=",">#{ acntCodeValue }</foreach>
        </if>
        <if test="drawupYymms != null and !drawupYymms.isEmpty()">
            AND ${_alias}DRAWUP_YYMM IN <foreach collection="drawupYymms" item="drawupYymmValue" open="(" close=")" separator=",">#{ drawupYymmValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="deptCode != null and deptCode != ''">
            AND ${_alias}DEPT_CODE = #{deptCode}
        </if>
        <if test="projCode != null and projCode != ''">
            AND ${_alias}PROJ_CODE = #{projCode}
        </if>
        <if test="acntCode != null and acntCode != ''">
            AND ${_alias}ACNT_CODE = #{acntCode}
        </if>
        <if test="drawupYymm != null and drawupYymm != ''">
            AND ${_alias}DRAWUP_YYMM = #{drawupYymm}
        </if>
        <if test="approveYn != null and approveYn != ''">
            AND ${_alias}APPROVE_YN = #{approveYn}
        </if>
        <if test="orgAmt != null">
            AND ${_alias}ORG_AMT = #{orgAmt}
        </if>
        <if test="confirmAmt != null">
            AND ${_alias}CONFIRM_AMT = #{confirmAmt}
        </if>
        <if test="addAmt != null">
            AND ${_alias}ADD_AMT = #{addAmt}
        </if>
        <if test="adjustAmt != null">
            AND ${_alias}ADJUST_AMT = #{adjustAmt}
        </if>
        <if test="resultAmt != null">
            AND ${_alias}RESULT_AMT = #{resultAmt}
        </if>
        <if test="execAmt != null">
            AND ${_alias}EXEC_AMT = #{execAmt}
        </if>
        <if test="bdgtQuarter != null and bdgtQuarter != ''">
            AND ${_alias}BDGT_QUARTER = #{bdgtQuarter}
        </if>
        <if test="quarterAmt != null">
            AND ${_alias}QUARTER_AMT = #{quarterAmt}
        </if>
        <if test="approveDutyId != null and approveDutyId != ''">
            AND ${_alias}APPROVE_DUTY_ID = #{approveDutyId}
        </if>
        <if test="approveDate != null and approveDate != ''">
            AND ${_alias}APPROVE_DATE = #{approveDate}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}DEPT_CODE AS ${_asPrefix}DEPT_CODE, ${_alias}PROJ_CODE AS ${_asPrefix}PROJ_CODE, ${_alias}ACNT_CODE AS ${_asPrefix}ACNT_CODE, ${_alias}DRAWUP_YYMM AS ${_asPrefix}DRAWUP_YYMM, ${_alias}APPROVE_YN AS ${_asPrefix}APPROVE_YN, ${_alias}ORG_AMT AS ${_asPrefix}ORG_AMT, ${_alias}CONFIRM_AMT AS ${_asPrefix}CONFIRM_AMT, ${_alias}ADD_AMT AS ${_asPrefix}ADD_AMT, ${_alias}ADJUST_AMT AS ${_asPrefix}ADJUST_AMT, ${_alias}RESULT_AMT AS ${_asPrefix}RESULT_AMT, ${_alias}EXEC_AMT AS ${_asPrefix}EXEC_AMT, ${_alias}BDGT_QUARTER AS ${_asPrefix}BDGT_QUARTER, ${_alias}QUARTER_AMT AS ${_asPrefix}QUARTER_AMT, ${_alias}APPROVE_DUTY_ID AS ${_asPrefix}APPROVE_DUTY_ID, ${_alias}APPROVE_DATE AS ${_asPrefix}APPROVE_DATE, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}DEPT_CODE, ${_alias}PROJ_CODE, ${_alias}ACNT_CODE, ${_alias}DRAWUP_YYMM, ${_alias}APPROVE_YN, ${_alias}ORG_AMT, ${_alias}CONFIRM_AMT, ${_alias}ADD_AMT, ${_alias}ADJUST_AMT, ${_alias}RESULT_AMT, ${_alias}EXEC_AMT, ${_alias}BDGT_QUARTER, ${_alias}QUARTER_AMT, ${_alias}APPROVE_DUTY_ID, ${_alias}APPROVE_DATE, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}APPROVE_YN AS ${_asPrefix}APPROVE_YN, ${_alias}ORG_AMT AS ${_asPrefix}ORG_AMT, ${_alias}CONFIRM_AMT AS ${_asPrefix}CONFIRM_AMT, ${_alias}ADD_AMT AS ${_asPrefix}ADD_AMT, ${_alias}ADJUST_AMT AS ${_asPrefix}ADJUST_AMT, ${_alias}RESULT_AMT AS ${_asPrefix}RESULT_AMT, ${_alias}EXEC_AMT AS ${_asPrefix}EXEC_AMT, ${_alias}BDGT_QUARTER AS ${_asPrefix}BDGT_QUARTER, ${_alias}QUARTER_AMT AS ${_asPrefix}QUARTER_AMT, ${_alias}APPROVE_DUTY_ID AS ${_asPrefix}APPROVE_DUTY_ID, ${_alias}APPROVE_DATE AS ${_asPrefix}APPROVE_DATE, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}APPROVE_YN, ${_alias}ORG_AMT, ${_alias}CONFIRM_AMT, ${_alias}ADD_AMT, ${_alias}ADJUST_AMT, ${_alias}RESULT_AMT, ${_alias}EXEC_AMT, ${_alias}BDGT_QUARTER, ${_alias}QUARTER_AMT, ${_alias}APPROVE_DUTY_ID, ${_alias}APPROVE_DATE, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}DEPT_CODE, ${_alias}PROJ_CODE, ${_alias}ACNT_CODE, ${_alias}DRAWUP_YYMM, ${_alias}APPROVE_YN, ${_alias}ORG_AMT, ${_alias}CONFIRM_AMT, ${_alias}ADD_AMT, ${_alias}ADJUST_AMT, ${_alias}RESULT_AMT, ${_alias}EXEC_AMT, ${_alias}BDGT_QUARTER, ${_alias}QUARTER_AMT, ${_alias}APPROVE_DUTY_ID, ${_alias}APPROVE_DATE, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}APPROVE_YN, ${_alias}ORG_AMT, ${_alias}CONFIRM_AMT, ${_alias}ADD_AMT, ${_alias}ADJUST_AMT, ${_alias}RESULT_AMT, ${_alias}EXEC_AMT, ${_alias}BDGT_QUARTER, ${_alias}QUARTER_AMT, ${_alias}APPROVE_DUTY_ID, ${_alias}APPROVE_DATE, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmBdgtDrawup" parameterType="long" resultMap="simpleAmBdgtDrawupResult_">
        /* com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_.simpleGetAmBdgtDrawup */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_BDGT_DRAWUP
        WHERE
        COMPANY_CODE = #{companyCode}
        AND DEPT_CODE = #{deptCode}
        AND PROJ_CODE = #{projCode}
        AND ACNT_CODE = #{acntCode}
        AND DRAWUP_YYMM = #{drawupYymm}
	</select>

    <select id="simpleListAmBdgtDrawupCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_.simpleListAmBdgtDrawupCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_BDGT_DRAWUP
        <include refid="simpleAmBdgtDrawupCondition_" />
    </select>

    <select id="simpleListAmBdgtDrawup" resultMap="simpleAmBdgtDrawupResult_">
        /* com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_.simpleListAmBdgtDrawup */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_BDGT_DRAWUP
        <include refid="simpleAmBdgtDrawupCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="approveYn != null and approveYn != ''">
            ${_alias}APPROVE_YN = #{approveYn},
        </if>
        <if test="orgAmt != null">
            ${_alias}ORG_AMT = #{orgAmt},
        </if>
        <if test="confirmAmt != null">
            ${_alias}CONFIRM_AMT = #{confirmAmt},
        </if>
        <if test="addAmt != null">
            ${_alias}ADD_AMT = #{addAmt},
        </if>
        <if test="adjustAmt != null">
            ${_alias}ADJUST_AMT = #{adjustAmt},
        </if>
        <if test="resultAmt != null">
            ${_alias}RESULT_AMT = #{resultAmt},
        </if>
        <if test="execAmt != null">
            ${_alias}EXEC_AMT = #{execAmt},
        </if>
        <if test="bdgtQuarter != null and bdgtQuarter != ''">
            ${_alias}BDGT_QUARTER = #{bdgtQuarter},
        </if>
        <if test="quarterAmt != null">
            ${_alias}QUARTER_AMT = #{quarterAmt},
        </if>
        <if test="approveDutyId != null and approveDutyId != ''">
            ${_alias}APPROVE_DUTY_ID = #{approveDutyId},
        </if>
        <if test="approveDate != null and approveDate != ''">
            ${_alias}APPROVE_DATE = #{approveDate},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmBdgtDrawup" parameterType="com.neofect.gts.core.services.am.domain.AmBdgtDrawup">
        /* com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_.updateAmBdgtDrawup */

        UPDATE GTS2016.AM_BDGT_DRAWUP
        SET
             APPROVE_YN = #{approveYn}
            , ORG_AMT = #{orgAmt}
            , CONFIRM_AMT = #{confirmAmt}
            , ADD_AMT = #{addAmt}
            , ADJUST_AMT = #{adjustAmt}
            , RESULT_AMT = #{resultAmt}
            , EXEC_AMT = #{execAmt}
            , BDGT_QUARTER = #{bdgtQuarter}
            , QUARTER_AMT = #{quarterAmt}
            , APPROVE_DUTY_ID = #{approveDutyId}
            , APPROVE_DATE = #{approveDate}
            , REMARK = #{remark}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND DEPT_CODE = #{deptCode}
            AND PROJ_CODE = #{projCode}
            AND ACNT_CODE = #{acntCode}
            AND DRAWUP_YYMM = #{drawupYymm}
    </update>

    <update id="updateAmBdgtDrawupDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmBdgtDrawup">
        /* com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_.updateAmBdgtDrawupDynamic */

        UPDATE GTS2016.AM_BDGT_DRAWUP
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND DEPT_CODE = #{deptCode}
            AND PROJ_CODE = #{projCode}
            AND ACNT_CODE = #{acntCode}
            AND DRAWUP_YYMM = #{drawupYymm}
    </update>

    <delete id="deleteAmBdgtDrawup" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_.deleteAmBdgtDrawup */

        DELETE FROM GTS2016.AM_BDGT_DRAWUP
        WHERE
            COMPANY_CODE = #{companyCode}
            AND DEPT_CODE = #{deptCode}
            AND PROJ_CODE = #{projCode}
            AND ACNT_CODE = #{acntCode}
            AND DRAWUP_YYMM = #{drawupYymm}
    </delete>

    <sql id="insert_values_">

        #{approveYn},
        #{orgAmt},
        #{confirmAmt},
        #{addAmt},
        #{adjustAmt},
        #{resultAmt},
        #{execAmt},
        #{bdgtQuarter},
        #{quarterAmt},
        #{approveDutyId},
        #{approveDate},
        #{remark},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmBdgtDrawup">
        /* com.neofect.gts.core.services.am.repository.AmBdgtDrawupRepository_.insertAmBdgtDrawup */


        INSERT INTO GTS2016.AM_BDGT_DRAWUP
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

