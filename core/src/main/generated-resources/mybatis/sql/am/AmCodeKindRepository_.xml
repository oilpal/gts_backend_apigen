<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeKindRepository_">

    <resultMap id="simpleAmCodeKindResult_" type="com.neofect.gts.core.services.am.domain.AmCodeKind">
        <!-- 회사코드 -->
        <id     property="companyCode" column="COMPANY_CODE"/>
        <!-- 고정자산종류코드 -->
        <id     property="faKindCode" column="FA_KIND_CODE"/>
        <!-- 고정자산종류명칭 -->
        <result property="faKindName" column="FA_KIND_NAME"/>
        <!-- 고정자산상각구분 -->
        <result property="faRepayDiv" column="FA_REPAY_DIV"/>
        <!-- 계정코드 -->
        <result property="acntCode" column="ACNT_CODE"/>
        <!-- 계정코드_충당금 -->
        <result property="acntCodeAppro" column="ACNT_CODE_APPRO"/>
        <!-- 고정자산분류 -->
        <result property="faDiv" column="FA_DIV"/>
        <!-- 계정코드_국고보조금 -->
        <result property="acntCodeTreasury" column="ACNT_CODE_TREASURY"/>
        <!-- 유/무형자산구분 -->
        <result property="materialityAssetTag" column="MATERIALITY_ASSET_TAG"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeKindCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="faKindCodes != null and !faKindCodes.isEmpty()">
            AND ${_alias}FA_KIND_CODE IN <foreach collection="faKindCodes" item="faKindCodeValue" open="(" close=")" separator=",">#{ faKindCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="faKindCode != null and faKindCode != ''">
            AND ${_alias}FA_KIND_CODE = #{faKindCode}
        </if>
        <if test="faKindName != null and faKindName != ''">
            AND ${_alias}FA_KIND_NAME = #{faKindName}
        </if>
        <if test="faRepayDiv != null and faRepayDiv != ''">
            AND ${_alias}FA_REPAY_DIV = #{faRepayDiv}
        </if>
        <if test="acntCode != null and acntCode != ''">
            AND ${_alias}ACNT_CODE = #{acntCode}
        </if>
        <if test="acntCodeAppro != null and acntCodeAppro != ''">
            AND ${_alias}ACNT_CODE_APPRO = #{acntCodeAppro}
        </if>
        <if test="faDiv != null and faDiv != ''">
            AND ${_alias}FA_DIV = #{faDiv}
        </if>
        <if test="acntCodeTreasury != null and acntCodeTreasury != ''">
            AND ${_alias}ACNT_CODE_TREASURY = #{acntCodeTreasury}
        </if>
        <if test="materialityAssetTag != null and materialityAssetTag != ''">
            AND ${_alias}MATERIALITY_ASSET_TAG = #{materialityAssetTag}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}FA_KIND_CODE AS ${_asPrefix}FA_KIND_CODE, ${_alias}FA_KIND_NAME AS ${_asPrefix}FA_KIND_NAME, ${_alias}FA_REPAY_DIV AS ${_asPrefix}FA_REPAY_DIV, ${_alias}ACNT_CODE AS ${_asPrefix}ACNT_CODE, ${_alias}ACNT_CODE_APPRO AS ${_asPrefix}ACNT_CODE_APPRO, ${_alias}FA_DIV AS ${_asPrefix}FA_DIV, ${_alias}ACNT_CODE_TREASURY AS ${_asPrefix}ACNT_CODE_TREASURY, ${_alias}MATERIALITY_ASSET_TAG AS ${_asPrefix}MATERIALITY_ASSET_TAG, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}FA_KIND_CODE, ${_alias}FA_KIND_NAME, ${_alias}FA_REPAY_DIV, ${_alias}ACNT_CODE, ${_alias}ACNT_CODE_APPRO, ${_alias}FA_DIV, ${_alias}ACNT_CODE_TREASURY, ${_alias}MATERIALITY_ASSET_TAG, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}FA_KIND_NAME AS ${_asPrefix}FA_KIND_NAME, ${_alias}FA_REPAY_DIV AS ${_asPrefix}FA_REPAY_DIV, ${_alias}ACNT_CODE AS ${_asPrefix}ACNT_CODE, ${_alias}ACNT_CODE_APPRO AS ${_asPrefix}ACNT_CODE_APPRO, ${_alias}FA_DIV AS ${_asPrefix}FA_DIV, ${_alias}ACNT_CODE_TREASURY AS ${_asPrefix}ACNT_CODE_TREASURY, ${_alias}MATERIALITY_ASSET_TAG AS ${_asPrefix}MATERIALITY_ASSET_TAG, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}FA_KIND_NAME, ${_alias}FA_REPAY_DIV, ${_alias}ACNT_CODE, ${_alias}ACNT_CODE_APPRO, ${_alias}FA_DIV, ${_alias}ACNT_CODE_TREASURY, ${_alias}MATERIALITY_ASSET_TAG, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}FA_KIND_CODE, ${_alias}FA_KIND_NAME, ${_alias}FA_REPAY_DIV, ${_alias}ACNT_CODE, ${_alias}ACNT_CODE_APPRO, ${_alias}FA_DIV, ${_alias}ACNT_CODE_TREASURY, ${_alias}MATERIALITY_ASSET_TAG, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}FA_KIND_NAME, ${_alias}FA_REPAY_DIV, ${_alias}ACNT_CODE, ${_alias}ACNT_CODE_APPRO, ${_alias}FA_DIV, ${_alias}ACNT_CODE_TREASURY, ${_alias}MATERIALITY_ASSET_TAG, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeKind" parameterType="long" resultMap="simpleAmCodeKindResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeKindRepository_.simpleGetAmCodeKind */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_KIND
        WHERE
        COMPANY_CODE = #{companyCode}
        AND FA_KIND_CODE = #{faKindCode}
	</select>

    <select id="simpleListAmCodeKindCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeKindRepository_.simpleListAmCodeKindCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_KIND
        <include refid="simpleAmCodeKindCondition_" />
    </select>

    <select id="simpleListAmCodeKind" resultMap="simpleAmCodeKindResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeKindRepository_.simpleListAmCodeKind */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_KIND
        <include refid="simpleAmCodeKindCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="faKindName != null and faKindName != ''">
            ${_alias}FA_KIND_NAME = #{faKindName},
        </if>
        <if test="faRepayDiv != null and faRepayDiv != ''">
            ${_alias}FA_REPAY_DIV = #{faRepayDiv},
        </if>
        <if test="acntCode != null and acntCode != ''">
            ${_alias}ACNT_CODE = #{acntCode},
        </if>
        <if test="acntCodeAppro != null and acntCodeAppro != ''">
            ${_alias}ACNT_CODE_APPRO = #{acntCodeAppro},
        </if>
        <if test="faDiv != null and faDiv != ''">
            ${_alias}FA_DIV = #{faDiv},
        </if>
        <if test="acntCodeTreasury != null and acntCodeTreasury != ''">
            ${_alias}ACNT_CODE_TREASURY = #{acntCodeTreasury},
        </if>
        <if test="materialityAssetTag != null and materialityAssetTag != ''">
            ${_alias}MATERIALITY_ASSET_TAG = #{materialityAssetTag},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeKind" parameterType="com.neofect.gts.core.services.am.domain.AmCodeKind">
        /* com.neofect.gts.core.services.am.repository.AmCodeKindRepository_.updateAmCodeKind */

        UPDATE GTS2016.AM_CODE_KIND
        SET
             FA_KIND_NAME = #{faKindName}
            , FA_REPAY_DIV = #{faRepayDiv}
            , ACNT_CODE = #{acntCode}
            , ACNT_CODE_APPRO = #{acntCodeAppro}
            , FA_DIV = #{faDiv}
            , ACNT_CODE_TREASURY = #{acntCodeTreasury}
            , MATERIALITY_ASSET_TAG = #{materialityAssetTag}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND FA_KIND_CODE = #{faKindCode}
    </update>

    <update id="updateAmCodeKindDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeKind">
        /* com.neofect.gts.core.services.am.repository.AmCodeKindRepository_.updateAmCodeKindDynamic */

        UPDATE GTS2016.AM_CODE_KIND
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND FA_KIND_CODE = #{faKindCode}
    </update>

    <delete id="deleteAmCodeKind" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeKindRepository_.deleteAmCodeKind */

        DELETE FROM GTS2016.AM_CODE_KIND
        WHERE
            COMPANY_CODE = #{companyCode}
            AND FA_KIND_CODE = #{faKindCode}
    </delete>

    <sql id="insert_values_">

        #{faKindName},
        #{faRepayDiv},
        #{acntCode},
        #{acntCodeAppro},
        #{faDiv},
        #{acntCodeTreasury},
        #{materialityAssetTag},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeKind">
        /* com.neofect.gts.core.services.am.repository.AmCodeKindRepository_.insertAmCodeKind */


        INSERT INTO GTS2016.AM_CODE_KIND
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

