<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_">

    <resultMap id="simpleAmCodeAcntMastResult_" type="com.neofect.gts.core.services.am.domain.AmCodeAcntMast">
        <!-- 계정코드 -->
        <id     property="id" column="ACNT_CODE"/>
        <!-- 계정레벨 -->
        <result property="acntLevel" column="ACNT_LEVEL"/>
        <!-- 계정명칭 -->
        <result property="acntName" column="ACNT_NAME"/>
        <!-- 정산차대구분 -->
        <result property="adjustedDrcr" column="ADJUSTED_DRCR"/>
        <!-- 계정구분 -->
        <result property="acntDiv" column="ACNT_DIV"/>
        <!-- 예산편성여부 -->
        <result property="bdgtDrawUpYn" column="BDGT_DRAW_UP_YN"/>
        <!-- 예산통제구분 -->
        <result property="bdgtControlDiv" column="BDGT_CONTROL_DIV"/>
        <!-- 계정약칭 -->
        <result property="acntAbbr" column="ACNT_ABBR"/>
        <!-- 계정한자 -->
        <result property="acntChi" column="ACNT_CHI"/>
        <!-- 계정영문 -->
        <result property="acntEng" column="ACNT_ENG"/>
        <!-- 잔액명세종류 -->
        <result property="balanceListKind" column="BALANCE_LIST_KIND"/>
        <!-- 원가종류코드 -->
        <result property="costKindCode" column="COST_KIND_CODE"/>
        <!-- 상위계정코드 -->
        <result property="upperAcntCode" column="UPPER_ACNT_CODE"/>
        <!-- 시산출력여부 -->
        <result property="acntSumYn" column="ACNT_SUM_YN"/>
        <!-- 입력담당 -->
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        <!-- 입력일시 -->
        <result property="inputDate" column="INPUT_DATE"/>
        <!-- 변경담당 -->
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        <!-- 변경일시 -->
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeAcntMastCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}ACNT_CODE IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null and id != ''">
            AND ${_alias}ACNT_CODE = #{id}
        </if>
        <if test="acntLevel != null and acntLevel != ''">
            AND ${_alias}ACNT_LEVEL = #{acntLevel}
        </if>
        <if test="acntName != null and acntName != ''">
            AND ${_alias}ACNT_NAME = #{acntName}
        </if>
        <if test="adjustedDrcr != null and adjustedDrcr != ''">
            AND ${_alias}ADJUSTED_DRCR = #{adjustedDrcr}
        </if>
        <if test="acntDiv != null and acntDiv != ''">
            AND ${_alias}ACNT_DIV = #{acntDiv}
        </if>
        <if test="bdgtDrawUpYn != null and bdgtDrawUpYn != ''">
            AND ${_alias}BDGT_DRAW_UP_YN = #{bdgtDrawUpYn}
        </if>
        <if test="bdgtControlDiv != null and bdgtControlDiv != ''">
            AND ${_alias}BDGT_CONTROL_DIV = #{bdgtControlDiv}
        </if>
        <if test="acntAbbr != null and acntAbbr != ''">
            AND ${_alias}ACNT_ABBR = #{acntAbbr}
        </if>
        <if test="acntChi != null and acntChi != ''">
            AND ${_alias}ACNT_CHI = #{acntChi}
        </if>
        <if test="acntEng != null and acntEng != ''">
            AND ${_alias}ACNT_ENG = #{acntEng}
        </if>
        <if test="balanceListKind != null and balanceListKind != ''">
            AND ${_alias}BALANCE_LIST_KIND = #{balanceListKind}
        </if>
        <if test="costKindCode != null and costKindCode != ''">
            AND ${_alias}COST_KIND_CODE = #{costKindCode}
        </if>
        <if test="upperAcntCode != null and upperAcntCode != ''">
            AND ${_alias}UPPER_ACNT_CODE = #{upperAcntCode}
        </if>
        <if test="acntSumYn != null and acntSumYn != ''">
            AND ${_alias}ACNT_SUM_YN = #{acntSumYn}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ACNT_CODE AS ${_asPrefix}ACNT_CODE, ${_alias}ACNT_LEVEL AS ${_asPrefix}ACNT_LEVEL, ${_alias}ACNT_NAME AS ${_asPrefix}ACNT_NAME, ${_alias}ADJUSTED_DRCR AS ${_asPrefix}ADJUSTED_DRCR, ${_alias}ACNT_DIV AS ${_asPrefix}ACNT_DIV, ${_alias}BDGT_DRAW_UP_YN AS ${_asPrefix}BDGT_DRAW_UP_YN, ${_alias}BDGT_CONTROL_DIV AS ${_asPrefix}BDGT_CONTROL_DIV, ${_alias}ACNT_ABBR AS ${_asPrefix}ACNT_ABBR, ${_alias}ACNT_CHI AS ${_asPrefix}ACNT_CHI, ${_alias}ACNT_ENG AS ${_asPrefix}ACNT_ENG, ${_alias}BALANCE_LIST_KIND AS ${_asPrefix}BALANCE_LIST_KIND, ${_alias}COST_KIND_CODE AS ${_asPrefix}COST_KIND_CODE, ${_alias}UPPER_ACNT_CODE AS ${_asPrefix}UPPER_ACNT_CODE, ${_alias}ACNT_SUM_YN AS ${_asPrefix}ACNT_SUM_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}ACNT_CODE, ${_alias}ACNT_LEVEL, ${_alias}ACNT_NAME, ${_alias}ADJUSTED_DRCR, ${_alias}ACNT_DIV, ${_alias}BDGT_DRAW_UP_YN, ${_alias}BDGT_CONTROL_DIV, ${_alias}ACNT_ABBR, ${_alias}ACNT_CHI, ${_alias}ACNT_ENG, ${_alias}BALANCE_LIST_KIND, ${_alias}COST_KIND_CODE, ${_alias}UPPER_ACNT_CODE, ${_alias}ACNT_SUM_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ACNT_LEVEL AS ${_asPrefix}ACNT_LEVEL, ${_alias}ACNT_NAME AS ${_asPrefix}ACNT_NAME, ${_alias}ADJUSTED_DRCR AS ${_asPrefix}ADJUSTED_DRCR, ${_alias}ACNT_DIV AS ${_asPrefix}ACNT_DIV, ${_alias}BDGT_DRAW_UP_YN AS ${_asPrefix}BDGT_DRAW_UP_YN, ${_alias}BDGT_CONTROL_DIV AS ${_asPrefix}BDGT_CONTROL_DIV, ${_alias}ACNT_ABBR AS ${_asPrefix}ACNT_ABBR, ${_alias}ACNT_CHI AS ${_asPrefix}ACNT_CHI, ${_alias}ACNT_ENG AS ${_asPrefix}ACNT_ENG, ${_alias}BALANCE_LIST_KIND AS ${_asPrefix}BALANCE_LIST_KIND, ${_alias}COST_KIND_CODE AS ${_asPrefix}COST_KIND_CODE, ${_alias}UPPER_ACNT_CODE AS ${_asPrefix}UPPER_ACNT_CODE, ${_alias}ACNT_SUM_YN AS ${_asPrefix}ACNT_SUM_YN, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}ACNT_LEVEL, ${_alias}ACNT_NAME, ${_alias}ADJUSTED_DRCR, ${_alias}ACNT_DIV, ${_alias}BDGT_DRAW_UP_YN, ${_alias}BDGT_CONTROL_DIV, ${_alias}ACNT_ABBR, ${_alias}ACNT_CHI, ${_alias}ACNT_ENG, ${_alias}BALANCE_LIST_KIND, ${_alias}COST_KIND_CODE, ${_alias}UPPER_ACNT_CODE, ${_alias}ACNT_SUM_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}ACNT_CODE, ${_alias}ACNT_LEVEL, ${_alias}ACNT_NAME, ${_alias}ADJUSTED_DRCR, ${_alias}ACNT_DIV, ${_alias}BDGT_DRAW_UP_YN, ${_alias}BDGT_CONTROL_DIV, ${_alias}ACNT_ABBR, ${_alias}ACNT_CHI, ${_alias}ACNT_ENG, ${_alias}BALANCE_LIST_KIND, ${_alias}COST_KIND_CODE, ${_alias}UPPER_ACNT_CODE, ${_alias}ACNT_SUM_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}ACNT_LEVEL, ${_alias}ACNT_NAME, ${_alias}ADJUSTED_DRCR, ${_alias}ACNT_DIV, ${_alias}BDGT_DRAW_UP_YN, ${_alias}BDGT_CONTROL_DIV, ${_alias}ACNT_ABBR, ${_alias}ACNT_CHI, ${_alias}ACNT_ENG, ${_alias}BALANCE_LIST_KIND, ${_alias}COST_KIND_CODE, ${_alias}UPPER_ACNT_CODE, ${_alias}ACNT_SUM_YN, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeAcntMast" parameterType="long" resultMap="simpleAmCodeAcntMastResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_.simpleGetAmCodeAcntMast */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_ACNT_MAST
        WHERE
        ACNT_CODE = #{id}
	</select>

    <select id="simpleListAmCodeAcntMastCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_.simpleListAmCodeAcntMastCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_ACNT_MAST
        <include refid="simpleAmCodeAcntMastCondition_" />
    </select>

    <select id="simpleListAmCodeAcntMast" resultMap="simpleAmCodeAcntMastResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_.simpleListAmCodeAcntMast */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_ACNT_MAST
        <include refid="simpleAmCodeAcntMastCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="acntLevel != null and acntLevel != ''">
            ${_alias}ACNT_LEVEL = #{acntLevel},
        </if>
        <if test="acntName != null and acntName != ''">
            ${_alias}ACNT_NAME = #{acntName},
        </if>
        <if test="adjustedDrcr != null and adjustedDrcr != ''">
            ${_alias}ADJUSTED_DRCR = #{adjustedDrcr},
        </if>
        <if test="acntDiv != null and acntDiv != ''">
            ${_alias}ACNT_DIV = #{acntDiv},
        </if>
        <if test="bdgtDrawUpYn != null and bdgtDrawUpYn != ''">
            ${_alias}BDGT_DRAW_UP_YN = #{bdgtDrawUpYn},
        </if>
        <if test="bdgtControlDiv != null and bdgtControlDiv != ''">
            ${_alias}BDGT_CONTROL_DIV = #{bdgtControlDiv},
        </if>
        <if test="acntAbbr != null and acntAbbr != ''">
            ${_alias}ACNT_ABBR = #{acntAbbr},
        </if>
        <if test="acntChi != null and acntChi != ''">
            ${_alias}ACNT_CHI = #{acntChi},
        </if>
        <if test="acntEng != null and acntEng != ''">
            ${_alias}ACNT_ENG = #{acntEng},
        </if>
        <if test="balanceListKind != null and balanceListKind != ''">
            ${_alias}BALANCE_LIST_KIND = #{balanceListKind},
        </if>
        <if test="costKindCode != null and costKindCode != ''">
            ${_alias}COST_KIND_CODE = #{costKindCode},
        </if>
        <if test="upperAcntCode != null and upperAcntCode != ''">
            ${_alias}UPPER_ACNT_CODE = #{upperAcntCode},
        </if>
        <if test="acntSumYn != null and acntSumYn != ''">
            ${_alias}ACNT_SUM_YN = #{acntSumYn},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeAcntMast" parameterType="com.neofect.gts.core.services.am.domain.AmCodeAcntMast">
        /* com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_.updateAmCodeAcntMast */

        UPDATE GTS2016.AM_CODE_ACNT_MAST
        SET
             ACNT_LEVEL = #{acntLevel}
            , ACNT_NAME = #{acntName}
            , ADJUSTED_DRCR = #{adjustedDrcr}
            , ACNT_DIV = #{acntDiv}
            , BDGT_DRAW_UP_YN = #{bdgtDrawUpYn}
            , BDGT_CONTROL_DIV = #{bdgtControlDiv}
            , ACNT_ABBR = #{acntAbbr}
            , ACNT_CHI = #{acntChi}
            , ACNT_ENG = #{acntEng}
            , BALANCE_LIST_KIND = #{balanceListKind}
            , COST_KIND_CODE = #{costKindCode}
            , UPPER_ACNT_CODE = #{upperAcntCode}
            , ACNT_SUM_YN = #{acntSumYn}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            ACNT_CODE = #{id}
    </update>

    <update id="updateAmCodeAcntMastDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeAcntMast">
        /* com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_.updateAmCodeAcntMastDynamic */

        UPDATE GTS2016.AM_CODE_ACNT_MAST
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            ACNT_CODE = #{id}
    </update>

    <delete id="deleteAmCodeAcntMast" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_.deleteAmCodeAcntMast */

        DELETE FROM GTS2016.AM_CODE_ACNT_MAST
        WHERE
            ACNT_CODE = #{id}
    </delete>

    <sql id="insert_values_">

        #{acntLevel},
        #{acntName},
        #{adjustedDrcr},
        #{acntDiv},
        #{bdgtDrawUpYn},
        #{bdgtControlDiv},
        #{acntAbbr},
        #{acntChi},
        #{acntEng},
        #{balanceListKind},
        #{costKindCode},
        #{upperAcntCode},
        #{acntSumYn},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeAcntMast">
        /* com.neofect.gts.core.services.am.repository.AmCodeAcntMastRepository_.insertAmCodeAcntMast */


        INSERT INTO GTS2016.AM_CODE_ACNT_MAST
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

