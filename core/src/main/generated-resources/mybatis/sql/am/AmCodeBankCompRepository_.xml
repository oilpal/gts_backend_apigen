<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_">

    <resultMap id="simpleAmCodeBankCompResult_" type="com.neofect.gts.core.services.am.domain.AmCodeBankComp">
        
        <id     property="companyCode" column="COMPANY_CODE"/>
        
        <id     property="bankCode" column="BANK_CODE"/>
        
        <result property="useYn" column="USE_YN"/>
        
        <result property="depositTransYn" column="DEPOSIT_TRANS_YN"/>
        
        <result property="billTransYn" column="BILL_TRANS_YN"/>
        
        <result property="buyCardYn" column="BUY_CARD_YN"/>
        
        <result property="degreeLimitAmt" column="DEGREE_LIMIT_AMT"/>
        
        <result property="loanLimitAmt" column="LOAN_LIMIT_AMT"/>
        
        <result property="payGuaranteeAmt" column="PAY_GUARANTEE_AMT"/>
        
        <result property="degreeDate" column="DEGREE_DATE"/>
        
        <result property="degreeYn" column="DEGREE_YN"/>
        
        <result property="genLimitAmt" column="GEN_LIMIT_AMT"/>
        
        <result property="chargeName" column="CHARGE_NAME"/>
        
        <result property="chargeTel" column="CHARGE_TEL"/>
        
        <result property="remark" column="REMARK"/>
        
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        
        <result property="inputDate" column="INPUT_DATE"/>
        
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleAmCodeBankCompCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="bankCodes != null and !bankCodes.isEmpty()">
            AND ${_alias}BANK_CODE IN <foreach collection="bankCodes" item="bankCodeValue" open="(" close=")" separator=",">#{ bankCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="bankCode != null and bankCode != ''">
            AND ${_alias}BANK_CODE = #{bankCode}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="depositTransYn != null and depositTransYn != ''">
            AND ${_alias}DEPOSIT_TRANS_YN = #{depositTransYn}
        </if>
        <if test="billTransYn != null and billTransYn != ''">
            AND ${_alias}BILL_TRANS_YN = #{billTransYn}
        </if>
        <if test="buyCardYn != null and buyCardYn != ''">
            AND ${_alias}BUY_CARD_YN = #{buyCardYn}
        </if>
        <if test="degreeLimitAmt != null">
            AND ${_alias}DEGREE_LIMIT_AMT = #{degreeLimitAmt}
        </if>
        <if test="loanLimitAmt != null">
            AND ${_alias}LOAN_LIMIT_AMT = #{loanLimitAmt}
        </if>
        <if test="payGuaranteeAmt != null">
            AND ${_alias}PAY_GUARANTEE_AMT = #{payGuaranteeAmt}
        </if>
        <if test="degreeDate != null and degreeDate != ''">
            AND ${_alias}DEGREE_DATE = #{degreeDate}
        </if>
        <if test="degreeYn != null and degreeYn != ''">
            AND ${_alias}DEGREE_YN = #{degreeYn}
        </if>
        <if test="genLimitAmt != null">
            AND ${_alias}GEN_LIMIT_AMT = #{genLimitAmt}
        </if>
        <if test="chargeName != null and chargeName != ''">
            AND ${_alias}CHARGE_NAME = #{chargeName}
        </if>
        <if test="chargeTel != null and chargeTel != ''">
            AND ${_alias}CHARGE_TEL = #{chargeTel}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}BANK_CODE AS ${_asPrefix}BANK_CODE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}DEPOSIT_TRANS_YN AS ${_asPrefix}DEPOSIT_TRANS_YN, ${_alias}BILL_TRANS_YN AS ${_asPrefix}BILL_TRANS_YN, ${_alias}BUY_CARD_YN AS ${_asPrefix}BUY_CARD_YN, ${_alias}DEGREE_LIMIT_AMT AS ${_asPrefix}DEGREE_LIMIT_AMT, ${_alias}LOAN_LIMIT_AMT AS ${_asPrefix}LOAN_LIMIT_AMT, ${_alias}PAY_GUARANTEE_AMT AS ${_asPrefix}PAY_GUARANTEE_AMT, ${_alias}DEGREE_DATE AS ${_asPrefix}DEGREE_DATE, ${_alias}DEGREE_YN AS ${_asPrefix}DEGREE_YN, ${_alias}GEN_LIMIT_AMT AS ${_asPrefix}GEN_LIMIT_AMT, ${_alias}CHARGE_NAME AS ${_asPrefix}CHARGE_NAME, ${_alias}CHARGE_TEL AS ${_asPrefix}CHARGE_TEL, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}BANK_CODE, ${_alias}USE_YN, ${_alias}DEPOSIT_TRANS_YN, ${_alias}BILL_TRANS_YN, ${_alias}BUY_CARD_YN, ${_alias}DEGREE_LIMIT_AMT, ${_alias}LOAN_LIMIT_AMT, ${_alias}PAY_GUARANTEE_AMT, ${_alias}DEGREE_DATE, ${_alias}DEGREE_YN, ${_alias}GEN_LIMIT_AMT, ${_alias}CHARGE_NAME, ${_alias}CHARGE_TEL, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}DEPOSIT_TRANS_YN AS ${_asPrefix}DEPOSIT_TRANS_YN, ${_alias}BILL_TRANS_YN AS ${_asPrefix}BILL_TRANS_YN, ${_alias}BUY_CARD_YN AS ${_asPrefix}BUY_CARD_YN, ${_alias}DEGREE_LIMIT_AMT AS ${_asPrefix}DEGREE_LIMIT_AMT, ${_alias}LOAN_LIMIT_AMT AS ${_asPrefix}LOAN_LIMIT_AMT, ${_alias}PAY_GUARANTEE_AMT AS ${_asPrefix}PAY_GUARANTEE_AMT, ${_alias}DEGREE_DATE AS ${_asPrefix}DEGREE_DATE, ${_alias}DEGREE_YN AS ${_asPrefix}DEGREE_YN, ${_alias}GEN_LIMIT_AMT AS ${_asPrefix}GEN_LIMIT_AMT, ${_alias}CHARGE_NAME AS ${_asPrefix}CHARGE_NAME, ${_alias}CHARGE_TEL AS ${_asPrefix}CHARGE_TEL, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}USE_YN, ${_alias}DEPOSIT_TRANS_YN, ${_alias}BILL_TRANS_YN, ${_alias}BUY_CARD_YN, ${_alias}DEGREE_LIMIT_AMT, ${_alias}LOAN_LIMIT_AMT, ${_alias}PAY_GUARANTEE_AMT, ${_alias}DEGREE_DATE, ${_alias}DEGREE_YN, ${_alias}GEN_LIMIT_AMT, ${_alias}CHARGE_NAME, ${_alias}CHARGE_TEL, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}BANK_CODE, ${_alias}USE_YN, ${_alias}DEPOSIT_TRANS_YN, ${_alias}BILL_TRANS_YN, ${_alias}BUY_CARD_YN, ${_alias}DEGREE_LIMIT_AMT, ${_alias}LOAN_LIMIT_AMT, ${_alias}PAY_GUARANTEE_AMT, ${_alias}DEGREE_DATE, ${_alias}DEGREE_YN, ${_alias}GEN_LIMIT_AMT, ${_alias}CHARGE_NAME, ${_alias}CHARGE_TEL, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}USE_YN, ${_alias}DEPOSIT_TRANS_YN, ${_alias}BILL_TRANS_YN, ${_alias}BUY_CARD_YN, ${_alias}DEGREE_LIMIT_AMT, ${_alias}LOAN_LIMIT_AMT, ${_alias}PAY_GUARANTEE_AMT, ${_alias}DEGREE_DATE, ${_alias}DEGREE_YN, ${_alias}GEN_LIMIT_AMT, ${_alias}CHARGE_NAME, ${_alias}CHARGE_TEL, ${_alias}REMARK, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetAmCodeBankComp" parameterType="long" resultMap="simpleAmCodeBankCompResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_.simpleGetAmCodeBankComp */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.AM_CODE_BANK_COMP
        WHERE
        COMPANY_CODE = #{companyCode}
        AND BANK_CODE = #{bankCode}
	</select>

    <select id="simpleListAmCodeBankCompCnt" resultType="int">
        /* com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_.simpleListAmCodeBankCompCnt */

        SELECT COUNT(*)
        FROM GTS2016.AM_CODE_BANK_COMP
        <include refid="simpleAmCodeBankCompCondition_" />
    </select>

    <select id="simpleListAmCodeBankComp" resultMap="simpleAmCodeBankCompResult_">
        /* com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_.simpleListAmCodeBankComp */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.AM_CODE_BANK_COMP
        <include refid="simpleAmCodeBankCompCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="depositTransYn != null and depositTransYn != ''">
            ${_alias}DEPOSIT_TRANS_YN = #{depositTransYn},
        </if>
        <if test="billTransYn != null and billTransYn != ''">
            ${_alias}BILL_TRANS_YN = #{billTransYn},
        </if>
        <if test="buyCardYn != null and buyCardYn != ''">
            ${_alias}BUY_CARD_YN = #{buyCardYn},
        </if>
        <if test="degreeLimitAmt != null">
            ${_alias}DEGREE_LIMIT_AMT = #{degreeLimitAmt},
        </if>
        <if test="loanLimitAmt != null">
            ${_alias}LOAN_LIMIT_AMT = #{loanLimitAmt},
        </if>
        <if test="payGuaranteeAmt != null">
            ${_alias}PAY_GUARANTEE_AMT = #{payGuaranteeAmt},
        </if>
        <if test="degreeDate != null and degreeDate != ''">
            ${_alias}DEGREE_DATE = #{degreeDate},
        </if>
        <if test="degreeYn != null and degreeYn != ''">
            ${_alias}DEGREE_YN = #{degreeYn},
        </if>
        <if test="genLimitAmt != null">
            ${_alias}GEN_LIMIT_AMT = #{genLimitAmt},
        </if>
        <if test="chargeName != null and chargeName != ''">
            ${_alias}CHARGE_NAME = #{chargeName},
        </if>
        <if test="chargeTel != null and chargeTel != ''">
            ${_alias}CHARGE_TEL = #{chargeTel},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateAmCodeBankComp" parameterType="com.neofect.gts.core.services.am.domain.AmCodeBankComp">
        /* com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_.updateAmCodeBankComp */

        UPDATE GTS2016.AM_CODE_BANK_COMP
        SET
             USE_YN = #{useYn}
            , DEPOSIT_TRANS_YN = #{depositTransYn}
            , BILL_TRANS_YN = #{billTransYn}
            , BUY_CARD_YN = #{buyCardYn}
            , DEGREE_LIMIT_AMT = #{degreeLimitAmt}
            , LOAN_LIMIT_AMT = #{loanLimitAmt}
            , PAY_GUARANTEE_AMT = #{payGuaranteeAmt}
            , DEGREE_DATE = #{degreeDate}
            , DEGREE_YN = #{degreeYn}
            , GEN_LIMIT_AMT = #{genLimitAmt}
            , CHARGE_NAME = #{chargeName}
            , CHARGE_TEL = #{chargeTel}
            , REMARK = #{remark}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND BANK_CODE = #{bankCode}
    </update>

    <update id="updateAmCodeBankCompDynamic" parameterType="com.neofect.gts.core.services.am.domain.AmCodeBankComp">
        /* com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_.updateAmCodeBankCompDynamic */

        UPDATE GTS2016.AM_CODE_BANK_COMP
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND BANK_CODE = #{bankCode}
    </update>

    <delete id="deleteAmCodeBankComp" parameterType="long">
        /* com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_.deleteAmCodeBankComp */

        DELETE FROM GTS2016.AM_CODE_BANK_COMP
        WHERE
            COMPANY_CODE = #{companyCode}
            AND BANK_CODE = #{bankCode}
    </delete>

    <sql id="insert_values_">

        #{useYn},
        #{depositTransYn},
        #{billTransYn},
        #{buyCardYn},
        #{degreeLimitAmt},
        #{loanLimitAmt},
        #{payGuaranteeAmt},
        #{degreeDate},
        #{degreeYn},
        #{genLimitAmt},
        #{chargeName},
        #{chargeTel},
        #{remark},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertAmCodeBankComp">
        /* com.neofect.gts.core.services.am.repository.AmCodeBankCompRepository_.insertAmCodeBankComp */


        INSERT INTO GTS2016.AM_CODE_BANK_COMP
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

