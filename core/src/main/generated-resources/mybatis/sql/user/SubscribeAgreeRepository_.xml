<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.user.repository.SubscribeAgreeRepository_">

    <!--region ====================================================================================== reference only -->
    <resultMap id="_metaInfo" type="java.util.Map">
        <!-- Generated Files -->
        <result property="model_" column="com.neofect.gts.core.services.user.domain.SubscribeAgree_"/>
        <result property="repository_" column="com.neofect.gts.core.services.user.repository.SubscribeAgreeRepository_"/>
        <!-- Extended Files -->
        <result property="model" column="com.neofect.gts.core.services.user.domain.SubscribeAgree"/>
        <result property="repository" column="com.neofect.gts.core.services.user.repository.SubscribeAgreeRepository"/>
    </resultMap>

    <!--
     ! All Columns
     !  sa_id, sa_acnt_id, sa_alert_type, sa_chanel_code, sa_agree, sa_modified_dt, sa_modified_by
    -->

    <!--endregion =================================================================================== reference only -->

    <resultMap id="simpleSubscribeAgreeResult_" type="com.neofect.gts.core.services.user.domain.SubscribeAgree">
        <!-- 아이디 -->
        <id     property="id" column="sa_id"/>
        <!-- 계정아이디 -->
        <result property="acntId" column="sa_acnt_id"/>
        <!-- 송신 내용타입 -->
        <result property="alertType" column="sa_alert_type"/>
        <!-- 송신 채널코드 -->
        <result property="chanelCode" column="sa_chanel_code"/>
        <!-- 동의여부 -->
        <result property="agree" column="sa_agree"/>
        <!-- 수정일시 -->
        <result property="modifiedDt" column="sa_modified_dt"/>
        <!-- 수정자 -->
        <result property="modifiedBy" column="sa_modified_by"/>
    </resultMap>

    <sql id="simpleSubscribeAgreeCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}sa_id IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}sa_id = #{id}
        </if>
        <if test="acntId != null">
            AND ${_alias}sa_acnt_id = #{acntId}
        </if>
        <if test="alertType != null and alertType != ''">
            AND ${_alias}sa_alert_type = #{alertType}
        </if>
        <if test="chanelCode != null and chanelCode != ''">
            AND ${_alias}sa_chanel_code = #{chanelCode}
        </if>
        <if test="agree != null">
            AND ${_alias}sa_agree = #{agree}
        </if>
        <if test="modifiedDt != null and modifiedDt.enabled == true">
            <if test="modifiedDt.from != null and modifiedDt.from != ''">
            AND ${_alias}sa_modified_dt >= STR_TO_DATE(#{modifiedDt.from}, '%Y.%m.%d')
            </if>
            <if test="modifiedDt.to != null and modifiedDt.to != ''">
            AND ${_alias}sa_modified_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{modifiedDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="modifiedBy != null">
            AND ${_alias}sa_modified_by = #{modifiedBy}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}sa_id AS ${_asPrefix}sa_id, ${_alias}sa_acnt_id AS ${_asPrefix}sa_acnt_id, ${_alias}sa_alert_type AS ${_asPrefix}sa_alert_type, ${_alias}sa_chanel_code AS ${_asPrefix}sa_chanel_code, ${_alias}sa_agree AS ${_asPrefix}sa_agree, ${_alias}sa_modified_dt AS ${_asPrefix}sa_modified_dt, ${_alias}sa_modified_by AS ${_asPrefix}sa_modified_by        </when>
        <otherwise>
            ${_alias}sa_id, ${_alias}sa_acnt_id, ${_alias}sa_alert_type, ${_alias}sa_chanel_code, ${_alias}sa_agree, ${_alias}sa_modified_dt, ${_alias}sa_modified_by        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}sa_acnt_id AS ${_asPrefix}sa_acnt_id, ${_alias}sa_alert_type AS ${_asPrefix}sa_alert_type, ${_alias}sa_chanel_code AS ${_asPrefix}sa_chanel_code, ${_alias}sa_agree AS ${_asPrefix}sa_agree, ${_alias}sa_modified_dt AS ${_asPrefix}sa_modified_dt, ${_alias}sa_modified_by AS ${_asPrefix}sa_modified_by        </when>
        <otherwise>
            ${_alias}sa_acnt_id, ${_alias}sa_alert_type, ${_alias}sa_chanel_code, ${_alias}sa_agree, ${_alias}sa_modified_dt, ${_alias}sa_modified_by        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}sa_id, ${_alias}sa_acnt_id, ${_alias}sa_alert_type, ${_alias}sa_chanel_code, ${_alias}sa_agree, ${_alias}sa_modified_dt, ${_alias}sa_modified_by    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}sa_acnt_id, ${_alias}sa_alert_type, ${_alias}sa_chanel_code, ${_alias}sa_agree, ${_alias}sa_modified_dt, ${_alias}sa_modified_by    </sql>

    <select id="simpleGetSubscribeAgree" parameterType="long" resultMap="simpleSubscribeAgreeResult_">
        /* SubscribeAgreeRepository_.simpleGetSubscribeAgree */

        SELECT
            <include refid="columns_" />
        FROM
            nv_subscribe_agree
        WHERE
        sa_id = #{id}
	</select>

    <select id="simpleListSubscribeAgreeCnt" resultType="int">
        /* SubscribeAgreeRepository_.simpleListSubscribeAgreeCnt */

        SELECT COUNT(*)
        FROM nv_subscribe_agree
        <include refid="simpleSubscribeAgreeCondition_" />
    </select>

    <select id="simpleListSubscribeAgree" resultMap="simpleSubscribeAgreeResult_">
        /* SubscribeAgreeRepository_.simpleListSubscribeAgree */
        SELECT
            <include refid="columns_" />
        FROM nv_subscribe_agree
        <include refid="simpleSubscribeAgreeCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="acntId != null">
            ${_alias}sa_acnt_id = #{acntId},
        </if>
        <if test="alertType != null and alertType != ''">
            ${_alias}sa_alert_type = #{alertType},
        </if>
        <if test="chanelCode != null and chanelCode != ''">
            ${_alias}sa_chanel_code = #{chanelCode},
        </if>
        <if test="agree != null">
            ${_alias}sa_agree = #{agree},
        </if>
        <if test="modifiedDt != null">
            ${_alias}sa_modified_dt = #{modifiedDt},
        </if>
        <if test="modifiedBy != null">
            ${_alias}sa_modified_by = #{modifiedBy},
        </if>
    </sql>

    <update id="updateSubscribeAgree" parameterType="com.neofect.gts.core.services.user.domain.SubscribeAgree">
        /* com.unvus.iflex.core.services.user.repository.SubscribeAgreeRepository_.updateSubscribeAgree */

        UPDATE nv_subscribe_agree
        SET
             sa_acnt_id = #{acntId}
            , sa_alert_type = #{alertType}
            , sa_chanel_code = #{chanelCode}
            , sa_agree = #{agree}
            , sa_modified_dt = #{modifiedDt}
            , sa_modified_by = #{modifiedBy}
        WHERE
            sa_id = #{id}
    </update>

    <update id="updateSubscribeAgreeDynamic" parameterType="com.neofect.gts.core.services.user.domain.SubscribeAgree">
        /* SubscribeAgreeRepository_.updateSubscribeAgreeDynamic */

        UPDATE nv_subscribe_agree
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            sa_id = #{id}
    </update>

    <delete id="deleteSubscribeAgree" parameterType="long">
        /* com.unvus.iflex.core.services.user.repository.SubscribeAgreeRepository_.deleteSubscribeAgree */

        DELETE FROM nv_subscribe_agree
        WHERE
            sa_id = #{id}
    </delete>

    <sql id="insert_values_">

        #{acntId},
        #{alertType},
        #{chanelCode},
        #{agree},
        #{modifiedDt},
        #{modifiedBy}
    </sql>

    <insert id="insertSubscribeAgree">
        /* SubscribeAgreeRepository_.insertSubscribeAgree */


        INSERT INTO nv_subscribe_agree
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

