<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.user.repository.UserAccountRepository_">

    <!--region ====================================================================================== reference only -->
    <resultMap id="_metaInfo" type="java.util.Map">
        <!-- Generated Files -->
        <result property="model_" column="com.neofect.gts.core.services.user.domain.UserAccount_"/>
        <result property="repository_" column="com.neofect.gts.core.services.user.repository.UserAccountRepository_"/>
        <!-- Extended Files -->
        <result property="model" column="com.neofect.gts.core.services.user.domain.UserAccount"/>
        <result property="repository" column="com.neofect.gts.core.services.user.repository.UserAccountRepository"/>
    </resultMap>

    <!--
     ! All Columns
     !  acnt_id, acnt_namespace, acnt_type, acnt_status, acnt_login, acnt_pwd, acnt_join_type, acnt_locked, acnt_locked_dt, acnt_expired, acnt_expired_in, acnt_expired_unit, acnt_disabled, acnt_disabled_dt, acnt_disabled_reason, acnt_disabled_memo, acnt_id_veri, acnt_id_veri_type, acnt_id_veri_dt, acnt_id_veri_ci, acnt_id_veri_di, acnt_name_veri, acnt_name_veri_dt, acnt_dormant_alerted, acnt_dormant, acnt_dormant_dt, acnt_close_alerted, acnt_close_self, acnt_close, acnt_close_dt, acnt_close_reason, acnt_close_memo, acnt_pwd_change_dt, acnt_validity_in, acnt_validity_unit, acnt_deleted, acnt_created_dt, acnt_created_by, acnt_modified_dt, acnt_modified_by
    -->

    <!--endregion =================================================================================== reference only -->

    <resultMap id="simpleUserAccountResult_" type="com.neofect.gts.core.services.user.domain.UserAccount">
        <!-- 아이디 -->
        <id     property="id" column="acnt_id"/>
        <!-- 네임스페이스. 서브사이트 존재시 구분값 -->
        <result property="namespace" column="acnt_namespace"/>
        <!-- 계정 타입. 관리자, 사용자 -->
        <result property="type" column="acnt_type"/>
        <!-- 계정상태 -->
        <result property="status" column="acnt_status"/>
        <!-- 로그인 아이디 -->
        <result property="login" column="acnt_login"/>
        <!-- 로그인 패스워드 -->
        <result property="pwd" column="acnt_pwd"/>
        <!-- 가입유형 -->
        <result property="joinType" column="acnt_join_type"/>
        <!-- 계정 잠김여부 -->
        <result property="locked" column="acnt_locked"/>
        <!-- 계정 잠김일시 -->
        <result property="lockedDt" column="acnt_locked_dt"/>
        <!-- 계정 유효기간 만료 여부 -->
        <result property="expired" column="acnt_expired"/>
        <!-- 개정 유효기간 -->
        <result property="expiredIn" column="acnt_expired_in"/>
        <!-- 계정 유효기간 단위 -->
        <result property="expiredUnit" column="acnt_expired_unit"/>
        <!-- 계정 중지여부 -->
        <result property="disabled" column="acnt_disabled"/>
        <!-- 계정 중지일시 -->
        <result property="disabledDt" column="acnt_disabled_dt"/>
        <!-- 계정 정지사유 코드 -->
        <result property="disabledReason" column="acnt_disabled_reason"/>
        <!-- 계정 정지사유 메모 -->
        <result property="disabledMemo" column="acnt_disabled_memo"/>
        <!-- 본인인증여부 -->
        <result property="idVeri" column="acnt_id_veri"/>
        <!-- 본인인증방법. 휴대폰, ipin -->
        <result property="idVeriType" column="acnt_id_veri_type"/>
        <!-- 본인인증일시 -->
        <result property="idVeriDt" column="acnt_id_veri_dt"/>
        <!-- 본인인증CI -->
        <result property="idVeriCi" column="acnt_id_veri_ci"/>
        <!-- 본인인증DI -->
        <result property="idVeriDi" column="acnt_id_veri_di"/>
        <!-- 실명인증여부 -->
        <result property="nameVeri" column="acnt_name_veri"/>
        <!-- 실명인증일시 -->
        <result property="nameVeriDt" column="acnt_name_veri_dt"/>
        <!-- 휴면메일발송일시 -->
        <result property="dormantAlerted" column="acnt_dormant_alerted"/>
        <!-- 휴면여부 -->
        <result property="dormant" column="acnt_dormant"/>
        <!-- 휴면일시 -->
        <result property="dormantDt" column="acnt_dormant_dt"/>
        <!-- 탈퇴메일발송일시 -->
        <result property="closeAlerted" column="acnt_close_alerted"/>
        <!-- 자진탈퇴여부 -->
        <result property="closeSelf" column="acnt_close_self"/>
        <!-- 탈퇴여부 -->
        <result property="close" column="acnt_close"/>
        <!-- 탈퇴일시 -->
        <result property="closeDt" column="acnt_close_dt"/>
        <!-- 탈퇴사유코드 -->
        <result property="closeReason" column="acnt_close_reason"/>
        <!-- 탈퇴사유메모 -->
        <result property="closeMemo" column="acnt_close_memo"/>
        <!-- 패스워드변경일시 -->
        <result property="pwdChangeDt" column="acnt_pwd_change_dt"/>
        <!-- 개인정보 유효기간 -->
        <result property="validityIn" column="acnt_validity_in"/>
        <!-- 개인정보 유효기간 단위 -->
        <result property="validityUnit" column="acnt_validity_unit"/>
        <!-- 삭제여부 -->
        <result property="deleted" column="acnt_deleted"/>
        <!-- 등록일시 -->
        <result property="createdDt" column="acnt_created_dt"/>
        <!-- 등록자 -->
        <result property="createdBy" column="acnt_created_by"/>
        <!-- 수정일시 -->
        <result property="modifiedDt" column="acnt_modified_dt"/>
        <!-- 수정자 -->
        <result property="modifiedBy" column="acnt_modified_by"/>
    </resultMap>

    <sql id="simpleUserAccountCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}acnt_id IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}acnt_id = #{id}
        </if>
        <if test="namespace != null and namespace != ''">
            AND ${_alias}acnt_namespace = #{namespace}
        </if>
        <if test="type != null">
            AND ${_alias}acnt_type = #{type}
        </if>
        <if test="status != null and status != ''">
            AND ${_alias}acnt_status = #{status}
        </if>
        <if test="login != null and login != ''">
            AND ${_alias}acnt_login = #{login}
        </if>
        <if test="pwd != null and pwd != ''">
            AND ${_alias}acnt_pwd = #{pwd}
        </if>
        <if test="joinType != null">
            AND ${_alias}acnt_join_type = #{joinType}
        </if>
        <if test="locked != null">
            AND ${_alias}acnt_locked = #{locked}
        </if>
        <if test="lockedDt != null and lockedDt.enabled == true">
            <if test="lockedDt.from != null and lockedDt.from != ''">
            AND ${_alias}acnt_locked_dt >= STR_TO_DATE(#{lockedDt.from}, '%Y.%m.%d')
            </if>
            <if test="lockedDt.to != null and lockedDt.to != ''">
            AND ${_alias}acnt_locked_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{lockedDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="expired != null">
            AND ${_alias}acnt_expired = #{expired}
        </if>
        <if test="expiredIn != null">
            AND ${_alias}acnt_expired_in = #{expiredIn}
        </if>
        <if test="expiredUnit != null and expiredUnit != ''">
            AND ${_alias}acnt_expired_unit = #{expiredUnit}
        </if>
        <if test="disabled != null">
            AND ${_alias}acnt_disabled = #{disabled}
        </if>
        <if test="disabledDt != null and disabledDt.enabled == true">
            <if test="disabledDt.from != null and disabledDt.from != ''">
            AND ${_alias}acnt_disabled_dt >= STR_TO_DATE(#{disabledDt.from}, '%Y.%m.%d')
            </if>
            <if test="disabledDt.to != null and disabledDt.to != ''">
            AND ${_alias}acnt_disabled_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{disabledDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="disabledReason != null and disabledReason != ''">
            AND ${_alias}acnt_disabled_reason = #{disabledReason}
        </if>
        <if test="disabledMemo != null and disabledMemo != ''">
            AND ${_alias}acnt_disabled_memo = #{disabledMemo}
        </if>
        <if test="idVeri != null">
            AND ${_alias}acnt_id_veri = #{idVeri}
        </if>
        <if test="idVeriType != null">
            AND ${_alias}acnt_id_veri_type = #{idVeriType}
        </if>
        <if test="idVeriDt != null and idVeriDt.enabled == true">
            <if test="idVeriDt.from != null and idVeriDt.from != ''">
            AND ${_alias}acnt_id_veri_dt >= STR_TO_DATE(#{idVeriDt.from}, '%Y.%m.%d')
            </if>
            <if test="idVeriDt.to != null and idVeriDt.to != ''">
            AND ${_alias}acnt_id_veri_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{idVeriDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="idVeriCi != null and idVeriCi != ''">
            AND ${_alias}acnt_id_veri_ci = #{idVeriCi}
        </if>
        <if test="idVeriDi != null and idVeriDi != ''">
            AND ${_alias}acnt_id_veri_di = #{idVeriDi}
        </if>
        <if test="nameVeri != null">
            AND ${_alias}acnt_name_veri = #{nameVeri}
        </if>
        <if test="nameVeriDt != null and nameVeriDt.enabled == true">
            <if test="nameVeriDt.from != null and nameVeriDt.from != ''">
            AND ${_alias}acnt_name_veri_dt >= STR_TO_DATE(#{nameVeriDt.from}, '%Y.%m.%d')
            </if>
            <if test="nameVeriDt.to != null and nameVeriDt.to != ''">
            AND ${_alias}acnt_name_veri_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{nameVeriDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="dormantAlerted != null and dormantAlerted.enabled == true">
            <if test="dormantAlerted.from != null and dormantAlerted.from != ''">
            AND ${_alias}acnt_dormant_alerted >= STR_TO_DATE(#{dormantAlerted.from}, '%Y.%m.%d')
            </if>
            <if test="dormantAlerted.to != null and dormantAlerted.to != ''">
            AND ${_alias}acnt_dormant_alerted <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{dormantAlerted.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="dormant != null">
            AND ${_alias}acnt_dormant = #{dormant}
        </if>
        <if test="dormantDt != null and dormantDt.enabled == true">
            <if test="dormantDt.from != null and dormantDt.from != ''">
            AND ${_alias}acnt_dormant_dt >= STR_TO_DATE(#{dormantDt.from}, '%Y.%m.%d')
            </if>
            <if test="dormantDt.to != null and dormantDt.to != ''">
            AND ${_alias}acnt_dormant_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{dormantDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="closeAlerted != null and closeAlerted.enabled == true">
            <if test="closeAlerted.from != null and closeAlerted.from != ''">
            AND ${_alias}acnt_close_alerted >= STR_TO_DATE(#{closeAlerted.from}, '%Y.%m.%d')
            </if>
            <if test="closeAlerted.to != null and closeAlerted.to != ''">
            AND ${_alias}acnt_close_alerted <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{closeAlerted.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="closeSelf != null">
            AND ${_alias}acnt_close_self = #{closeSelf}
        </if>
        <if test="close != null">
            AND ${_alias}acnt_close = #{close}
        </if>
        <if test="closeDt != null and closeDt.enabled == true">
            <if test="closeDt.from != null and closeDt.from != ''">
            AND ${_alias}acnt_close_dt >= STR_TO_DATE(#{closeDt.from}, '%Y.%m.%d')
            </if>
            <if test="closeDt.to != null and closeDt.to != ''">
            AND ${_alias}acnt_close_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{closeDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="closeReason != null and closeReason != ''">
            AND ${_alias}acnt_close_reason = #{closeReason}
        </if>
        <if test="closeMemo != null and closeMemo != ''">
            AND ${_alias}acnt_close_memo = #{closeMemo}
        </if>
        <if test="pwdChangeDt != null and pwdChangeDt.enabled == true">
            <if test="pwdChangeDt.from != null and pwdChangeDt.from != ''">
            AND ${_alias}acnt_pwd_change_dt >= STR_TO_DATE(#{pwdChangeDt.from}, '%Y.%m.%d')
            </if>
            <if test="pwdChangeDt.to != null and pwdChangeDt.to != ''">
            AND ${_alias}acnt_pwd_change_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{pwdChangeDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="validityIn != null">
            AND ${_alias}acnt_validity_in = #{validityIn}
        </if>
        <if test="validityUnit != null and validityUnit != ''">
            AND ${_alias}acnt_validity_unit = #{validityUnit}
        </if>
        <if test="deleted != null">
            AND ${_alias}acnt_deleted = #{deleted}
        </if>
        <if test="createdDt != null and createdDt.enabled == true">
            <if test="createdDt.from != null and createdDt.from != ''">
            AND ${_alias}acnt_created_dt >= STR_TO_DATE(#{createdDt.from}, '%Y.%m.%d')
            </if>
            <if test="createdDt.to != null and createdDt.to != ''">
            AND ${_alias}acnt_created_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{createdDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="createdBy != null">
            AND ${_alias}acnt_created_by = #{createdBy}
        </if>
        <if test="modifiedDt != null and modifiedDt.enabled == true">
            <if test="modifiedDt.from != null and modifiedDt.from != ''">
            AND ${_alias}acnt_modified_dt >= STR_TO_DATE(#{modifiedDt.from}, '%Y.%m.%d')
            </if>
            <if test="modifiedDt.to != null and modifiedDt.to != ''">
            AND ${_alias}acnt_modified_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{modifiedDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="modifiedBy != null">
            AND ${_alias}acnt_modified_by = #{modifiedBy}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}acnt_id AS ${_asPrefix}acnt_id, ${_alias}acnt_namespace AS ${_asPrefix}acnt_namespace, ${_alias}acnt_type AS ${_asPrefix}acnt_type, ${_alias}acnt_status AS ${_asPrefix}acnt_status, ${_alias}acnt_login AS ${_asPrefix}acnt_login, ${_alias}acnt_pwd AS ${_asPrefix}acnt_pwd, ${_alias}acnt_join_type AS ${_asPrefix}acnt_join_type, ${_alias}acnt_locked AS ${_asPrefix}acnt_locked, ${_alias}acnt_locked_dt AS ${_asPrefix}acnt_locked_dt, ${_alias}acnt_expired AS ${_asPrefix}acnt_expired, ${_alias}acnt_expired_in AS ${_asPrefix}acnt_expired_in, ${_alias}acnt_expired_unit AS ${_asPrefix}acnt_expired_unit, ${_alias}acnt_disabled AS ${_asPrefix}acnt_disabled, ${_alias}acnt_disabled_dt AS ${_asPrefix}acnt_disabled_dt, ${_alias}acnt_disabled_reason AS ${_asPrefix}acnt_disabled_reason, ${_alias}acnt_disabled_memo AS ${_asPrefix}acnt_disabled_memo, ${_alias}acnt_id_veri AS ${_asPrefix}acnt_id_veri, ${_alias}acnt_id_veri_type AS ${_asPrefix}acnt_id_veri_type, ${_alias}acnt_id_veri_dt AS ${_asPrefix}acnt_id_veri_dt, ${_alias}acnt_id_veri_ci AS ${_asPrefix}acnt_id_veri_ci, ${_alias}acnt_id_veri_di AS ${_asPrefix}acnt_id_veri_di, ${_alias}acnt_name_veri AS ${_asPrefix}acnt_name_veri, ${_alias}acnt_name_veri_dt AS ${_asPrefix}acnt_name_veri_dt, ${_alias}acnt_dormant_alerted AS ${_asPrefix}acnt_dormant_alerted, ${_alias}acnt_dormant AS ${_asPrefix}acnt_dormant, ${_alias}acnt_dormant_dt AS ${_asPrefix}acnt_dormant_dt, ${_alias}acnt_close_alerted AS ${_asPrefix}acnt_close_alerted, ${_alias}acnt_close_self AS ${_asPrefix}acnt_close_self, ${_alias}acnt_close AS ${_asPrefix}acnt_close, ${_alias}acnt_close_dt AS ${_asPrefix}acnt_close_dt, ${_alias}acnt_close_reason AS ${_asPrefix}acnt_close_reason, ${_alias}acnt_close_memo AS ${_asPrefix}acnt_close_memo, ${_alias}acnt_pwd_change_dt AS ${_asPrefix}acnt_pwd_change_dt, ${_alias}acnt_validity_in AS ${_asPrefix}acnt_validity_in, ${_alias}acnt_validity_unit AS ${_asPrefix}acnt_validity_unit, ${_alias}acnt_deleted AS ${_asPrefix}acnt_deleted, ${_alias}acnt_created_dt AS ${_asPrefix}acnt_created_dt, ${_alias}acnt_created_by AS ${_asPrefix}acnt_created_by, ${_alias}acnt_modified_dt AS ${_asPrefix}acnt_modified_dt, ${_alias}acnt_modified_by AS ${_asPrefix}acnt_modified_by        </when>
        <otherwise>
            ${_alias}acnt_id, ${_alias}acnt_namespace, ${_alias}acnt_type, ${_alias}acnt_status, ${_alias}acnt_login, ${_alias}acnt_pwd, ${_alias}acnt_join_type, ${_alias}acnt_locked, ${_alias}acnt_locked_dt, ${_alias}acnt_expired, ${_alias}acnt_expired_in, ${_alias}acnt_expired_unit, ${_alias}acnt_disabled, ${_alias}acnt_disabled_dt, ${_alias}acnt_disabled_reason, ${_alias}acnt_disabled_memo, ${_alias}acnt_id_veri, ${_alias}acnt_id_veri_type, ${_alias}acnt_id_veri_dt, ${_alias}acnt_id_veri_ci, ${_alias}acnt_id_veri_di, ${_alias}acnt_name_veri, ${_alias}acnt_name_veri_dt, ${_alias}acnt_dormant_alerted, ${_alias}acnt_dormant, ${_alias}acnt_dormant_dt, ${_alias}acnt_close_alerted, ${_alias}acnt_close_self, ${_alias}acnt_close, ${_alias}acnt_close_dt, ${_alias}acnt_close_reason, ${_alias}acnt_close_memo, ${_alias}acnt_pwd_change_dt, ${_alias}acnt_validity_in, ${_alias}acnt_validity_unit, ${_alias}acnt_deleted, ${_alias}acnt_created_dt, ${_alias}acnt_created_by, ${_alias}acnt_modified_dt, ${_alias}acnt_modified_by        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}acnt_namespace AS ${_asPrefix}acnt_namespace, ${_alias}acnt_type AS ${_asPrefix}acnt_type, ${_alias}acnt_status AS ${_asPrefix}acnt_status, ${_alias}acnt_login AS ${_asPrefix}acnt_login, ${_alias}acnt_pwd AS ${_asPrefix}acnt_pwd, ${_alias}acnt_join_type AS ${_asPrefix}acnt_join_type, ${_alias}acnt_locked AS ${_asPrefix}acnt_locked, ${_alias}acnt_locked_dt AS ${_asPrefix}acnt_locked_dt, ${_alias}acnt_expired AS ${_asPrefix}acnt_expired, ${_alias}acnt_expired_in AS ${_asPrefix}acnt_expired_in, ${_alias}acnt_expired_unit AS ${_asPrefix}acnt_expired_unit, ${_alias}acnt_disabled AS ${_asPrefix}acnt_disabled, ${_alias}acnt_disabled_dt AS ${_asPrefix}acnt_disabled_dt, ${_alias}acnt_disabled_reason AS ${_asPrefix}acnt_disabled_reason, ${_alias}acnt_disabled_memo AS ${_asPrefix}acnt_disabled_memo, ${_alias}acnt_id_veri AS ${_asPrefix}acnt_id_veri, ${_alias}acnt_id_veri_type AS ${_asPrefix}acnt_id_veri_type, ${_alias}acnt_id_veri_dt AS ${_asPrefix}acnt_id_veri_dt, ${_alias}acnt_id_veri_ci AS ${_asPrefix}acnt_id_veri_ci, ${_alias}acnt_id_veri_di AS ${_asPrefix}acnt_id_veri_di, ${_alias}acnt_name_veri AS ${_asPrefix}acnt_name_veri, ${_alias}acnt_name_veri_dt AS ${_asPrefix}acnt_name_veri_dt, ${_alias}acnt_dormant_alerted AS ${_asPrefix}acnt_dormant_alerted, ${_alias}acnt_dormant AS ${_asPrefix}acnt_dormant, ${_alias}acnt_dormant_dt AS ${_asPrefix}acnt_dormant_dt, ${_alias}acnt_close_alerted AS ${_asPrefix}acnt_close_alerted, ${_alias}acnt_close_self AS ${_asPrefix}acnt_close_self, ${_alias}acnt_close AS ${_asPrefix}acnt_close, ${_alias}acnt_close_dt AS ${_asPrefix}acnt_close_dt, ${_alias}acnt_close_reason AS ${_asPrefix}acnt_close_reason, ${_alias}acnt_close_memo AS ${_asPrefix}acnt_close_memo, ${_alias}acnt_pwd_change_dt AS ${_asPrefix}acnt_pwd_change_dt, ${_alias}acnt_validity_in AS ${_asPrefix}acnt_validity_in, ${_alias}acnt_validity_unit AS ${_asPrefix}acnt_validity_unit, ${_alias}acnt_deleted AS ${_asPrefix}acnt_deleted, ${_alias}acnt_created_dt AS ${_asPrefix}acnt_created_dt, ${_alias}acnt_created_by AS ${_asPrefix}acnt_created_by, ${_alias}acnt_modified_dt AS ${_asPrefix}acnt_modified_dt, ${_alias}acnt_modified_by AS ${_asPrefix}acnt_modified_by        </when>
        <otherwise>
            ${_alias}acnt_namespace, ${_alias}acnt_type, ${_alias}acnt_status, ${_alias}acnt_login, ${_alias}acnt_pwd, ${_alias}acnt_join_type, ${_alias}acnt_locked, ${_alias}acnt_locked_dt, ${_alias}acnt_expired, ${_alias}acnt_expired_in, ${_alias}acnt_expired_unit, ${_alias}acnt_disabled, ${_alias}acnt_disabled_dt, ${_alias}acnt_disabled_reason, ${_alias}acnt_disabled_memo, ${_alias}acnt_id_veri, ${_alias}acnt_id_veri_type, ${_alias}acnt_id_veri_dt, ${_alias}acnt_id_veri_ci, ${_alias}acnt_id_veri_di, ${_alias}acnt_name_veri, ${_alias}acnt_name_veri_dt, ${_alias}acnt_dormant_alerted, ${_alias}acnt_dormant, ${_alias}acnt_dormant_dt, ${_alias}acnt_close_alerted, ${_alias}acnt_close_self, ${_alias}acnt_close, ${_alias}acnt_close_dt, ${_alias}acnt_close_reason, ${_alias}acnt_close_memo, ${_alias}acnt_pwd_change_dt, ${_alias}acnt_validity_in, ${_alias}acnt_validity_unit, ${_alias}acnt_deleted, ${_alias}acnt_created_dt, ${_alias}acnt_created_by, ${_alias}acnt_modified_dt, ${_alias}acnt_modified_by        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}acnt_id, ${_alias}acnt_namespace, ${_alias}acnt_type, ${_alias}acnt_status, ${_alias}acnt_login, ${_alias}acnt_pwd, ${_alias}acnt_join_type, ${_alias}acnt_locked, ${_alias}acnt_locked_dt, ${_alias}acnt_expired, ${_alias}acnt_expired_in, ${_alias}acnt_expired_unit, ${_alias}acnt_disabled, ${_alias}acnt_disabled_dt, ${_alias}acnt_disabled_reason, ${_alias}acnt_disabled_memo, ${_alias}acnt_id_veri, ${_alias}acnt_id_veri_type, ${_alias}acnt_id_veri_dt, ${_alias}acnt_id_veri_ci, ${_alias}acnt_id_veri_di, ${_alias}acnt_name_veri, ${_alias}acnt_name_veri_dt, ${_alias}acnt_dormant_alerted, ${_alias}acnt_dormant, ${_alias}acnt_dormant_dt, ${_alias}acnt_close_alerted, ${_alias}acnt_close_self, ${_alias}acnt_close, ${_alias}acnt_close_dt, ${_alias}acnt_close_reason, ${_alias}acnt_close_memo, ${_alias}acnt_pwd_change_dt, ${_alias}acnt_validity_in, ${_alias}acnt_validity_unit, ${_alias}acnt_deleted, ${_alias}acnt_created_dt, ${_alias}acnt_created_by, ${_alias}acnt_modified_dt, ${_alias}acnt_modified_by    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}acnt_namespace, ${_alias}acnt_type, ${_alias}acnt_status, ${_alias}acnt_login, ${_alias}acnt_pwd, ${_alias}acnt_join_type, ${_alias}acnt_locked, ${_alias}acnt_locked_dt, ${_alias}acnt_expired, ${_alias}acnt_expired_in, ${_alias}acnt_expired_unit, ${_alias}acnt_disabled, ${_alias}acnt_disabled_dt, ${_alias}acnt_disabled_reason, ${_alias}acnt_disabled_memo, ${_alias}acnt_id_veri, ${_alias}acnt_id_veri_type, ${_alias}acnt_id_veri_dt, ${_alias}acnt_id_veri_ci, ${_alias}acnt_id_veri_di, ${_alias}acnt_name_veri, ${_alias}acnt_name_veri_dt, ${_alias}acnt_dormant_alerted, ${_alias}acnt_dormant, ${_alias}acnt_dormant_dt, ${_alias}acnt_close_alerted, ${_alias}acnt_close_self, ${_alias}acnt_close, ${_alias}acnt_close_dt, ${_alias}acnt_close_reason, ${_alias}acnt_close_memo, ${_alias}acnt_pwd_change_dt, ${_alias}acnt_validity_in, ${_alias}acnt_validity_unit, ${_alias}acnt_deleted, ${_alias}acnt_created_dt, ${_alias}acnt_created_by, ${_alias}acnt_modified_dt, ${_alias}acnt_modified_by    </sql>

    <select id="simpleGetUserAccount" parameterType="long" resultMap="simpleUserAccountResult_">
        /* UserAccountRepository_.simpleGetUserAccount */

        SELECT
            <include refid="columns_" />
        FROM
            nv_user_account
        WHERE
        acnt_id = #{id}
	</select>

    <select id="simpleListUserAccountCnt" resultType="int">
        /* UserAccountRepository_.simpleListUserAccountCnt */

        SELECT COUNT(*)
        FROM nv_user_account
        <include refid="simpleUserAccountCondition_" />
    </select>

    <select id="simpleListUserAccount" resultMap="simpleUserAccountResult_">
        /* UserAccountRepository_.simpleListUserAccount */
        SELECT
            <include refid="columns_" />
        FROM nv_user_account
        <include refid="simpleUserAccountCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="namespace != null and namespace != ''">
            ${_alias}acnt_namespace = #{namespace},
        </if>
        <if test="type != null">
            ${_alias}acnt_type = #{type},
        </if>
        <if test="status != null and status != ''">
            ${_alias}acnt_status = #{status},
        </if>
        <if test="login != null and login != ''">
            ${_alias}acnt_login = #{login},
        </if>
        <if test="pwd != null and pwd != ''">
            ${_alias}acnt_pwd = #{pwd},
        </if>
        <if test="joinType != null">
            ${_alias}acnt_join_type = #{joinType},
        </if>
        <if test="locked != null">
            ${_alias}acnt_locked = #{locked},
        </if>
        <if test="lockedDt != null">
            ${_alias}acnt_locked_dt = #{lockedDt},
        </if>
        <if test="expired != null">
            ${_alias}acnt_expired = #{expired},
        </if>
        <if test="expiredIn != null">
            ${_alias}acnt_expired_in = #{expiredIn},
        </if>
        <if test="expiredUnit != null and expiredUnit != ''">
            ${_alias}acnt_expired_unit = #{expiredUnit},
        </if>
        <if test="disabled != null">
            ${_alias}acnt_disabled = #{disabled},
        </if>
        <if test="disabledDt != null">
            ${_alias}acnt_disabled_dt = #{disabledDt},
        </if>
        <if test="disabledReason != null and disabledReason != ''">
            ${_alias}acnt_disabled_reason = #{disabledReason},
        </if>
        <if test="disabledMemo != null and disabledMemo != ''">
            ${_alias}acnt_disabled_memo = #{disabledMemo},
        </if>
        <if test="idVeri != null">
            ${_alias}acnt_id_veri = #{idVeri},
        </if>
        <if test="idVeriType != null">
            ${_alias}acnt_id_veri_type = #{idVeriType},
        </if>
        <if test="idVeriDt != null">
            ${_alias}acnt_id_veri_dt = #{idVeriDt},
        </if>
        <if test="idVeriCi != null and idVeriCi != ''">
            ${_alias}acnt_id_veri_ci = #{idVeriCi},
        </if>
        <if test="idVeriDi != null and idVeriDi != ''">
            ${_alias}acnt_id_veri_di = #{idVeriDi},
        </if>
        <if test="nameVeri != null">
            ${_alias}acnt_name_veri = #{nameVeri},
        </if>
        <if test="nameVeriDt != null">
            ${_alias}acnt_name_veri_dt = #{nameVeriDt},
        </if>
        <if test="dormantAlerted != null">
            ${_alias}acnt_dormant_alerted = #{dormantAlerted},
        </if>
        <if test="dormant != null">
            ${_alias}acnt_dormant = #{dormant},
        </if>
        <if test="dormantDt != null">
            ${_alias}acnt_dormant_dt = #{dormantDt},
        </if>
        <if test="closeAlerted != null">
            ${_alias}acnt_close_alerted = #{closeAlerted},
        </if>
        <if test="closeSelf != null">
            ${_alias}acnt_close_self = #{closeSelf},
        </if>
        <if test="close != null">
            ${_alias}acnt_close = #{close},
        </if>
        <if test="closeDt != null">
            ${_alias}acnt_close_dt = #{closeDt},
        </if>
        <if test="closeReason != null and closeReason != ''">
            ${_alias}acnt_close_reason = #{closeReason},
        </if>
        <if test="closeMemo != null and closeMemo != ''">
            ${_alias}acnt_close_memo = #{closeMemo},
        </if>
        <if test="pwdChangeDt != null">
            ${_alias}acnt_pwd_change_dt = #{pwdChangeDt},
        </if>
        <if test="validityIn != null">
            ${_alias}acnt_validity_in = #{validityIn},
        </if>
        <if test="validityUnit != null and validityUnit != ''">
            ${_alias}acnt_validity_unit = #{validityUnit},
        </if>
        <if test="deleted != null">
            ${_alias}acnt_deleted = #{deleted},
        </if>
        <if test="modifiedDt != null">
            ${_alias}acnt_modified_dt = #{modifiedDt},
        </if>
        <if test="modifiedBy != null">
            ${_alias}acnt_modified_by = #{modifiedBy},
        </if>
    </sql>

    <update id="updateUserAccount" parameterType="com.neofect.gts.core.services.user.domain.UserAccount">
        /* com.unvus.iflex.core.services.user.repository.UserAccountRepository_.updateUserAccount */

        UPDATE nv_user_account
        SET
             acnt_namespace = #{namespace}
            , acnt_type = #{type}
            , acnt_status = #{status}
            , acnt_login = #{login}
            , acnt_pwd = #{pwd}
            , acnt_join_type = #{joinType}
            , acnt_locked = #{locked}
            , acnt_locked_dt = #{lockedDt}
            , acnt_expired = #{expired}
            , acnt_expired_in = #{expiredIn}
            , acnt_expired_unit = #{expiredUnit}
            , acnt_disabled = #{disabled}
            , acnt_disabled_dt = #{disabledDt}
            , acnt_disabled_reason = #{disabledReason}
            , acnt_disabled_memo = #{disabledMemo}
            , acnt_id_veri = #{idVeri}
            , acnt_id_veri_type = #{idVeriType}
            , acnt_id_veri_dt = #{idVeriDt}
            , acnt_id_veri_ci = #{idVeriCi}
            , acnt_id_veri_di = #{idVeriDi}
            , acnt_name_veri = #{nameVeri}
            , acnt_name_veri_dt = #{nameVeriDt}
            , acnt_dormant_alerted = #{dormantAlerted}
            , acnt_dormant = #{dormant}
            , acnt_dormant_dt = #{dormantDt}
            , acnt_close_alerted = #{closeAlerted}
            , acnt_close_self = #{closeSelf}
            , acnt_close = #{close}
            , acnt_close_dt = #{closeDt}
            , acnt_close_reason = #{closeReason}
            , acnt_close_memo = #{closeMemo}
            , acnt_pwd_change_dt = #{pwdChangeDt}
            , acnt_validity_in = #{validityIn}
            , acnt_validity_unit = #{validityUnit}
            , acnt_deleted = #{deleted}
            , acnt_modified_dt = #{modifiedDt}
            , acnt_modified_by = #{modifiedBy}
        WHERE
            acnt_id = #{id}
    </update>

    <update id="updateUserAccountDynamic" parameterType="com.neofect.gts.core.services.user.domain.UserAccount">
        /* UserAccountRepository_.updateUserAccountDynamic */

        UPDATE nv_user_account
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            acnt_id = #{id}
    </update>

    <delete id="deleteUserAccount" parameterType="long">
        /* com.unvus.iflex.core.services.user.repository.UserAccountRepository_.deleteUserAccount */

        DELETE FROM nv_user_account
        WHERE
            acnt_id = #{id}
    </delete>

    <sql id="insert_values_">

        #{namespace},
        #{type},
        #{status},
        #{login},
        #{pwd},
        #{joinType},
        #{locked},
        #{lockedDt},
        #{expired},
        #{expiredIn},
        #{expiredUnit},
        #{disabled},
        #{disabledDt},
        #{disabledReason},
        #{disabledMemo},
        #{idVeri},
        #{idVeriType},
        #{idVeriDt},
        #{idVeriCi},
        #{idVeriDi},
        #{nameVeri},
        #{nameVeriDt},
        #{dormantAlerted},
        #{dormant},
        #{dormantDt},
        #{closeAlerted},
        #{closeSelf},
        #{close},
        #{closeDt},
        #{closeReason},
        #{closeMemo},
        #{pwdChangeDt},
        #{validityIn},
        #{validityUnit},
        #{deleted},
        #{createdDt},
        #{createdBy},
        #{modifiedDt},
        #{modifiedBy}
    </sql>

    <insert id="insertUserAccount">
        /* UserAccountRepository_.insertUserAccount */


        INSERT INTO nv_user_account
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

