<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_">

    <resultMap id="simpleSmAuthUserMenuRecentResult_" type="com.neofect.gts.core.services.sm.domain.SmAuthUserMenuRecent">
        
        <id     property="companyCode" column="COMPANY_CODE"/>
        
        <id     property="userId" column="USER_ID"/>
        
        <id     property="menuSeq" column="MENU_SEQ"/>
        
        <result property="sysId" column="SYS_ID"/>
        
        <result property="pgmCode" column="PGM_CODE"/>
        
        <result property="openDate" column="OPEN_DATE"/>
        
        <result property="openCnt" column="OPEN_CNT"/>
    </resultMap>

    <sql id="simpleSmAuthUserMenuRecentCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="userIds != null and !userIds.isEmpty()">
            AND ${_alias}USER_ID IN <foreach collection="userIds" item="userIdValue" open="(" close=")" separator=",">#{ userIdValue }</foreach>
        </if>
        <if test="menuSeqs != null and !menuSeqs.isEmpty()">
            AND ${_alias}MENU_SEQ IN <foreach collection="menuSeqs" item="menuSeqValue" open="(" close=")" separator=",">#{ menuSeqValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="userId != null and userId != ''">
            AND ${_alias}USER_ID = #{userId}
        </if>
        <if test="menuSeq != null">
            AND ${_alias}MENU_SEQ = #{menuSeq}
        </if>
        <if test="sysId != null and sysId != ''">
            AND ${_alias}SYS_ID = #{sysId}
        </if>
        <if test="pgmCode != null and pgmCode != ''">
            AND ${_alias}PGM_CODE = #{pgmCode}
        </if>
        <if test="openDate != null and openDate.enabled == true">
            <if test="openDate.from != null and openDate.from != ''">
            AND ${_alias}OPEN_DATE >= TO_DATE(#{openDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="openDate.to != null and openDate.to != ''">
            AND ${_alias}OPEN_DATE <![CDATA[ < ]]> TO_DATE(#{openDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="openCnt != null">
            AND ${_alias}OPEN_CNT = #{openCnt}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}USER_ID AS ${_asPrefix}USER_ID, ${_alias}MENU_SEQ AS ${_asPrefix}MENU_SEQ, ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}PGM_CODE AS ${_asPrefix}PGM_CODE, ${_alias}OPEN_DATE AS ${_asPrefix}OPEN_DATE, ${_alias}OPEN_CNT AS ${_asPrefix}OPEN_CNT        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}USER_ID, ${_alias}MENU_SEQ, ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}OPEN_DATE, ${_alias}OPEN_CNT        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}PGM_CODE AS ${_asPrefix}PGM_CODE, ${_alias}OPEN_DATE AS ${_asPrefix}OPEN_DATE, ${_alias}OPEN_CNT AS ${_asPrefix}OPEN_CNT        </when>
        <otherwise>
            ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}OPEN_DATE, ${_alias}OPEN_CNT        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}USER_ID, ${_alias}MENU_SEQ, ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}OPEN_DATE, ${_alias}OPEN_CNT    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}OPEN_DATE, ${_alias}OPEN_CNT    </sql>

    <select id="simpleGetSmAuthUserMenuRecent" parameterType="long" resultMap="simpleSmAuthUserMenuRecentResult_">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_.simpleGetSmAuthUserMenuRecent */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_AUTH_USER_MENU_RECENT
        WHERE
        COMPANY_CODE = #{companyCode}
        AND USER_ID = #{userId}
        AND MENU_SEQ = #{menuSeq}
	</select>

    <select id="simpleListSmAuthUserMenuRecentCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_.simpleListSmAuthUserMenuRecentCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_AUTH_USER_MENU_RECENT
        <include refid="simpleSmAuthUserMenuRecentCondition_" />
    </select>

    <select id="simpleListSmAuthUserMenuRecent" resultMap="simpleSmAuthUserMenuRecentResult_">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_.simpleListSmAuthUserMenuRecent */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_AUTH_USER_MENU_RECENT
        <include refid="simpleSmAuthUserMenuRecentCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="sysId != null and sysId != ''">
            ${_alias}SYS_ID = #{sysId},
        </if>
        <if test="pgmCode != null and pgmCode != ''">
            ${_alias}PGM_CODE = #{pgmCode},
        </if>
        <if test="openDate != null">
            ${_alias}OPEN_DATE = #{openDate},
        </if>
        <if test="openCnt != null">
            ${_alias}OPEN_CNT = #{openCnt},
        </if>
    </sql>

    <update id="updateSmAuthUserMenuRecent" parameterType="com.neofect.gts.core.services.sm.domain.SmAuthUserMenuRecent">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_.updateSmAuthUserMenuRecent */

        UPDATE GTS2016.SM_AUTH_USER_MENU_RECENT
        SET
             SYS_ID = #{sysId}
            , PGM_CODE = #{pgmCode}
            , OPEN_DATE = #{openDate}
            , OPEN_CNT = #{openCnt}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND USER_ID = #{userId}
            AND MENU_SEQ = #{menuSeq}
    </update>

    <update id="updateSmAuthUserMenuRecentDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmAuthUserMenuRecent">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_.updateSmAuthUserMenuRecentDynamic */

        UPDATE GTS2016.SM_AUTH_USER_MENU_RECENT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND USER_ID = #{userId}
            AND MENU_SEQ = #{menuSeq}
    </update>

    <delete id="deleteSmAuthUserMenuRecent" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_.deleteSmAuthUserMenuRecent */

        DELETE FROM GTS2016.SM_AUTH_USER_MENU_RECENT
        WHERE
            COMPANY_CODE = #{companyCode}
            AND USER_ID = #{userId}
            AND MENU_SEQ = #{menuSeq}
    </delete>

    <sql id="insert_values_">

        #{sysId},
        #{pgmCode},
        #{openDate},
        #{openCnt}
    </sql>

    <insert id="insertSmAuthUserMenuRecent">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserMenuRecentRepository_.insertSmAuthUserMenuRecent */


        INSERT INTO GTS2016.SM_AUTH_USER_MENU_RECENT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

