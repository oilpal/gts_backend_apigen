<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmCommFileRepository_">

    <resultMap id="simpleSmCommFileResult_" type="com.neofect.gts.core.services.sm.domain.SmCommFile">
        
        <id     property="id" column="ATCH_FILE_ID"/>
        
        <result property="creatDt" column="CREAT_DT"/>
        
        <result property="useAt" column="USE_AT"/>
        
        <result property="sysId" column="SYS_ID"/>
        
        <result property="userId" column="USER_ID"/>
        
        <result property="clientIp" column="CLIENT_IP"/>
    </resultMap>

    <sql id="simpleSmCommFileCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}ATCH_FILE_ID IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null and id != ''">
            AND ${_alias}ATCH_FILE_ID = #{id}
        </if>
        <if test="creatDt != null and creatDt.enabled == true">
            <if test="creatDt.from != null and creatDt.from != ''">
            AND ${_alias}CREAT_DT >= TO_DATE(#{creatDt.from}, 'YYYY.MM.DD')
            </if>
            <if test="creatDt.to != null and creatDt.to != ''">
            AND ${_alias}CREAT_DT <![CDATA[ < ]]> TO_DATE(#{creatDt.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="useAt != null and useAt != ''">
            AND ${_alias}USE_AT = #{useAt}
        </if>
        <if test="sysId != null and sysId != ''">
            AND ${_alias}SYS_ID = #{sysId}
        </if>
        <if test="userId != null and userId != ''">
            AND ${_alias}USER_ID = #{userId}
        </if>
        <if test="clientIp != null and clientIp != ''">
            AND ${_alias}CLIENT_IP = #{clientIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ATCH_FILE_ID AS ${_asPrefix}ATCH_FILE_ID, ${_alias}CREAT_DT AS ${_asPrefix}CREAT_DT, ${_alias}USE_AT AS ${_asPrefix}USE_AT, ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}USER_ID AS ${_asPrefix}USER_ID, ${_alias}CLIENT_IP AS ${_asPrefix}CLIENT_IP        </when>
        <otherwise>
            ${_alias}ATCH_FILE_ID, ${_alias}CREAT_DT, ${_alias}USE_AT, ${_alias}SYS_ID, ${_alias}USER_ID, ${_alias}CLIENT_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CREAT_DT AS ${_asPrefix}CREAT_DT, ${_alias}USE_AT AS ${_asPrefix}USE_AT, ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}USER_ID AS ${_asPrefix}USER_ID, ${_alias}CLIENT_IP AS ${_asPrefix}CLIENT_IP        </when>
        <otherwise>
            ${_alias}CREAT_DT, ${_alias}USE_AT, ${_alias}SYS_ID, ${_alias}USER_ID, ${_alias}CLIENT_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}ATCH_FILE_ID, ${_alias}CREAT_DT, ${_alias}USE_AT, ${_alias}SYS_ID, ${_alias}USER_ID, ${_alias}CLIENT_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}CREAT_DT, ${_alias}USE_AT, ${_alias}SYS_ID, ${_alias}USER_ID, ${_alias}CLIENT_IP    </sql>

    <select id="simpleGetSmCommFile" parameterType="long" resultMap="simpleSmCommFileResult_">
        /* com.neofect.gts.core.services.sm.repository.SmCommFileRepository_.simpleGetSmCommFile */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_COMM_FILE
        WHERE
        ATCH_FILE_ID = #{id}
	</select>

    <select id="simpleListSmCommFileCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmCommFileRepository_.simpleListSmCommFileCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_COMM_FILE
        <include refid="simpleSmCommFileCondition_" />
    </select>

    <select id="simpleListSmCommFile" resultMap="simpleSmCommFileResult_">
        /* com.neofect.gts.core.services.sm.repository.SmCommFileRepository_.simpleListSmCommFile */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_COMM_FILE
        <include refid="simpleSmCommFileCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="creatDt != null">
            ${_alias}CREAT_DT = #{creatDt},
        </if>
        <if test="useAt != null and useAt != ''">
            ${_alias}USE_AT = #{useAt},
        </if>
        <if test="sysId != null and sysId != ''">
            ${_alias}SYS_ID = #{sysId},
        </if>
        <if test="userId != null and userId != ''">
            ${_alias}USER_ID = #{userId},
        </if>
        <if test="clientIp != null and clientIp != ''">
            ${_alias}CLIENT_IP = #{clientIp},
        </if>
    </sql>

    <update id="updateSmCommFile" parameterType="com.neofect.gts.core.services.sm.domain.SmCommFile">
        /* com.neofect.gts.core.services.sm.repository.SmCommFileRepository_.updateSmCommFile */

        UPDATE GTS2016.SM_COMM_FILE
        SET
             CREAT_DT = #{creatDt}
            , USE_AT = #{useAt}
            , SYS_ID = #{sysId}
            , USER_ID = #{userId}
            , CLIENT_IP = #{clientIp}
        WHERE
            ATCH_FILE_ID = #{id}
    </update>

    <update id="updateSmCommFileDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmCommFile">
        /* com.neofect.gts.core.services.sm.repository.SmCommFileRepository_.updateSmCommFileDynamic */

        UPDATE GTS2016.SM_COMM_FILE
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            ATCH_FILE_ID = #{id}
    </update>

    <delete id="deleteSmCommFile" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmCommFileRepository_.deleteSmCommFile */

        DELETE FROM GTS2016.SM_COMM_FILE
        WHERE
            ATCH_FILE_ID = #{id}
    </delete>

    <sql id="insert_values_">

        #{creatDt},
        #{useAt},
        #{sysId},
        #{userId},
        #{clientIp}
    </sql>

    <insert id="insertSmCommFile">
        /* com.neofect.gts.core.services.sm.repository.SmCommFileRepository_.insertSmCommFile */


        INSERT INTO GTS2016.SM_COMM_FILE
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

