<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_">

    <resultMap id="simpleSmCodeZipResult_" type="com.neofect.gts.core.services.sm.domain.SmCodeZip">
        <!-- 우편번호 -->
        <id     property="zipCode" column="ZIP_CODE"/>
        <!-- 순번 -->
        <id     property="seq" column="SEQ"/>
        <!-- 시도 -->
        <result property="sido" column="SIDO"/>
        <!-- 구군 -->
        <result property="gugun" column="GUGUN"/>
        <!-- 동 -->
        <result property="dong" column="DONG"/>
        <!-- 번지 -->
        <result property="bunji" column="BUNJI"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleSmCodeZipCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="zipCodes != null and !zipCodes.isEmpty()">
            AND ${_alias}ZIP_CODE IN <foreach collection="zipCodes" item="zipCodeValue" open="(" close=")" separator=",">#{ zipCodeValue }</foreach>
        </if>
        <if test="seqs != null and !seqs.isEmpty()">
            AND ${_alias}SEQ IN <foreach collection="seqs" item="seqValue" open="(" close=")" separator=",">#{ seqValue }</foreach>
        </if>
        <if test="zipCode != null and zipCode != ''">
            AND ${_alias}ZIP_CODE = #{zipCode}
        </if>
        <if test="seq != null">
            AND ${_alias}SEQ = #{seq}
        </if>
        <if test="sido != null and sido != ''">
            AND ${_alias}SIDO = #{sido}
        </if>
        <if test="gugun != null and gugun != ''">
            AND ${_alias}GUGUN = #{gugun}
        </if>
        <if test="dong != null and dong != ''">
            AND ${_alias}DONG = #{dong}
        </if>
        <if test="bunji != null and bunji != ''">
            AND ${_alias}BUNJI = #{bunji}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}SEQ AS ${_asPrefix}SEQ, ${_alias}SIDO AS ${_asPrefix}SIDO, ${_alias}GUGUN AS ${_asPrefix}GUGUN, ${_alias}DONG AS ${_asPrefix}DONG, ${_alias}BUNJI AS ${_asPrefix}BUNJI, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}ZIP_CODE, ${_alias}SEQ, ${_alias}SIDO, ${_alias}GUGUN, ${_alias}DONG, ${_alias}BUNJI, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SIDO AS ${_asPrefix}SIDO, ${_alias}GUGUN AS ${_asPrefix}GUGUN, ${_alias}DONG AS ${_asPrefix}DONG, ${_alias}BUNJI AS ${_asPrefix}BUNJI, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}SIDO, ${_alias}GUGUN, ${_alias}DONG, ${_alias}BUNJI, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}ZIP_CODE, ${_alias}SEQ, ${_alias}SIDO, ${_alias}GUGUN, ${_alias}DONG, ${_alias}BUNJI, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}SIDO, ${_alias}GUGUN, ${_alias}DONG, ${_alias}BUNJI, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetSmCodeZip" parameterType="long" resultMap="simpleSmCodeZipResult_">
        /* com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_.simpleGetSmCodeZip */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_CODE_ZIP
        WHERE
        ZIP_CODE = #{zipCode}
        AND SEQ = #{seq}
	</select>

    <select id="simpleListSmCodeZipCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_.simpleListSmCodeZipCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_CODE_ZIP
        <include refid="simpleSmCodeZipCondition_" />
    </select>

    <select id="simpleListSmCodeZip" resultMap="simpleSmCodeZipResult_">
        /* com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_.simpleListSmCodeZip */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_CODE_ZIP
        <include refid="simpleSmCodeZipCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="sido != null and sido != ''">
            ${_alias}SIDO = #{sido},
        </if>
        <if test="gugun != null and gugun != ''">
            ${_alias}GUGUN = #{gugun},
        </if>
        <if test="dong != null and dong != ''">
            ${_alias}DONG = #{dong},
        </if>
        <if test="bunji != null and bunji != ''">
            ${_alias}BUNJI = #{bunji},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateSmCodeZip" parameterType="com.neofect.gts.core.services.sm.domain.SmCodeZip">
        /* com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_.updateSmCodeZip */

        UPDATE GTS2016.SM_CODE_ZIP
        SET
             SIDO = #{sido}
            , GUGUN = #{gugun}
            , DONG = #{dong}
            , BUNJI = #{bunji}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            ZIP_CODE = #{zipCode}
            AND SEQ = #{seq}
    </update>

    <update id="updateSmCodeZipDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmCodeZip">
        /* com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_.updateSmCodeZipDynamic */

        UPDATE GTS2016.SM_CODE_ZIP
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            ZIP_CODE = #{zipCode}
            AND SEQ = #{seq}
    </update>

    <delete id="deleteSmCodeZip" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_.deleteSmCodeZip */

        DELETE FROM GTS2016.SM_CODE_ZIP
        WHERE
            ZIP_CODE = #{zipCode}
            AND SEQ = #{seq}
    </delete>

    <sql id="insert_values_">

        #{sido},
        #{gugun},
        #{dong},
        #{bunji},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertSmCodeZip">
        /* com.neofect.gts.core.services.sm.repository.SmCodeZipRepository_.insertSmCodeZip */


        INSERT INTO GTS2016.SM_CODE_ZIP
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

