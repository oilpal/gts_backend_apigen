<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmAuthActRepository_">

    <resultMap id="simpleSmAuthActResult_" type="com.neofect.gts.core.services.sm.domain.SmAuthAct">
        
        <id     property="companyCode" column="COMPANY_CODE"/>
        
        <id     property="actCode" column="ACT_CODE"/>
        
        <result property="actName" column="ACT_NAME"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        
        <result property="actTag1" column="ACT_TAG1"/>
        
        <result property="actTag2" column="ACT_TAG2"/>
        
        <result property="actTag3" column="ACT_TAG3"/>
        
        <result property="actTag4" column="ACT_TAG4"/>
        
        <result property="actTag5" column="ACT_TAG5"/>
    </resultMap>

    <sql id="simpleSmAuthActCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="actCodes != null and !actCodes.isEmpty()">
            AND ${_alias}ACT_CODE IN <foreach collection="actCodes" item="actCodeValue" open="(" close=")" separator=",">#{ actCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="actCode != null and actCode != ''">
            AND ${_alias}ACT_CODE = #{actCode}
        </if>
        <if test="actName != null and actName != ''">
            AND ${_alias}ACT_NAME = #{actName}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate.enabled == true">
            <if test="rowUpdateDate.from != null and rowUpdateDate.from != ''">
            AND ${_alias}ROW_UPDATE_DATE >= TO_DATE(#{rowUpdateDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowUpdateDate.to != null and rowUpdateDate.to != ''">
            AND ${_alias}ROW_UPDATE_DATE <![CDATA[ < ]]> TO_DATE(#{rowUpdateDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="actTag1 != null and actTag1 != ''">
            AND ${_alias}ACT_TAG1 = #{actTag1}
        </if>
        <if test="actTag2 != null and actTag2 != ''">
            AND ${_alias}ACT_TAG2 = #{actTag2}
        </if>
        <if test="actTag3 != null and actTag3 != ''">
            AND ${_alias}ACT_TAG3 = #{actTag3}
        </if>
        <if test="actTag4 != null and actTag4 != ''">
            AND ${_alias}ACT_TAG4 = #{actTag4}
        </if>
        <if test="actTag5 != null and actTag5 != ''">
            AND ${_alias}ACT_TAG5 = #{actTag5}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}ACT_CODE AS ${_asPrefix}ACT_CODE, ${_alias}ACT_NAME AS ${_asPrefix}ACT_NAME, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}ACT_TAG1 AS ${_asPrefix}ACT_TAG1, ${_alias}ACT_TAG2 AS ${_asPrefix}ACT_TAG2, ${_alias}ACT_TAG3 AS ${_asPrefix}ACT_TAG3, ${_alias}ACT_TAG4 AS ${_asPrefix}ACT_TAG4, ${_alias}ACT_TAG5 AS ${_asPrefix}ACT_TAG5        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}ACT_CODE, ${_alias}ACT_NAME, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP, ${_alias}ACT_TAG1, ${_alias}ACT_TAG2, ${_alias}ACT_TAG3, ${_alias}ACT_TAG4, ${_alias}ACT_TAG5        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ACT_NAME AS ${_asPrefix}ACT_NAME, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}ACT_TAG1 AS ${_asPrefix}ACT_TAG1, ${_alias}ACT_TAG2 AS ${_asPrefix}ACT_TAG2, ${_alias}ACT_TAG3 AS ${_asPrefix}ACT_TAG3, ${_alias}ACT_TAG4 AS ${_asPrefix}ACT_TAG4, ${_alias}ACT_TAG5 AS ${_asPrefix}ACT_TAG5        </when>
        <otherwise>
            ${_alias}ACT_NAME, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP, ${_alias}ACT_TAG1, ${_alias}ACT_TAG2, ${_alias}ACT_TAG3, ${_alias}ACT_TAG4, ${_alias}ACT_TAG5        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}ACT_CODE, ${_alias}ACT_NAME, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP, ${_alias}ACT_TAG1, ${_alias}ACT_TAG2, ${_alias}ACT_TAG3, ${_alias}ACT_TAG4, ${_alias}ACT_TAG5    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}ACT_NAME, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP, ${_alias}ACT_TAG1, ${_alias}ACT_TAG2, ${_alias}ACT_TAG3, ${_alias}ACT_TAG4, ${_alias}ACT_TAG5    </sql>

    <select id="simpleGetSmAuthAct" parameterType="long" resultMap="simpleSmAuthActResult_">
        /* com.neofect.gts.core.services.sm.repository.SmAuthActRepository_.simpleGetSmAuthAct */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_AUTH_ACT
        WHERE
        COMPANY_CODE = #{companyCode}
        AND ACT_CODE = #{actCode}
	</select>

    <select id="simpleListSmAuthActCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmAuthActRepository_.simpleListSmAuthActCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_AUTH_ACT
        <include refid="simpleSmAuthActCondition_" />
    </select>

    <select id="simpleListSmAuthAct" resultMap="simpleSmAuthActResult_">
        /* com.neofect.gts.core.services.sm.repository.SmAuthActRepository_.simpleListSmAuthAct */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_AUTH_ACT
        <include refid="simpleSmAuthActCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="actName != null and actName != ''">
            ${_alias}ACT_NAME = #{actName},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateDate != null">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="actTag1 != null and actTag1 != ''">
            ${_alias}ACT_TAG1 = #{actTag1},
        </if>
        <if test="actTag2 != null and actTag2 != ''">
            ${_alias}ACT_TAG2 = #{actTag2},
        </if>
        <if test="actTag3 != null and actTag3 != ''">
            ${_alias}ACT_TAG3 = #{actTag3},
        </if>
        <if test="actTag4 != null and actTag4 != ''">
            ${_alias}ACT_TAG4 = #{actTag4},
        </if>
        <if test="actTag5 != null and actTag5 != ''">
            ${_alias}ACT_TAG5 = #{actTag5},
        </if>
    </sql>

    <update id="updateSmAuthAct" parameterType="com.neofect.gts.core.services.sm.domain.SmAuthAct">
        /* com.neofect.gts.core.services.sm.repository.SmAuthActRepository_.updateSmAuthAct */

        UPDATE GTS2016.SM_AUTH_ACT
        SET
             ACT_NAME = #{actName}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , ACT_TAG1 = #{actTag1}
            , ACT_TAG2 = #{actTag2}
            , ACT_TAG3 = #{actTag3}
            , ACT_TAG4 = #{actTag4}
            , ACT_TAG5 = #{actTag5}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND ACT_CODE = #{actCode}
    </update>

    <update id="updateSmAuthActDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmAuthAct">
        /* com.neofect.gts.core.services.sm.repository.SmAuthActRepository_.updateSmAuthActDynamic */

        UPDATE GTS2016.SM_AUTH_ACT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND ACT_CODE = #{actCode}
    </update>

    <delete id="deleteSmAuthAct" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmAuthActRepository_.deleteSmAuthAct */

        DELETE FROM GTS2016.SM_AUTH_ACT
        WHERE
            COMPANY_CODE = #{companyCode}
            AND ACT_CODE = #{actCode}
    </delete>

    <sql id="insert_values_">

        #{actName},
        #{rowInputDate},
        #{rowInputEmpNo},
        #{rowInputIp},
        #{rowUpdateDate},
        #{rowUpdateEmpNo},
        #{rowUpdateIp},
        #{actTag1},
        #{actTag2},
        #{actTag3},
        #{actTag4},
        #{actTag5}
    </sql>

    <insert id="insertSmAuthAct">
        /* com.neofect.gts.core.services.sm.repository.SmAuthActRepository_.insertSmAuthAct */


        INSERT INTO GTS2016.SM_AUTH_ACT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

