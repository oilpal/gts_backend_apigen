<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmManualRepository_">

    <resultMap id="simpleSmManualResult_" type="com.neofect.gts.core.services.sm.domain.SmManual">
        <!-- 회사코드 -->
        <id     property="companyCode" column="COMPANY_CODE"/>
        <!-- 시스템코드 -->
        <id     property="sysId" column="SYS_ID"/>
        <!-- 메뉴코드 -->
        <id     property="pgmCode" column="PGM_CODE"/>
        <!-- 메뉴설명 -->
        <result property="menuContent" column="MENU_CONTENT"/>
        <!-- 메뉴위치 -->
        <result property="menuPath" column="MENU_PATH"/>
        <!-- 메뉴순서 -->
        <result property="menuOrder" column="MENU_ORDER"/>
        <!-- 파일명 -->
        <result property="fileName" column="FILE_NAME"/>
        <!-- 파일타입 -->
        <result property="fileType" column="FILE_TYPE"/>
        <!-- 파일위치 -->
        <result property="filePath" column="FILE_PATH"/>
        <!-- 파일ID -->
        <result property="fileId" column="FILE_ID"/>
        <!-- 입력일자 -->
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        <!-- 입력IP -->
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        <!-- 입력사번 -->
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        <!-- 수정일자 -->
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        <!-- 수정IP -->
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 수정사번 -->
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
    </resultMap>

    <sql id="simpleSmManualCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="sysIds != null and !sysIds.isEmpty()">
            AND ${_alias}SYS_ID IN <foreach collection="sysIds" item="sysIdValue" open="(" close=")" separator=",">#{ sysIdValue }</foreach>
        </if>
        <if test="pgmCodes != null and !pgmCodes.isEmpty()">
            AND ${_alias}PGM_CODE IN <foreach collection="pgmCodes" item="pgmCodeValue" open="(" close=")" separator=",">#{ pgmCodeValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="sysId != null and sysId != ''">
            AND ${_alias}SYS_ID = #{sysId}
        </if>
        <if test="pgmCode != null and pgmCode != ''">
            AND ${_alias}PGM_CODE = #{pgmCode}
        </if>
        <if test="menuContent != null and menuContent != ''">
            AND ${_alias}MENU_CONTENT = #{menuContent}
        </if>
        <if test="menuPath != null and menuPath != ''">
            AND ${_alias}MENU_PATH = #{menuPath}
        </if>
        <if test="menuOrder != null and menuOrder != ''">
            AND ${_alias}MENU_ORDER = #{menuOrder}
        </if>
        <if test="fileName != null and fileName != ''">
            AND ${_alias}FILE_NAME = #{fileName}
        </if>
        <if test="fileType != null and fileType != ''">
            AND ${_alias}FILE_TYPE = #{fileType}
        </if>
        <if test="filePath != null and filePath != ''">
            AND ${_alias}FILE_PATH = #{filePath}
        </if>
        <if test="fileId != null and fileId != ''">
            AND ${_alias}FILE_ID = #{fileId}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate.enabled == true">
            <if test="rowUpdateDate.from != null and rowUpdateDate.from != ''">
            AND ${_alias}ROW_UPDATE_DATE >= TO_DATE(#{rowUpdateDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowUpdateDate.to != null and rowUpdateDate.to != ''">
            AND ${_alias}ROW_UPDATE_DATE <![CDATA[ < ]]> TO_DATE(#{rowUpdateDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}PGM_CODE AS ${_asPrefix}PGM_CODE, ${_alias}MENU_CONTENT AS ${_asPrefix}MENU_CONTENT, ${_alias}MENU_PATH AS ${_asPrefix}MENU_PATH, ${_alias}MENU_ORDER AS ${_asPrefix}MENU_ORDER, ${_alias}FILE_NAME AS ${_asPrefix}FILE_NAME, ${_alias}FILE_TYPE AS ${_asPrefix}FILE_TYPE, ${_alias}FILE_PATH AS ${_asPrefix}FILE_PATH, ${_alias}FILE_ID AS ${_asPrefix}FILE_ID, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}MENU_CONTENT, ${_alias}MENU_PATH, ${_alias}MENU_ORDER, ${_alias}FILE_NAME, ${_alias}FILE_TYPE, ${_alias}FILE_PATH, ${_alias}FILE_ID, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}MENU_CONTENT AS ${_asPrefix}MENU_CONTENT, ${_alias}MENU_PATH AS ${_asPrefix}MENU_PATH, ${_alias}MENU_ORDER AS ${_asPrefix}MENU_ORDER, ${_alias}FILE_NAME AS ${_asPrefix}FILE_NAME, ${_alias}FILE_TYPE AS ${_asPrefix}FILE_TYPE, ${_alias}FILE_PATH AS ${_asPrefix}FILE_PATH, ${_alias}FILE_ID AS ${_asPrefix}FILE_ID, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO        </when>
        <otherwise>
            ${_alias}MENU_CONTENT, ${_alias}MENU_PATH, ${_alias}MENU_ORDER, ${_alias}FILE_NAME, ${_alias}FILE_TYPE, ${_alias}FILE_PATH, ${_alias}FILE_ID, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}MENU_CONTENT, ${_alias}MENU_PATH, ${_alias}MENU_ORDER, ${_alias}FILE_NAME, ${_alias}FILE_TYPE, ${_alias}FILE_PATH, ${_alias}FILE_ID, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}MENU_CONTENT, ${_alias}MENU_PATH, ${_alias}MENU_ORDER, ${_alias}FILE_NAME, ${_alias}FILE_TYPE, ${_alias}FILE_PATH, ${_alias}FILE_ID, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO    </sql>

    <select id="simpleGetSmManual" parameterType="long" resultMap="simpleSmManualResult_">
        /* com.neofect.gts.core.services.sm.repository.SmManualRepository_.simpleGetSmManual */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_MANUAL
        WHERE
        COMPANY_CODE = #{companyCode}
        AND SYS_ID = #{sysId}
        AND PGM_CODE = #{pgmCode}
	</select>

    <select id="simpleListSmManualCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmManualRepository_.simpleListSmManualCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_MANUAL
        <include refid="simpleSmManualCondition_" />
    </select>

    <select id="simpleListSmManual" resultMap="simpleSmManualResult_">
        /* com.neofect.gts.core.services.sm.repository.SmManualRepository_.simpleListSmManual */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_MANUAL
        <include refid="simpleSmManualCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="menuContent != null and menuContent != ''">
            ${_alias}MENU_CONTENT = #{menuContent},
        </if>
        <if test="menuPath != null and menuPath != ''">
            ${_alias}MENU_PATH = #{menuPath},
        </if>
        <if test="menuOrder != null and menuOrder != ''">
            ${_alias}MENU_ORDER = #{menuOrder},
        </if>
        <if test="fileName != null and fileName != ''">
            ${_alias}FILE_NAME = #{fileName},
        </if>
        <if test="fileType != null and fileType != ''">
            ${_alias}FILE_TYPE = #{fileType},
        </if>
        <if test="filePath != null and filePath != ''">
            ${_alias}FILE_PATH = #{filePath},
        </if>
        <if test="fileId != null and fileId != ''">
            ${_alias}FILE_ID = #{fileId},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowUpdateDate != null">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
    </sql>

    <update id="updateSmManual" parameterType="com.neofect.gts.core.services.sm.domain.SmManual">
        /* com.neofect.gts.core.services.sm.repository.SmManualRepository_.updateSmManual */

        UPDATE GTS2016.SM_MANUAL
        SET
             MENU_CONTENT = #{menuContent}
            , MENU_PATH = #{menuPath}
            , MENU_ORDER = #{menuOrder}
            , FILE_NAME = #{fileName}
            , FILE_TYPE = #{fileType}
            , FILE_PATH = #{filePath}
            , FILE_ID = #{fileId}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
    </update>

    <update id="updateSmManualDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmManual">
        /* com.neofect.gts.core.services.sm.repository.SmManualRepository_.updateSmManualDynamic */

        UPDATE GTS2016.SM_MANUAL
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
    </update>

    <delete id="deleteSmManual" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmManualRepository_.deleteSmManual */

        DELETE FROM GTS2016.SM_MANUAL
        WHERE
            COMPANY_CODE = #{companyCode}
            AND SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
    </delete>

    <sql id="insert_values_">

        #{menuContent},
        #{menuPath},
        #{menuOrder},
        #{fileName},
        #{fileType},
        #{filePath},
        #{fileId},
        #{rowInputDate},
        #{rowInputIp},
        #{rowInputEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{rowUpdateEmpNo}
    </sql>

    <insert id="insertSmManual">
        /* com.neofect.gts.core.services.sm.repository.SmManualRepository_.insertSmManual */


        INSERT INTO GTS2016.SM_MANUAL
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

