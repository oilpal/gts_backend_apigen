<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_">

    <resultMap id="simpleSmManualDetailResult_" type="com.neofect.gts.core.services.sm.domain.SmManualDetail">
        <!-- 회사코드 -->
        <id     property="companyCode" column="COMPANY_CODE"/>
        <!-- 시스템코드 -->
        <id     property="sysId" column="SYS_ID"/>
        <!-- 메뉴코드 -->
        <id     property="pgmCode" column="PGM_CODE"/>
        <!-- 메뉴구분 -->
        <id     property="menuTag" column="MENU_TAG"/>
        <!-- 번호 -->
        <id     property="menuSeq" column="MENU_SEQ"/>
        <!-- 항목 -->
        <result property="menuTitle" column="MENU_TITLE"/>
        <!-- 내용 -->
        <result property="menuContent" column="MENU_CONTENT"/>
        <!-- 순서 -->
        <result property="sortOrder" column="SORT_ORDER"/>
        <!-- 입력일자 -->
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        <!-- 입력IP -->
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        <!-- 입력사번 -->
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        <!-- 수정일자 -->
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        <!-- 수정IP -->
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 수정사번 -->
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
    </resultMap>

    <sql id="simpleSmManualDetailCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="sysIds != null and !sysIds.isEmpty()">
            AND ${_alias}SYS_ID IN <foreach collection="sysIds" item="sysIdValue" open="(" close=")" separator=",">#{ sysIdValue }</foreach>
        </if>
        <if test="pgmCodes != null and !pgmCodes.isEmpty()">
            AND ${_alias}PGM_CODE IN <foreach collection="pgmCodes" item="pgmCodeValue" open="(" close=")" separator=",">#{ pgmCodeValue }</foreach>
        </if>
        <if test="menuTags != null and !menuTags.isEmpty()">
            AND ${_alias}MENU_TAG IN <foreach collection="menuTags" item="menuTagValue" open="(" close=")" separator=",">#{ menuTagValue }</foreach>
        </if>
        <if test="menuSeqs != null and !menuSeqs.isEmpty()">
            AND ${_alias}MENU_SEQ IN <foreach collection="menuSeqs" item="menuSeqValue" open="(" close=")" separator=",">#{ menuSeqValue }</foreach>
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="sysId != null and sysId != ''">
            AND ${_alias}SYS_ID = #{sysId}
        </if>
        <if test="pgmCode != null and pgmCode != ''">
            AND ${_alias}PGM_CODE = #{pgmCode}
        </if>
        <if test="menuTag != null and menuTag != ''">
            AND ${_alias}MENU_TAG = #{menuTag}
        </if>
        <if test="menuSeq != null">
            AND ${_alias}MENU_SEQ = #{menuSeq}
        </if>
        <if test="menuTitle != null and menuTitle != ''">
            AND ${_alias}MENU_TITLE = #{menuTitle}
        </if>
        <if test="menuContent != null and menuContent != ''">
            AND ${_alias}MENU_CONTENT = #{menuContent}
        </if>
        <if test="sortOrder != null">
            AND ${_alias}SORT_ORDER = #{sortOrder}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate.enabled == true">
            <if test="rowUpdateDate.from != null and rowUpdateDate.from != ''">
            AND ${_alias}ROW_UPDATE_DATE >= TO_DATE(#{rowUpdateDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowUpdateDate.to != null and rowUpdateDate.to != ''">
            AND ${_alias}ROW_UPDATE_DATE <![CDATA[ < ]]> TO_DATE(#{rowUpdateDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}PGM_CODE AS ${_asPrefix}PGM_CODE, ${_alias}MENU_TAG AS ${_asPrefix}MENU_TAG, ${_alias}MENU_SEQ AS ${_asPrefix}MENU_SEQ, ${_alias}MENU_TITLE AS ${_asPrefix}MENU_TITLE, ${_alias}MENU_CONTENT AS ${_asPrefix}MENU_CONTENT, ${_alias}SORT_ORDER AS ${_asPrefix}SORT_ORDER, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO        </when>
        <otherwise>
            ${_alias}COMPANY_CODE, ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}MENU_TAG, ${_alias}MENU_SEQ, ${_alias}MENU_TITLE, ${_alias}MENU_CONTENT, ${_alias}SORT_ORDER, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}MENU_TITLE AS ${_asPrefix}MENU_TITLE, ${_alias}MENU_CONTENT AS ${_asPrefix}MENU_CONTENT, ${_alias}SORT_ORDER AS ${_asPrefix}SORT_ORDER, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO        </when>
        <otherwise>
            ${_alias}MENU_TITLE, ${_alias}MENU_CONTENT, ${_alias}SORT_ORDER, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMPANY_CODE, ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}MENU_TAG, ${_alias}MENU_SEQ, ${_alias}MENU_TITLE, ${_alias}MENU_CONTENT, ${_alias}SORT_ORDER, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}MENU_TITLE, ${_alias}MENU_CONTENT, ${_alias}SORT_ORDER, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}ROW_UPDATE_EMP_NO    </sql>

    <select id="simpleGetSmManualDetail" parameterType="long" resultMap="simpleSmManualDetailResult_">
        /* com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_.simpleGetSmManualDetail */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_MANUAL_DETAIL
        WHERE
        COMPANY_CODE = #{companyCode}
        AND SYS_ID = #{sysId}
        AND PGM_CODE = #{pgmCode}
        AND MENU_TAG = #{menuTag}
        AND MENU_SEQ = #{menuSeq}
	</select>

    <select id="simpleListSmManualDetailCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_.simpleListSmManualDetailCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_MANUAL_DETAIL
        <include refid="simpleSmManualDetailCondition_" />
    </select>

    <select id="simpleListSmManualDetail" resultMap="simpleSmManualDetailResult_">
        /* com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_.simpleListSmManualDetail */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_MANUAL_DETAIL
        <include refid="simpleSmManualDetailCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="menuTitle != null and menuTitle != ''">
            ${_alias}MENU_TITLE = #{menuTitle},
        </if>
        <if test="menuContent != null and menuContent != ''">
            ${_alias}MENU_CONTENT = #{menuContent},
        </if>
        <if test="sortOrder != null">
            ${_alias}SORT_ORDER = #{sortOrder},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowUpdateDate != null">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
    </sql>

    <update id="updateSmManualDetail" parameterType="com.neofect.gts.core.services.sm.domain.SmManualDetail">
        /* com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_.updateSmManualDetail */

        UPDATE GTS2016.SM_MANUAL_DETAIL
        SET
             MENU_TITLE = #{menuTitle}
            , MENU_CONTENT = #{menuContent}
            , SORT_ORDER = #{sortOrder}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        WHERE
            COMPANY_CODE = #{companyCode}
            AND SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
            AND MENU_TAG = #{menuTag}
            AND MENU_SEQ = #{menuSeq}
    </update>

    <update id="updateSmManualDetailDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmManualDetail">
        /* com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_.updateSmManualDetailDynamic */

        UPDATE GTS2016.SM_MANUAL_DETAIL
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMPANY_CODE = #{companyCode}
            AND SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
            AND MENU_TAG = #{menuTag}
            AND MENU_SEQ = #{menuSeq}
    </update>

    <delete id="deleteSmManualDetail" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_.deleteSmManualDetail */

        DELETE FROM GTS2016.SM_MANUAL_DETAIL
        WHERE
            COMPANY_CODE = #{companyCode}
            AND SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
            AND MENU_TAG = #{menuTag}
            AND MENU_SEQ = #{menuSeq}
    </delete>

    <sql id="insert_values_">

        #{menuTitle},
        #{menuContent},
        #{sortOrder},
        #{rowInputDate},
        #{rowInputIp},
        #{rowInputEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{rowUpdateEmpNo}
    </sql>

    <insert id="insertSmManualDetail">
        /* com.neofect.gts.core.services.sm.repository.SmManualDetailRepository_.insertSmManualDetail */


        INSERT INTO GTS2016.SM_MANUAL_DETAIL
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

