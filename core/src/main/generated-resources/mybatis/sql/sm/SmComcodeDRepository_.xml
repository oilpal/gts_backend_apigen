<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_">

    <resultMap id="simpleSmComcodeDResult_" type="com.neofect.gts.core.services.sm.domain.SmComcodeD">
        <!-- 업무코드 -->
        <id     property="sysId" column="SYS_ID"/>
        <!-- 주코드 -->
        <id     property="hcode" column="HCODE"/>
        <!-- 부코드 -->
        <id     property="dcode" column="DCODE"/>
        <!-- 부코드명 -->
        <result property="dname" column="DNAME"/>
        <!-- 부코드명1 -->
        <result property="dname1" column="DNAME1"/>
        <!-- 부코드명2 -->
        <result property="dname2" column="DNAME2"/>
        
        <result property="dname3" column="DNAME3"/>
        
        <result property="dname4" column="DNAME4"/>
        
        <result property="dname5" column="DNAME5"/>
        <!-- 자료값(숫자) -->
        <result property="dvalue" column="DVALUE"/>
        
        <result property="dvalue1" column="DVALUE1"/>
        <!-- 자료값(문자) -->
        <result property="dvalue2" column="DVALUE2"/>
        
        <result property="dvalue3" column="DVALUE3"/>
        
        <result property="dvalue4" column="DVALUE4"/>
        
        <result property="dvalue5" column="DVALUE5"/>
        
        <result property="hdcode" column="HDCODE"/>
        <!-- 관련코드1 -->
        <result property="relateCode1" column="RELATE_CODE1"/>
        <!-- 관련코드2 -->
        <result property="relateCode2" column="RELATE_CODE2"/>
        <!-- 관련코드3 -->
        <result property="relateCode3" column="RELATE_CODE3"/>
        <!-- 관련코드4 -->
        <result property="relateCode4" column="RELATE_CODE4"/>
        <!-- 관련코드5 -->
        <result property="relateCode5" column="RELATE_CODE5"/>
        <!-- 고정코드1 -->
        <result property="fixCode1" column="FIX_CODE1"/>
        <!-- 고정코드2 -->
        <result property="fixCode2" column="FIX_CODE2"/>
        <!-- 고정코드3 -->
        <result property="fixCode3" column="FIX_CODE3"/>
        <!-- 고정코드4 -->
        <result property="fixCode4" column="FIX_CODE4"/>
        <!-- 고정코드5 -->
        <result property="fixCode5" column="FIX_CODE5"/>
        <!-- SYSTEM_CODE -->
        <result property="systemCode" column="SYSTEM_CODE"/>
        <!-- CODE_TYPE -->
        <result property="codeType" column="CODE_TYPE"/>
        <!-- 사용여부 -->
        <result property="useYn" column="USE_YN"/>
        <!-- CODE_GU -->
        <result property="codeGu" column="CODE_GU"/>
        <!-- 비고 -->
        <result property="rmk" column="RMK"/>
        <!-- 건설부문여부 -->
        <result property="conDiv" column="CON_DIV"/>
        <!-- 작성일시 -->
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        <!-- 작성자 -->
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        <!-- 작성자IP -->
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        <!-- 수정일시 -->
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        <!-- 수정자 -->
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        <!-- 수정자IP -->
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleSmComcodeDCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="sysIds != null and !sysIds.isEmpty()">
            AND ${_alias}SYS_ID IN <foreach collection="sysIds" item="sysIdValue" open="(" close=")" separator=",">#{ sysIdValue }</foreach>
        </if>
        <if test="hcodes != null and !hcodes.isEmpty()">
            AND ${_alias}HCODE IN <foreach collection="hcodes" item="hcodeValue" open="(" close=")" separator=",">#{ hcodeValue }</foreach>
        </if>
        <if test="dcodes != null and !dcodes.isEmpty()">
            AND ${_alias}DCODE IN <foreach collection="dcodes" item="dcodeValue" open="(" close=")" separator=",">#{ dcodeValue }</foreach>
        </if>
        <if test="sysId != null and sysId != ''">
            AND ${_alias}SYS_ID = #{sysId}
        </if>
        <if test="hcode != null and hcode != ''">
            AND ${_alias}HCODE = #{hcode}
        </if>
        <if test="dcode != null and dcode != ''">
            AND ${_alias}DCODE = #{dcode}
        </if>
        <if test="dname != null and dname != ''">
            AND ${_alias}DNAME = #{dname}
        </if>
        <if test="dname1 != null and dname1 != ''">
            AND ${_alias}DNAME1 = #{dname1}
        </if>
        <if test="dname2 != null and dname2 != ''">
            AND ${_alias}DNAME2 = #{dname2}
        </if>
        <if test="dname3 != null and dname3 != ''">
            AND ${_alias}DNAME3 = #{dname3}
        </if>
        <if test="dname4 != null and dname4 != ''">
            AND ${_alias}DNAME4 = #{dname4}
        </if>
        <if test="dname5 != null and dname5 != ''">
            AND ${_alias}DNAME5 = #{dname5}
        </if>
        <if test="dvalue != null">
            AND ${_alias}DVALUE = #{dvalue}
        </if>
        <if test="dvalue1 != null and dvalue1 != ''">
            AND ${_alias}DVALUE1 = #{dvalue1}
        </if>
        <if test="dvalue2 != null and dvalue2 != ''">
            AND ${_alias}DVALUE2 = #{dvalue2}
        </if>
        <if test="dvalue3 != null and dvalue3 != ''">
            AND ${_alias}DVALUE3 = #{dvalue3}
        </if>
        <if test="dvalue4 != null and dvalue4 != ''">
            AND ${_alias}DVALUE4 = #{dvalue4}
        </if>
        <if test="dvalue5 != null and dvalue5 != ''">
            AND ${_alias}DVALUE5 = #{dvalue5}
        </if>
        <if test="hdcode != null and hdcode != ''">
            AND ${_alias}HDCODE = #{hdcode}
        </if>
        <if test="relateCode1 != null and relateCode1 != ''">
            AND ${_alias}RELATE_CODE1 = #{relateCode1}
        </if>
        <if test="relateCode2 != null and relateCode2 != ''">
            AND ${_alias}RELATE_CODE2 = #{relateCode2}
        </if>
        <if test="relateCode3 != null and relateCode3 != ''">
            AND ${_alias}RELATE_CODE3 = #{relateCode3}
        </if>
        <if test="relateCode4 != null and relateCode4 != ''">
            AND ${_alias}RELATE_CODE4 = #{relateCode4}
        </if>
        <if test="relateCode5 != null and relateCode5 != ''">
            AND ${_alias}RELATE_CODE5 = #{relateCode5}
        </if>
        <if test="fixCode1 != null and fixCode1 != ''">
            AND ${_alias}FIX_CODE1 = #{fixCode1}
        </if>
        <if test="fixCode2 != null and fixCode2 != ''">
            AND ${_alias}FIX_CODE2 = #{fixCode2}
        </if>
        <if test="fixCode3 != null and fixCode3 != ''">
            AND ${_alias}FIX_CODE3 = #{fixCode3}
        </if>
        <if test="fixCode4 != null and fixCode4 != ''">
            AND ${_alias}FIX_CODE4 = #{fixCode4}
        </if>
        <if test="fixCode5 != null and fixCode5 != ''">
            AND ${_alias}FIX_CODE5 = #{fixCode5}
        </if>
        <if test="systemCode != null and systemCode != ''">
            AND ${_alias}SYSTEM_CODE = #{systemCode}
        </if>
        <if test="codeType != null and codeType != ''">
            AND ${_alias}CODE_TYPE = #{codeType}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="codeGu != null and codeGu != ''">
            AND ${_alias}CODE_GU = #{codeGu}
        </if>
        <if test="rmk != null and rmk != ''">
            AND ${_alias}RMK = #{rmk}
        </if>
        <if test="conDiv != null and conDiv != ''">
            AND ${_alias}CON_DIV = #{conDiv}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate.enabled == true">
            <if test="rowUpdateDate.from != null and rowUpdateDate.from != ''">
            AND ${_alias}ROW_UPDATE_DATE >= TO_DATE(#{rowUpdateDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowUpdateDate.to != null and rowUpdateDate.to != ''">
            AND ${_alias}ROW_UPDATE_DATE <![CDATA[ < ]]> TO_DATE(#{rowUpdateDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}HCODE AS ${_asPrefix}HCODE, ${_alias}DCODE AS ${_asPrefix}DCODE, ${_alias}DNAME AS ${_asPrefix}DNAME, ${_alias}DNAME1 AS ${_asPrefix}DNAME1, ${_alias}DNAME2 AS ${_asPrefix}DNAME2, ${_alias}DNAME3 AS ${_asPrefix}DNAME3, ${_alias}DNAME4 AS ${_asPrefix}DNAME4, ${_alias}DNAME5 AS ${_asPrefix}DNAME5, ${_alias}DVALUE AS ${_asPrefix}DVALUE, ${_alias}DVALUE1 AS ${_asPrefix}DVALUE1, ${_alias}DVALUE2 AS ${_asPrefix}DVALUE2, ${_alias}DVALUE3 AS ${_asPrefix}DVALUE3, ${_alias}DVALUE4 AS ${_asPrefix}DVALUE4, ${_alias}DVALUE5 AS ${_asPrefix}DVALUE5, ${_alias}HDCODE AS ${_asPrefix}HDCODE, ${_alias}RELATE_CODE1 AS ${_asPrefix}RELATE_CODE1, ${_alias}RELATE_CODE2 AS ${_asPrefix}RELATE_CODE2, ${_alias}RELATE_CODE3 AS ${_asPrefix}RELATE_CODE3, ${_alias}RELATE_CODE4 AS ${_asPrefix}RELATE_CODE4, ${_alias}RELATE_CODE5 AS ${_asPrefix}RELATE_CODE5, ${_alias}FIX_CODE1 AS ${_asPrefix}FIX_CODE1, ${_alias}FIX_CODE2 AS ${_asPrefix}FIX_CODE2, ${_alias}FIX_CODE3 AS ${_asPrefix}FIX_CODE3, ${_alias}FIX_CODE4 AS ${_asPrefix}FIX_CODE4, ${_alias}FIX_CODE5 AS ${_asPrefix}FIX_CODE5, ${_alias}SYSTEM_CODE AS ${_asPrefix}SYSTEM_CODE, ${_alias}CODE_TYPE AS ${_asPrefix}CODE_TYPE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}CODE_GU AS ${_asPrefix}CODE_GU, ${_alias}RMK AS ${_asPrefix}RMK, ${_alias}CON_DIV AS ${_asPrefix}CON_DIV, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}SYS_ID, ${_alias}HCODE, ${_alias}DCODE, ${_alias}DNAME, ${_alias}DNAME1, ${_alias}DNAME2, ${_alias}DNAME3, ${_alias}DNAME4, ${_alias}DNAME5, ${_alias}DVALUE, ${_alias}DVALUE1, ${_alias}DVALUE2, ${_alias}DVALUE3, ${_alias}DVALUE4, ${_alias}DVALUE5, ${_alias}HDCODE, ${_alias}RELATE_CODE1, ${_alias}RELATE_CODE2, ${_alias}RELATE_CODE3, ${_alias}RELATE_CODE4, ${_alias}RELATE_CODE5, ${_alias}FIX_CODE1, ${_alias}FIX_CODE2, ${_alias}FIX_CODE3, ${_alias}FIX_CODE4, ${_alias}FIX_CODE5, ${_alias}SYSTEM_CODE, ${_alias}CODE_TYPE, ${_alias}USE_YN, ${_alias}CODE_GU, ${_alias}RMK, ${_alias}CON_DIV, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}DNAME AS ${_asPrefix}DNAME, ${_alias}DNAME1 AS ${_asPrefix}DNAME1, ${_alias}DNAME2 AS ${_asPrefix}DNAME2, ${_alias}DNAME3 AS ${_asPrefix}DNAME3, ${_alias}DNAME4 AS ${_asPrefix}DNAME4, ${_alias}DNAME5 AS ${_asPrefix}DNAME5, ${_alias}DVALUE AS ${_asPrefix}DVALUE, ${_alias}DVALUE1 AS ${_asPrefix}DVALUE1, ${_alias}DVALUE2 AS ${_asPrefix}DVALUE2, ${_alias}DVALUE3 AS ${_asPrefix}DVALUE3, ${_alias}DVALUE4 AS ${_asPrefix}DVALUE4, ${_alias}DVALUE5 AS ${_asPrefix}DVALUE5, ${_alias}HDCODE AS ${_asPrefix}HDCODE, ${_alias}RELATE_CODE1 AS ${_asPrefix}RELATE_CODE1, ${_alias}RELATE_CODE2 AS ${_asPrefix}RELATE_CODE2, ${_alias}RELATE_CODE3 AS ${_asPrefix}RELATE_CODE3, ${_alias}RELATE_CODE4 AS ${_asPrefix}RELATE_CODE4, ${_alias}RELATE_CODE5 AS ${_asPrefix}RELATE_CODE5, ${_alias}FIX_CODE1 AS ${_asPrefix}FIX_CODE1, ${_alias}FIX_CODE2 AS ${_asPrefix}FIX_CODE2, ${_alias}FIX_CODE3 AS ${_asPrefix}FIX_CODE3, ${_alias}FIX_CODE4 AS ${_asPrefix}FIX_CODE4, ${_alias}FIX_CODE5 AS ${_asPrefix}FIX_CODE5, ${_alias}SYSTEM_CODE AS ${_asPrefix}SYSTEM_CODE, ${_alias}CODE_TYPE AS ${_asPrefix}CODE_TYPE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}CODE_GU AS ${_asPrefix}CODE_GU, ${_alias}RMK AS ${_asPrefix}RMK, ${_alias}CON_DIV AS ${_asPrefix}CON_DIV, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}DNAME, ${_alias}DNAME1, ${_alias}DNAME2, ${_alias}DNAME3, ${_alias}DNAME4, ${_alias}DNAME5, ${_alias}DVALUE, ${_alias}DVALUE1, ${_alias}DVALUE2, ${_alias}DVALUE3, ${_alias}DVALUE4, ${_alias}DVALUE5, ${_alias}HDCODE, ${_alias}RELATE_CODE1, ${_alias}RELATE_CODE2, ${_alias}RELATE_CODE3, ${_alias}RELATE_CODE4, ${_alias}RELATE_CODE5, ${_alias}FIX_CODE1, ${_alias}FIX_CODE2, ${_alias}FIX_CODE3, ${_alias}FIX_CODE4, ${_alias}FIX_CODE5, ${_alias}SYSTEM_CODE, ${_alias}CODE_TYPE, ${_alias}USE_YN, ${_alias}CODE_GU, ${_alias}RMK, ${_alias}CON_DIV, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}SYS_ID, ${_alias}HCODE, ${_alias}DCODE, ${_alias}DNAME, ${_alias}DNAME1, ${_alias}DNAME2, ${_alias}DNAME3, ${_alias}DNAME4, ${_alias}DNAME5, ${_alias}DVALUE, ${_alias}DVALUE1, ${_alias}DVALUE2, ${_alias}DVALUE3, ${_alias}DVALUE4, ${_alias}DVALUE5, ${_alias}HDCODE, ${_alias}RELATE_CODE1, ${_alias}RELATE_CODE2, ${_alias}RELATE_CODE3, ${_alias}RELATE_CODE4, ${_alias}RELATE_CODE5, ${_alias}FIX_CODE1, ${_alias}FIX_CODE2, ${_alias}FIX_CODE3, ${_alias}FIX_CODE4, ${_alias}FIX_CODE5, ${_alias}SYSTEM_CODE, ${_alias}CODE_TYPE, ${_alias}USE_YN, ${_alias}CODE_GU, ${_alias}RMK, ${_alias}CON_DIV, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}DNAME, ${_alias}DNAME1, ${_alias}DNAME2, ${_alias}DNAME3, ${_alias}DNAME4, ${_alias}DNAME5, ${_alias}DVALUE, ${_alias}DVALUE1, ${_alias}DVALUE2, ${_alias}DVALUE3, ${_alias}DVALUE4, ${_alias}DVALUE5, ${_alias}HDCODE, ${_alias}RELATE_CODE1, ${_alias}RELATE_CODE2, ${_alias}RELATE_CODE3, ${_alias}RELATE_CODE4, ${_alias}RELATE_CODE5, ${_alias}FIX_CODE1, ${_alias}FIX_CODE2, ${_alias}FIX_CODE3, ${_alias}FIX_CODE4, ${_alias}FIX_CODE5, ${_alias}SYSTEM_CODE, ${_alias}CODE_TYPE, ${_alias}USE_YN, ${_alias}CODE_GU, ${_alias}RMK, ${_alias}CON_DIV, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetSmComcodeD" parameterType="long" resultMap="simpleSmComcodeDResult_">
        /* com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_.simpleGetSmComcodeD */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_COMCODE_D
        WHERE
        SYS_ID = #{sysId}
        AND HCODE = #{hcode}
        AND DCODE = #{dcode}
	</select>

    <select id="simpleListSmComcodeDCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_.simpleListSmComcodeDCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_COMCODE_D
        <include refid="simpleSmComcodeDCondition_" />
    </select>

    <select id="simpleListSmComcodeD" resultMap="simpleSmComcodeDResult_">
        /* com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_.simpleListSmComcodeD */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_COMCODE_D
        <include refid="simpleSmComcodeDCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="dname != null and dname != ''">
            ${_alias}DNAME = #{dname},
        </if>
        <if test="dname1 != null and dname1 != ''">
            ${_alias}DNAME1 = #{dname1},
        </if>
        <if test="dname2 != null and dname2 != ''">
            ${_alias}DNAME2 = #{dname2},
        </if>
        <if test="dname3 != null and dname3 != ''">
            ${_alias}DNAME3 = #{dname3},
        </if>
        <if test="dname4 != null and dname4 != ''">
            ${_alias}DNAME4 = #{dname4},
        </if>
        <if test="dname5 != null and dname5 != ''">
            ${_alias}DNAME5 = #{dname5},
        </if>
        <if test="dvalue != null">
            ${_alias}DVALUE = #{dvalue},
        </if>
        <if test="dvalue1 != null and dvalue1 != ''">
            ${_alias}DVALUE1 = #{dvalue1},
        </if>
        <if test="dvalue2 != null and dvalue2 != ''">
            ${_alias}DVALUE2 = #{dvalue2},
        </if>
        <if test="dvalue3 != null and dvalue3 != ''">
            ${_alias}DVALUE3 = #{dvalue3},
        </if>
        <if test="dvalue4 != null and dvalue4 != ''">
            ${_alias}DVALUE4 = #{dvalue4},
        </if>
        <if test="dvalue5 != null and dvalue5 != ''">
            ${_alias}DVALUE5 = #{dvalue5},
        </if>
        <if test="hdcode != null and hdcode != ''">
            ${_alias}HDCODE = #{hdcode},
        </if>
        <if test="relateCode1 != null and relateCode1 != ''">
            ${_alias}RELATE_CODE1 = #{relateCode1},
        </if>
        <if test="relateCode2 != null and relateCode2 != ''">
            ${_alias}RELATE_CODE2 = #{relateCode2},
        </if>
        <if test="relateCode3 != null and relateCode3 != ''">
            ${_alias}RELATE_CODE3 = #{relateCode3},
        </if>
        <if test="relateCode4 != null and relateCode4 != ''">
            ${_alias}RELATE_CODE4 = #{relateCode4},
        </if>
        <if test="relateCode5 != null and relateCode5 != ''">
            ${_alias}RELATE_CODE5 = #{relateCode5},
        </if>
        <if test="fixCode1 != null and fixCode1 != ''">
            ${_alias}FIX_CODE1 = #{fixCode1},
        </if>
        <if test="fixCode2 != null and fixCode2 != ''">
            ${_alias}FIX_CODE2 = #{fixCode2},
        </if>
        <if test="fixCode3 != null and fixCode3 != ''">
            ${_alias}FIX_CODE3 = #{fixCode3},
        </if>
        <if test="fixCode4 != null and fixCode4 != ''">
            ${_alias}FIX_CODE4 = #{fixCode4},
        </if>
        <if test="fixCode5 != null and fixCode5 != ''">
            ${_alias}FIX_CODE5 = #{fixCode5},
        </if>
        <if test="systemCode != null and systemCode != ''">
            ${_alias}SYSTEM_CODE = #{systemCode},
        </if>
        <if test="codeType != null and codeType != ''">
            ${_alias}CODE_TYPE = #{codeType},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="codeGu != null and codeGu != ''">
            ${_alias}CODE_GU = #{codeGu},
        </if>
        <if test="rmk != null and rmk != ''">
            ${_alias}RMK = #{rmk},
        </if>
        <if test="conDiv != null and conDiv != ''">
            ${_alias}CON_DIV = #{conDiv},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateDate != null">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateSmComcodeD" parameterType="com.neofect.gts.core.services.sm.domain.SmComcodeD">
        /* com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_.updateSmComcodeD */

        UPDATE GTS2016.SM_COMCODE_D
        SET
             DNAME = #{dname}
            , DNAME1 = #{dname1}
            , DNAME2 = #{dname2}
            , DNAME3 = #{dname3}
            , DNAME4 = #{dname4}
            , DNAME5 = #{dname5}
            , DVALUE = #{dvalue}
            , DVALUE1 = #{dvalue1}
            , DVALUE2 = #{dvalue2}
            , DVALUE3 = #{dvalue3}
            , DVALUE4 = #{dvalue4}
            , DVALUE5 = #{dvalue5}
            , HDCODE = #{hdcode}
            , RELATE_CODE1 = #{relateCode1}
            , RELATE_CODE2 = #{relateCode2}
            , RELATE_CODE3 = #{relateCode3}
            , RELATE_CODE4 = #{relateCode4}
            , RELATE_CODE5 = #{relateCode5}
            , FIX_CODE1 = #{fixCode1}
            , FIX_CODE2 = #{fixCode2}
            , FIX_CODE3 = #{fixCode3}
            , FIX_CODE4 = #{fixCode4}
            , FIX_CODE5 = #{fixCode5}
            , SYSTEM_CODE = #{systemCode}
            , CODE_TYPE = #{codeType}
            , USE_YN = #{useYn}
            , CODE_GU = #{codeGu}
            , RMK = #{rmk}
            , CON_DIV = #{conDiv}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            SYS_ID = #{sysId}
            AND HCODE = #{hcode}
            AND DCODE = #{dcode}
    </update>

    <update id="updateSmComcodeDDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmComcodeD">
        /* com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_.updateSmComcodeDDynamic */

        UPDATE GTS2016.SM_COMCODE_D
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            SYS_ID = #{sysId}
            AND HCODE = #{hcode}
            AND DCODE = #{dcode}
    </update>

    <delete id="deleteSmComcodeD" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_.deleteSmComcodeD */

        DELETE FROM GTS2016.SM_COMCODE_D
        WHERE
            SYS_ID = #{sysId}
            AND HCODE = #{hcode}
            AND DCODE = #{dcode}
    </delete>

    <sql id="insert_values_">

        #{dname},
        #{dname1},
        #{dname2},
        #{dname3},
        #{dname4},
        #{dname5},
        #{dvalue},
        #{dvalue1},
        #{dvalue2},
        #{dvalue3},
        #{dvalue4},
        #{dvalue5},
        #{hdcode},
        #{relateCode1},
        #{relateCode2},
        #{relateCode3},
        #{relateCode4},
        #{relateCode5},
        #{fixCode1},
        #{fixCode2},
        #{fixCode3},
        #{fixCode4},
        #{fixCode5},
        #{systemCode},
        #{codeType},
        #{useYn},
        #{codeGu},
        #{rmk},
        #{conDiv},
        #{rowInputDate},
        #{rowInputEmpNo},
        #{rowInputIp},
        #{rowUpdateDate},
        #{rowUpdateEmpNo},
        #{rowUpdateIp}
    </sql>

    <insert id="insertSmComcodeD">
        /* com.neofect.gts.core.services.sm.repository.SmComcodeDRepository_.insertSmComcodeD */


        INSERT INTO GTS2016.SM_COMCODE_D
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

