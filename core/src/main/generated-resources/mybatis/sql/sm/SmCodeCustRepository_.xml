<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_">

    <resultMap id="simpleSmCodeCustResult_" type="com.neofect.gts.core.services.sm.domain.SmCodeCust">
        
        <id     property="id" column="CUST_CODE"/>
        
        <result property="approveYn" column="APPROVE_YN"/>
        
        <result property="useYn" column="USE_YN"/>
        
        <result property="custDiv" column="CUST_DIV"/>
        
        <result property="custName" column="CUST_NAME"/>
        
        <result property="custAbbr" column="CUST_ABBR"/>
        
        <result property="custEng" column="CUST_ENG"/>
        
        <result property="custLegalNo" column="CUST_LEGAL_NO"/>
        
        <result property="representName" column="REPRESENT_NAME"/>
        
        <result property="representRrn" column="REPRESENT_RRN"/>
        
        <result property="bizStatus" column="BIZ_STATUS"/>
        
        <result property="bizType" column="BIZ_TYPE"/>
        
        <result property="phone" column="PHONE"/>
        
        <result property="fax" column="FAX"/>
        
        <result property="zipCode" column="ZIP_CODE"/>
        
        <result property="addr1" column="ADDR1"/>
        
        <result property="addr2" column="ADDR2"/>
        
        <result property="custMatching" column="CUST_MATCHING"/>
        
        <result property="custKind" column="CUST_KIND"/>
        
        <result property="inoutTag" column="INOUT_TAG"/>
        
        <result property="partnerTag" column="PARTNER_TAG"/>
        
        <result property="inputDutyId" column="INPUT_DUTY_ID"/>
        
        <result property="inputDate" column="INPUT_DATE"/>
        
        <result property="chgDutyId" column="CHG_DUTY_ID"/>
        
        <result property="chgDate" column="CHG_DATE"/>
        
        <result property="inputCompCode" column="INPUT_COMP_CODE"/>
        
        <result property="chgCompCode" column="CHG_COMP_CODE"/>
        
        <result property="sysId" column="SYS_ID"/>
        
        <result property="compCode" column="COMP_CODE"/>
        
        <result property="statusCode" column="STATUS_CODE"/>
        
        <result property="closingDate" column="CLOSING_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleSmCodeCustCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}CUST_CODE IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null and id != ''">
            AND ${_alias}CUST_CODE = #{id}
        </if>
        <if test="approveYn != null and approveYn != ''">
            AND ${_alias}APPROVE_YN = #{approveYn}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="custDiv != null and custDiv != ''">
            AND ${_alias}CUST_DIV = #{custDiv}
        </if>
        <if test="custName != null and custName != ''">
            AND ${_alias}CUST_NAME = #{custName}
        </if>
        <if test="custAbbr != null and custAbbr != ''">
            AND ${_alias}CUST_ABBR = #{custAbbr}
        </if>
        <if test="custEng != null and custEng != ''">
            AND ${_alias}CUST_ENG = #{custEng}
        </if>
        <if test="custLegalNo != null and custLegalNo != ''">
            AND ${_alias}CUST_LEGAL_NO = #{custLegalNo}
        </if>
        <if test="representName != null and representName != ''">
            AND ${_alias}REPRESENT_NAME = #{representName}
        </if>
        <if test="representRrn != null and representRrn != ''">
            AND ${_alias}REPRESENT_RRN = #{representRrn}
        </if>
        <if test="bizStatus != null and bizStatus != ''">
            AND ${_alias}BIZ_STATUS = #{bizStatus}
        </if>
        <if test="bizType != null and bizType != ''">
            AND ${_alias}BIZ_TYPE = #{bizType}
        </if>
        <if test="phone != null and phone != ''">
            AND ${_alias}PHONE = #{phone}
        </if>
        <if test="fax != null and fax != ''">
            AND ${_alias}FAX = #{fax}
        </if>
        <if test="zipCode != null and zipCode != ''">
            AND ${_alias}ZIP_CODE = #{zipCode}
        </if>
        <if test="addr1 != null and addr1 != ''">
            AND ${_alias}ADDR1 = #{addr1}
        </if>
        <if test="addr2 != null and addr2 != ''">
            AND ${_alias}ADDR2 = #{addr2}
        </if>
        <if test="custMatching != null and custMatching != ''">
            AND ${_alias}CUST_MATCHING = #{custMatching}
        </if>
        <if test="custKind != null and custKind != ''">
            AND ${_alias}CUST_KIND = #{custKind}
        </if>
        <if test="inoutTag != null and inoutTag != ''">
            AND ${_alias}INOUT_TAG = #{inoutTag}
        </if>
        <if test="partnerTag != null and partnerTag != ''">
            AND ${_alias}PARTNER_TAG = #{partnerTag}
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            AND ${_alias}INPUT_DUTY_ID = #{inputDutyId}
        </if>
        <if test="inputDate != null and inputDate != ''">
            AND ${_alias}INPUT_DATE = #{inputDate}
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            AND ${_alias}CHG_DUTY_ID = #{chgDutyId}
        </if>
        <if test="chgDate != null and chgDate != ''">
            AND ${_alias}CHG_DATE = #{chgDate}
        </if>
        <if test="inputCompCode != null and inputCompCode != ''">
            AND ${_alias}INPUT_COMP_CODE = #{inputCompCode}
        </if>
        <if test="chgCompCode != null and chgCompCode != ''">
            AND ${_alias}CHG_COMP_CODE = #{chgCompCode}
        </if>
        <if test="sysId != null and sysId != ''">
            AND ${_alias}SYS_ID = #{sysId}
        </if>
        <if test="compCode != null and compCode != ''">
            AND ${_alias}COMP_CODE = #{compCode}
        </if>
        <if test="statusCode != null and statusCode != ''">
            AND ${_alias}STATUS_CODE = #{statusCode}
        </if>
        <if test="closingDate != null and closingDate != ''">
            AND ${_alias}CLOSING_DATE = #{closingDate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}APPROVE_YN AS ${_asPrefix}APPROVE_YN, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}CUST_DIV AS ${_asPrefix}CUST_DIV, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}CUST_ABBR AS ${_asPrefix}CUST_ABBR, ${_alias}CUST_ENG AS ${_asPrefix}CUST_ENG, ${_alias}CUST_LEGAL_NO AS ${_asPrefix}CUST_LEGAL_NO, ${_alias}REPRESENT_NAME AS ${_asPrefix}REPRESENT_NAME, ${_alias}REPRESENT_RRN AS ${_asPrefix}REPRESENT_RRN, ${_alias}BIZ_STATUS AS ${_asPrefix}BIZ_STATUS, ${_alias}BIZ_TYPE AS ${_asPrefix}BIZ_TYPE, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}FAX AS ${_asPrefix}FAX, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}CUST_MATCHING AS ${_asPrefix}CUST_MATCHING, ${_alias}CUST_KIND AS ${_asPrefix}CUST_KIND, ${_alias}INOUT_TAG AS ${_asPrefix}INOUT_TAG, ${_alias}PARTNER_TAG AS ${_asPrefix}PARTNER_TAG, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}INPUT_COMP_CODE AS ${_asPrefix}INPUT_COMP_CODE, ${_alias}CHG_COMP_CODE AS ${_asPrefix}CHG_COMP_CODE, ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}COMP_CODE AS ${_asPrefix}COMP_CODE, ${_alias}STATUS_CODE AS ${_asPrefix}STATUS_CODE, ${_alias}CLOSING_DATE AS ${_asPrefix}CLOSING_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}CUST_CODE, ${_alias}APPROVE_YN, ${_alias}USE_YN, ${_alias}CUST_DIV, ${_alias}CUST_NAME, ${_alias}CUST_ABBR, ${_alias}CUST_ENG, ${_alias}CUST_LEGAL_NO, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}FAX, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}CUST_MATCHING, ${_alias}CUST_KIND, ${_alias}INOUT_TAG, ${_alias}PARTNER_TAG, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}INPUT_COMP_CODE, ${_alias}CHG_COMP_CODE, ${_alias}SYS_ID, ${_alias}COMP_CODE, ${_alias}STATUS_CODE, ${_alias}CLOSING_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}APPROVE_YN AS ${_asPrefix}APPROVE_YN, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}CUST_DIV AS ${_asPrefix}CUST_DIV, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}CUST_ABBR AS ${_asPrefix}CUST_ABBR, ${_alias}CUST_ENG AS ${_asPrefix}CUST_ENG, ${_alias}CUST_LEGAL_NO AS ${_asPrefix}CUST_LEGAL_NO, ${_alias}REPRESENT_NAME AS ${_asPrefix}REPRESENT_NAME, ${_alias}REPRESENT_RRN AS ${_asPrefix}REPRESENT_RRN, ${_alias}BIZ_STATUS AS ${_asPrefix}BIZ_STATUS, ${_alias}BIZ_TYPE AS ${_asPrefix}BIZ_TYPE, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}FAX AS ${_asPrefix}FAX, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}CUST_MATCHING AS ${_asPrefix}CUST_MATCHING, ${_alias}CUST_KIND AS ${_asPrefix}CUST_KIND, ${_alias}INOUT_TAG AS ${_asPrefix}INOUT_TAG, ${_alias}PARTNER_TAG AS ${_asPrefix}PARTNER_TAG, ${_alias}INPUT_DUTY_ID AS ${_asPrefix}INPUT_DUTY_ID, ${_alias}INPUT_DATE AS ${_asPrefix}INPUT_DATE, ${_alias}CHG_DUTY_ID AS ${_asPrefix}CHG_DUTY_ID, ${_alias}CHG_DATE AS ${_asPrefix}CHG_DATE, ${_alias}INPUT_COMP_CODE AS ${_asPrefix}INPUT_COMP_CODE, ${_alias}CHG_COMP_CODE AS ${_asPrefix}CHG_COMP_CODE, ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}COMP_CODE AS ${_asPrefix}COMP_CODE, ${_alias}STATUS_CODE AS ${_asPrefix}STATUS_CODE, ${_alias}CLOSING_DATE AS ${_asPrefix}CLOSING_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}APPROVE_YN, ${_alias}USE_YN, ${_alias}CUST_DIV, ${_alias}CUST_NAME, ${_alias}CUST_ABBR, ${_alias}CUST_ENG, ${_alias}CUST_LEGAL_NO, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}FAX, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}CUST_MATCHING, ${_alias}CUST_KIND, ${_alias}INOUT_TAG, ${_alias}PARTNER_TAG, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}INPUT_COMP_CODE, ${_alias}CHG_COMP_CODE, ${_alias}SYS_ID, ${_alias}COMP_CODE, ${_alias}STATUS_CODE, ${_alias}CLOSING_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}CUST_CODE, ${_alias}APPROVE_YN, ${_alias}USE_YN, ${_alias}CUST_DIV, ${_alias}CUST_NAME, ${_alias}CUST_ABBR, ${_alias}CUST_ENG, ${_alias}CUST_LEGAL_NO, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}FAX, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}CUST_MATCHING, ${_alias}CUST_KIND, ${_alias}INOUT_TAG, ${_alias}PARTNER_TAG, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}INPUT_COMP_CODE, ${_alias}CHG_COMP_CODE, ${_alias}SYS_ID, ${_alias}COMP_CODE, ${_alias}STATUS_CODE, ${_alias}CLOSING_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}APPROVE_YN, ${_alias}USE_YN, ${_alias}CUST_DIV, ${_alias}CUST_NAME, ${_alias}CUST_ABBR, ${_alias}CUST_ENG, ${_alias}CUST_LEGAL_NO, ${_alias}REPRESENT_NAME, ${_alias}REPRESENT_RRN, ${_alias}BIZ_STATUS, ${_alias}BIZ_TYPE, ${_alias}PHONE, ${_alias}FAX, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}CUST_MATCHING, ${_alias}CUST_KIND, ${_alias}INOUT_TAG, ${_alias}PARTNER_TAG, ${_alias}INPUT_DUTY_ID, ${_alias}INPUT_DATE, ${_alias}CHG_DUTY_ID, ${_alias}CHG_DATE, ${_alias}INPUT_COMP_CODE, ${_alias}CHG_COMP_CODE, ${_alias}SYS_ID, ${_alias}COMP_CODE, ${_alias}STATUS_CODE, ${_alias}CLOSING_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetSmCodeCust" parameterType="long" resultMap="simpleSmCodeCustResult_">
        /* com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_.simpleGetSmCodeCust */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_CODE_CUST
        WHERE
        CUST_CODE = #{id}
	</select>

    <select id="simpleListSmCodeCustCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_.simpleListSmCodeCustCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_CODE_CUST
        <include refid="simpleSmCodeCustCondition_" />
    </select>

    <select id="simpleListSmCodeCust" resultMap="simpleSmCodeCustResult_">
        /* com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_.simpleListSmCodeCust */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_CODE_CUST
        <include refid="simpleSmCodeCustCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="approveYn != null and approveYn != ''">
            ${_alias}APPROVE_YN = #{approveYn},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="custDiv != null and custDiv != ''">
            ${_alias}CUST_DIV = #{custDiv},
        </if>
        <if test="custName != null and custName != ''">
            ${_alias}CUST_NAME = #{custName},
        </if>
        <if test="custAbbr != null and custAbbr != ''">
            ${_alias}CUST_ABBR = #{custAbbr},
        </if>
        <if test="custEng != null and custEng != ''">
            ${_alias}CUST_ENG = #{custEng},
        </if>
        <if test="custLegalNo != null and custLegalNo != ''">
            ${_alias}CUST_LEGAL_NO = #{custLegalNo},
        </if>
        <if test="representName != null and representName != ''">
            ${_alias}REPRESENT_NAME = #{representName},
        </if>
        <if test="representRrn != null and representRrn != ''">
            ${_alias}REPRESENT_RRN = #{representRrn},
        </if>
        <if test="bizStatus != null and bizStatus != ''">
            ${_alias}BIZ_STATUS = #{bizStatus},
        </if>
        <if test="bizType != null and bizType != ''">
            ${_alias}BIZ_TYPE = #{bizType},
        </if>
        <if test="phone != null and phone != ''">
            ${_alias}PHONE = #{phone},
        </if>
        <if test="fax != null and fax != ''">
            ${_alias}FAX = #{fax},
        </if>
        <if test="zipCode != null and zipCode != ''">
            ${_alias}ZIP_CODE = #{zipCode},
        </if>
        <if test="addr1 != null and addr1 != ''">
            ${_alias}ADDR1 = #{addr1},
        </if>
        <if test="addr2 != null and addr2 != ''">
            ${_alias}ADDR2 = #{addr2},
        </if>
        <if test="custMatching != null and custMatching != ''">
            ${_alias}CUST_MATCHING = #{custMatching},
        </if>
        <if test="custKind != null and custKind != ''">
            ${_alias}CUST_KIND = #{custKind},
        </if>
        <if test="inoutTag != null and inoutTag != ''">
            ${_alias}INOUT_TAG = #{inoutTag},
        </if>
        <if test="partnerTag != null and partnerTag != ''">
            ${_alias}PARTNER_TAG = #{partnerTag},
        </if>
        <if test="inputDutyId != null and inputDutyId != ''">
            ${_alias}INPUT_DUTY_ID = #{inputDutyId},
        </if>
        <if test="inputDate != null and inputDate != ''">
            ${_alias}INPUT_DATE = #{inputDate},
        </if>
        <if test="chgDutyId != null and chgDutyId != ''">
            ${_alias}CHG_DUTY_ID = #{chgDutyId},
        </if>
        <if test="chgDate != null and chgDate != ''">
            ${_alias}CHG_DATE = #{chgDate},
        </if>
        <if test="inputCompCode != null and inputCompCode != ''">
            ${_alias}INPUT_COMP_CODE = #{inputCompCode},
        </if>
        <if test="chgCompCode != null and chgCompCode != ''">
            ${_alias}CHG_COMP_CODE = #{chgCompCode},
        </if>
        <if test="sysId != null and sysId != ''">
            ${_alias}SYS_ID = #{sysId},
        </if>
        <if test="compCode != null and compCode != ''">
            ${_alias}COMP_CODE = #{compCode},
        </if>
        <if test="statusCode != null and statusCode != ''">
            ${_alias}STATUS_CODE = #{statusCode},
        </if>
        <if test="closingDate != null and closingDate != ''">
            ${_alias}CLOSING_DATE = #{closingDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateSmCodeCust" parameterType="com.neofect.gts.core.services.sm.domain.SmCodeCust">
        /* com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_.updateSmCodeCust */

        UPDATE GTS2016.SM_CODE_CUST
        SET
             APPROVE_YN = #{approveYn}
            , USE_YN = #{useYn}
            , CUST_DIV = #{custDiv}
            , CUST_NAME = #{custName}
            , CUST_ABBR = #{custAbbr}
            , CUST_ENG = #{custEng}
            , CUST_LEGAL_NO = #{custLegalNo}
            , REPRESENT_NAME = #{representName}
            , REPRESENT_RRN = #{representRrn}
            , BIZ_STATUS = #{bizStatus}
            , BIZ_TYPE = #{bizType}
            , PHONE = #{phone}
            , FAX = #{fax}
            , ZIP_CODE = #{zipCode}
            , ADDR1 = #{addr1}
            , ADDR2 = #{addr2}
            , CUST_MATCHING = #{custMatching}
            , CUST_KIND = #{custKind}
            , INOUT_TAG = #{inoutTag}
            , PARTNER_TAG = #{partnerTag}
            , INPUT_DUTY_ID = #{inputDutyId}
            , INPUT_DATE = #{inputDate}
            , CHG_DUTY_ID = #{chgDutyId}
            , CHG_DATE = #{chgDate}
            , INPUT_COMP_CODE = #{inputCompCode}
            , CHG_COMP_CODE = #{chgCompCode}
            , SYS_ID = #{sysId}
            , COMP_CODE = #{compCode}
            , STATUS_CODE = #{statusCode}
            , CLOSING_DATE = #{closingDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            CUST_CODE = #{id}
    </update>

    <update id="updateSmCodeCustDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmCodeCust">
        /* com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_.updateSmCodeCustDynamic */

        UPDATE GTS2016.SM_CODE_CUST
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            CUST_CODE = #{id}
    </update>

    <delete id="deleteSmCodeCust" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_.deleteSmCodeCust */

        DELETE FROM GTS2016.SM_CODE_CUST
        WHERE
            CUST_CODE = #{id}
    </delete>

    <sql id="insert_values_">

        #{approveYn},
        #{useYn},
        #{custDiv},
        #{custName},
        #{custAbbr},
        #{custEng},
        #{custLegalNo},
        #{representName},
        #{representRrn},
        #{bizStatus},
        #{bizType},
        #{phone},
        #{fax},
        #{zipCode},
        #{addr1},
        #{addr2},
        #{custMatching},
        #{custKind},
        #{inoutTag},
        #{partnerTag},
        #{inputDutyId},
        #{inputDate},
        #{chgDutyId},
        #{chgDate},
        #{inputCompCode},
        #{chgCompCode},
        #{sysId},
        #{compCode},
        #{statusCode},
        #{closingDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertSmCodeCust">
        /* com.neofect.gts.core.services.sm.repository.SmCodeCustRepository_.insertSmCodeCust */


        INSERT INTO GTS2016.SM_CODE_CUST
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

