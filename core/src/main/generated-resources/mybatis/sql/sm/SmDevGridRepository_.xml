<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmDevGridRepository_">

    <resultMap id="simpleSmDevGridResult_" type="com.neofect.gts.core.services.sm.domain.SmDevGrid">
        
        <id     property="sysId" column="SYS_ID"/>
        
        <id     property="pgmCode" column="PGM_CODE"/>
        
        <id     property="gridId" column="GRID_ID"/>
        
        <result property="sqlFile" column="SQL_FILE"/>
        
        <result property="sqlId" column="SQL_ID"/>
        
        <result property="updateTable" column="UPDATE_TABLE"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleSmDevGridCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="sysIds != null and !sysIds.isEmpty()">
            AND ${_alias}SYS_ID IN <foreach collection="sysIds" item="sysIdValue" open="(" close=")" separator=",">#{ sysIdValue }</foreach>
        </if>
        <if test="pgmCodes != null and !pgmCodes.isEmpty()">
            AND ${_alias}PGM_CODE IN <foreach collection="pgmCodes" item="pgmCodeValue" open="(" close=")" separator=",">#{ pgmCodeValue }</foreach>
        </if>
        <if test="gridIds != null and !gridIds.isEmpty()">
            AND ${_alias}GRID_ID IN <foreach collection="gridIds" item="gridIdValue" open="(" close=")" separator=",">#{ gridIdValue }</foreach>
        </if>
        <if test="sysId != null and sysId != ''">
            AND ${_alias}SYS_ID = #{sysId}
        </if>
        <if test="pgmCode != null and pgmCode != ''">
            AND ${_alias}PGM_CODE = #{pgmCode}
        </if>
        <if test="gridId != null and gridId != ''">
            AND ${_alias}GRID_ID = #{gridId}
        </if>
        <if test="sqlFile != null and sqlFile != ''">
            AND ${_alias}SQL_FILE = #{sqlFile}
        </if>
        <if test="sqlId != null and sqlId != ''">
            AND ${_alias}SQL_ID = #{sqlId}
        </if>
        <if test="updateTable != null and updateTable != ''">
            AND ${_alias}UPDATE_TABLE = #{updateTable}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate.enabled == true">
            <if test="rowUpdateDate.from != null and rowUpdateDate.from != ''">
            AND ${_alias}ROW_UPDATE_DATE >= TO_DATE(#{rowUpdateDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowUpdateDate.to != null and rowUpdateDate.to != ''">
            AND ${_alias}ROW_UPDATE_DATE <![CDATA[ < ]]> TO_DATE(#{rowUpdateDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SYS_ID AS ${_asPrefix}SYS_ID, ${_alias}PGM_CODE AS ${_asPrefix}PGM_CODE, ${_alias}GRID_ID AS ${_asPrefix}GRID_ID, ${_alias}SQL_FILE AS ${_asPrefix}SQL_FILE, ${_alias}SQL_ID AS ${_asPrefix}SQL_ID, ${_alias}UPDATE_TABLE AS ${_asPrefix}UPDATE_TABLE, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}GRID_ID, ${_alias}SQL_FILE, ${_alias}SQL_ID, ${_alias}UPDATE_TABLE, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SQL_FILE AS ${_asPrefix}SQL_FILE, ${_alias}SQL_ID AS ${_asPrefix}SQL_ID, ${_alias}UPDATE_TABLE AS ${_asPrefix}UPDATE_TABLE, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}SQL_FILE, ${_alias}SQL_ID, ${_alias}UPDATE_TABLE, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}SYS_ID, ${_alias}PGM_CODE, ${_alias}GRID_ID, ${_alias}SQL_FILE, ${_alias}SQL_ID, ${_alias}UPDATE_TABLE, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}SQL_FILE, ${_alias}SQL_ID, ${_alias}UPDATE_TABLE, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetSmDevGrid" parameterType="long" resultMap="simpleSmDevGridResult_">
        /* com.neofect.gts.core.services.sm.repository.SmDevGridRepository_.simpleGetSmDevGrid */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_DEV_GRID
        WHERE
        SYS_ID = #{sysId}
        AND PGM_CODE = #{pgmCode}
        AND GRID_ID = #{gridId}
	</select>

    <select id="simpleListSmDevGridCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmDevGridRepository_.simpleListSmDevGridCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_DEV_GRID
        <include refid="simpleSmDevGridCondition_" />
    </select>

    <select id="simpleListSmDevGrid" resultMap="simpleSmDevGridResult_">
        /* com.neofect.gts.core.services.sm.repository.SmDevGridRepository_.simpleListSmDevGrid */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_DEV_GRID
        <include refid="simpleSmDevGridCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="sqlFile != null and sqlFile != ''">
            ${_alias}SQL_FILE = #{sqlFile},
        </if>
        <if test="sqlId != null and sqlId != ''">
            ${_alias}SQL_ID = #{sqlId},
        </if>
        <if test="updateTable != null and updateTable != ''">
            ${_alias}UPDATE_TABLE = #{updateTable},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateDate != null">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateSmDevGrid" parameterType="com.neofect.gts.core.services.sm.domain.SmDevGrid">
        /* com.neofect.gts.core.services.sm.repository.SmDevGridRepository_.updateSmDevGrid */

        UPDATE GTS2016.SM_DEV_GRID
        SET
             SQL_FILE = #{sqlFile}
            , SQL_ID = #{sqlId}
            , UPDATE_TABLE = #{updateTable}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
            AND GRID_ID = #{gridId}
    </update>

    <update id="updateSmDevGridDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmDevGrid">
        /* com.neofect.gts.core.services.sm.repository.SmDevGridRepository_.updateSmDevGridDynamic */

        UPDATE GTS2016.SM_DEV_GRID
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
            AND GRID_ID = #{gridId}
    </update>

    <delete id="deleteSmDevGrid" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmDevGridRepository_.deleteSmDevGrid */

        DELETE FROM GTS2016.SM_DEV_GRID
        WHERE
            SYS_ID = #{sysId}
            AND PGM_CODE = #{pgmCode}
            AND GRID_ID = #{gridId}
    </delete>

    <sql id="insert_values_">

        #{sqlFile},
        #{sqlId},
        #{updateTable},
        #{rowInputDate},
        #{rowInputEmpNo},
        #{rowInputIp},
        #{rowUpdateDate},
        #{rowUpdateEmpNo},
        #{rowUpdateIp}
    </sql>

    <insert id="insertSmDevGrid">
        /* com.neofect.gts.core.services.sm.repository.SmDevGridRepository_.insertSmDevGrid */


        INSERT INTO GTS2016.SM_DEV_GRID
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

