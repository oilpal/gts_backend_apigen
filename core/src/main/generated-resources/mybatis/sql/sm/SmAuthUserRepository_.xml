<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_">

    <resultMap id="simpleSmAuthUserResult_" type="com.neofect.gts.core.services.sm.domain.SmAuthUser">
        <!-- 사번 -->
        <id     property="userId" column="USER_ID"/>
        <!-- 회사코드 -->
        <id     property="companyCode" column="COMPANY_CODE"/>
        <!-- 성명 -->
        <result property="userName" column="USER_NAME"/>
        <!-- 사용자 설명 -->
        <result property="userDesc" column="USER_DESC"/>
        <!-- 로그인 ID -->
        <result property="loginId" column="LOGIN_ID"/>
        <!-- 비밀번호 -->
        <result property="userPassword" column="USER_PASSWORD"/>
        <!-- 사용구분 -->
        <result property="useYn" column="USE_YN"/>
        <!-- 부서코드 -->
        <result property="deptCode" column="DEPT_CODE"/>
        <!-- 회계부서조회구분 -->
        <result property="amDeptDiv" column="AM_DEPT_DIV"/>
        <!-- 회계담당자구분 -->
        <result property="amUserDiv" column="AM_USER_DIV"/>
        <!-- 도움말편집권한 -->
        <result property="helpEditYn" column="HELP_EDIT_YN"/>
        <!-- 로그인 시각 -->
        <result property="loginTime" column="LOGIN_TIME"/>
        <!-- IP 주소 -->
        <result property="ipAddr" column="IP_ADDR"/>
        <!-- Lock 번호 -->
        <result property="lockNo" column="LOCK_NO"/>
        <!-- 로그아웃 시각 -->
        <result property="logoutTime" column="LOGOUT_TIME"/>
        
        <result property="infoPassword" column="INFO_PASSWORD"/>
        
        <result property="eisYn" column="EIS_YN"/>
        
        <result property="ammasterYn" column="AMMASTER_YN"/>
        
        <result property="hrmasterYn" column="HRMASTER_YN"/>
        
        <result property="epmasterYn" column="EPMASTER_YN"/>
        
        <result property="amCompanyCode" column="AM_COMPANY_CODE"/>
        
        <result property="hrCompanyCode" column="HR_COMPANY_CODE"/>
        
        <result property="amDeptCode" column="AM_DEPT_CODE"/>
        
        <result property="hrDeptCode" column="HR_DEPT_CODE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleSmAuthUserCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="userIds != null and !userIds.isEmpty()">
            AND ${_alias}USER_ID IN <foreach collection="userIds" item="userIdValue" open="(" close=")" separator=",">#{ userIdValue }</foreach>
        </if>
        <if test="companyCodes != null and !companyCodes.isEmpty()">
            AND ${_alias}COMPANY_CODE IN <foreach collection="companyCodes" item="companyCodeValue" open="(" close=")" separator=",">#{ companyCodeValue }</foreach>
        </if>
        <if test="userId != null and userId != ''">
            AND ${_alias}USER_ID = #{userId}
        </if>
        <if test="userName != null and userName != ''">
            AND ${_alias}USER_NAME = #{userName}
        </if>
        <if test="userDesc != null and userDesc != ''">
            AND ${_alias}USER_DESC = #{userDesc}
        </if>
        <if test="loginId != null and loginId != ''">
            AND ${_alias}LOGIN_ID = #{loginId}
        </if>
        <if test="userPassword != null and userPassword != ''">
            AND ${_alias}USER_PASSWORD = #{userPassword}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="companyCode != null and companyCode != ''">
            AND ${_alias}COMPANY_CODE = #{companyCode}
        </if>
        <if test="deptCode != null and deptCode != ''">
            AND ${_alias}DEPT_CODE = #{deptCode}
        </if>
        <if test="amDeptDiv != null and amDeptDiv != ''">
            AND ${_alias}AM_DEPT_DIV = #{amDeptDiv}
        </if>
        <if test="amUserDiv != null and amUserDiv != ''">
            AND ${_alias}AM_USER_DIV = #{amUserDiv}
        </if>
        <if test="helpEditYn != null and helpEditYn != ''">
            AND ${_alias}HELP_EDIT_YN = #{helpEditYn}
        </if>
        <if test="loginTime != null and loginTime != ''">
            AND ${_alias}LOGIN_TIME = #{loginTime}
        </if>
        <if test="ipAddr != null and ipAddr != ''">
            AND ${_alias}IP_ADDR = #{ipAddr}
        </if>
        <if test="lockNo != null and lockNo != ''">
            AND ${_alias}LOCK_NO = #{lockNo}
        </if>
        <if test="logoutTime != null and logoutTime != ''">
            AND ${_alias}LOGOUT_TIME = #{logoutTime}
        </if>
        <if test="infoPassword != null and infoPassword != ''">
            AND ${_alias}INFO_PASSWORD = #{infoPassword}
        </if>
        <if test="eisYn != null and eisYn != ''">
            AND ${_alias}EIS_YN = #{eisYn}
        </if>
        <if test="ammasterYn != null and ammasterYn != ''">
            AND ${_alias}AMMASTER_YN = #{ammasterYn}
        </if>
        <if test="hrmasterYn != null and hrmasterYn != ''">
            AND ${_alias}HRMASTER_YN = #{hrmasterYn}
        </if>
        <if test="epmasterYn != null and epmasterYn != ''">
            AND ${_alias}EPMASTER_YN = #{epmasterYn}
        </if>
        <if test="amCompanyCode != null and amCompanyCode != ''">
            AND ${_alias}AM_COMPANY_CODE = #{amCompanyCode}
        </if>
        <if test="hrCompanyCode != null and hrCompanyCode != ''">
            AND ${_alias}HR_COMPANY_CODE = #{hrCompanyCode}
        </if>
        <if test="amDeptCode != null and amDeptCode != ''">
            AND ${_alias}AM_DEPT_CODE = #{amDeptCode}
        </if>
        <if test="hrDeptCode != null and hrDeptCode != ''">
            AND ${_alias}HR_DEPT_CODE = #{hrDeptCode}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}USER_ID AS ${_asPrefix}USER_ID, ${_alias}USER_NAME AS ${_asPrefix}USER_NAME, ${_alias}USER_DESC AS ${_asPrefix}USER_DESC, ${_alias}LOGIN_ID AS ${_asPrefix}LOGIN_ID, ${_alias}USER_PASSWORD AS ${_asPrefix}USER_PASSWORD, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}COMPANY_CODE AS ${_asPrefix}COMPANY_CODE, ${_alias}DEPT_CODE AS ${_asPrefix}DEPT_CODE, ${_alias}AM_DEPT_DIV AS ${_asPrefix}AM_DEPT_DIV, ${_alias}AM_USER_DIV AS ${_asPrefix}AM_USER_DIV, ${_alias}HELP_EDIT_YN AS ${_asPrefix}HELP_EDIT_YN, ${_alias}LOGIN_TIME AS ${_asPrefix}LOGIN_TIME, ${_alias}IP_ADDR AS ${_asPrefix}IP_ADDR, ${_alias}LOCK_NO AS ${_asPrefix}LOCK_NO, ${_alias}LOGOUT_TIME AS ${_asPrefix}LOGOUT_TIME, ${_alias}INFO_PASSWORD AS ${_asPrefix}INFO_PASSWORD, ${_alias}EIS_YN AS ${_asPrefix}EIS_YN, ${_alias}AMMASTER_YN AS ${_asPrefix}AMMASTER_YN, ${_alias}HRMASTER_YN AS ${_asPrefix}HRMASTER_YN, ${_alias}EPMASTER_YN AS ${_asPrefix}EPMASTER_YN, ${_alias}AM_COMPANY_CODE AS ${_asPrefix}AM_COMPANY_CODE, ${_alias}HR_COMPANY_CODE AS ${_asPrefix}HR_COMPANY_CODE, ${_alias}AM_DEPT_CODE AS ${_asPrefix}AM_DEPT_CODE, ${_alias}HR_DEPT_CODE AS ${_asPrefix}HR_DEPT_CODE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}USER_ID, ${_alias}USER_NAME, ${_alias}USER_DESC, ${_alias}LOGIN_ID, ${_alias}USER_PASSWORD, ${_alias}USE_YN, ${_alias}COMPANY_CODE, ${_alias}DEPT_CODE, ${_alias}AM_DEPT_DIV, ${_alias}AM_USER_DIV, ${_alias}HELP_EDIT_YN, ${_alias}LOGIN_TIME, ${_alias}IP_ADDR, ${_alias}LOCK_NO, ${_alias}LOGOUT_TIME, ${_alias}INFO_PASSWORD, ${_alias}EIS_YN, ${_alias}AMMASTER_YN, ${_alias}HRMASTER_YN, ${_alias}EPMASTER_YN, ${_alias}AM_COMPANY_CODE, ${_alias}HR_COMPANY_CODE, ${_alias}AM_DEPT_CODE, ${_alias}HR_DEPT_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}USER_NAME AS ${_asPrefix}USER_NAME, ${_alias}USER_DESC AS ${_asPrefix}USER_DESC, ${_alias}LOGIN_ID AS ${_asPrefix}LOGIN_ID, ${_alias}USER_PASSWORD AS ${_asPrefix}USER_PASSWORD, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}DEPT_CODE AS ${_asPrefix}DEPT_CODE, ${_alias}AM_DEPT_DIV AS ${_asPrefix}AM_DEPT_DIV, ${_alias}AM_USER_DIV AS ${_asPrefix}AM_USER_DIV, ${_alias}HELP_EDIT_YN AS ${_asPrefix}HELP_EDIT_YN, ${_alias}LOGIN_TIME AS ${_asPrefix}LOGIN_TIME, ${_alias}IP_ADDR AS ${_asPrefix}IP_ADDR, ${_alias}LOCK_NO AS ${_asPrefix}LOCK_NO, ${_alias}LOGOUT_TIME AS ${_asPrefix}LOGOUT_TIME, ${_alias}INFO_PASSWORD AS ${_asPrefix}INFO_PASSWORD, ${_alias}EIS_YN AS ${_asPrefix}EIS_YN, ${_alias}AMMASTER_YN AS ${_asPrefix}AMMASTER_YN, ${_alias}HRMASTER_YN AS ${_asPrefix}HRMASTER_YN, ${_alias}EPMASTER_YN AS ${_asPrefix}EPMASTER_YN, ${_alias}AM_COMPANY_CODE AS ${_asPrefix}AM_COMPANY_CODE, ${_alias}HR_COMPANY_CODE AS ${_asPrefix}HR_COMPANY_CODE, ${_alias}AM_DEPT_CODE AS ${_asPrefix}AM_DEPT_CODE, ${_alias}HR_DEPT_CODE AS ${_asPrefix}HR_DEPT_CODE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}USER_NAME, ${_alias}USER_DESC, ${_alias}LOGIN_ID, ${_alias}USER_PASSWORD, ${_alias}USE_YN, ${_alias}DEPT_CODE, ${_alias}AM_DEPT_DIV, ${_alias}AM_USER_DIV, ${_alias}HELP_EDIT_YN, ${_alias}LOGIN_TIME, ${_alias}IP_ADDR, ${_alias}LOCK_NO, ${_alias}LOGOUT_TIME, ${_alias}INFO_PASSWORD, ${_alias}EIS_YN, ${_alias}AMMASTER_YN, ${_alias}HRMASTER_YN, ${_alias}EPMASTER_YN, ${_alias}AM_COMPANY_CODE, ${_alias}HR_COMPANY_CODE, ${_alias}AM_DEPT_CODE, ${_alias}HR_DEPT_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}USER_ID, ${_alias}USER_NAME, ${_alias}USER_DESC, ${_alias}LOGIN_ID, ${_alias}USER_PASSWORD, ${_alias}USE_YN, ${_alias}COMPANY_CODE, ${_alias}DEPT_CODE, ${_alias}AM_DEPT_DIV, ${_alias}AM_USER_DIV, ${_alias}HELP_EDIT_YN, ${_alias}LOGIN_TIME, ${_alias}IP_ADDR, ${_alias}LOCK_NO, ${_alias}LOGOUT_TIME, ${_alias}INFO_PASSWORD, ${_alias}EIS_YN, ${_alias}AMMASTER_YN, ${_alias}HRMASTER_YN, ${_alias}EPMASTER_YN, ${_alias}AM_COMPANY_CODE, ${_alias}HR_COMPANY_CODE, ${_alias}AM_DEPT_CODE, ${_alias}HR_DEPT_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}USER_NAME, ${_alias}USER_DESC, ${_alias}LOGIN_ID, ${_alias}USER_PASSWORD, ${_alias}USE_YN, ${_alias}DEPT_CODE, ${_alias}AM_DEPT_DIV, ${_alias}AM_USER_DIV, ${_alias}HELP_EDIT_YN, ${_alias}LOGIN_TIME, ${_alias}IP_ADDR, ${_alias}LOCK_NO, ${_alias}LOGOUT_TIME, ${_alias}INFO_PASSWORD, ${_alias}EIS_YN, ${_alias}AMMASTER_YN, ${_alias}HRMASTER_YN, ${_alias}EPMASTER_YN, ${_alias}AM_COMPANY_CODE, ${_alias}HR_COMPANY_CODE, ${_alias}AM_DEPT_CODE, ${_alias}HR_DEPT_CODE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetSmAuthUser" parameterType="long" resultMap="simpleSmAuthUserResult_">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_.simpleGetSmAuthUser */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SM_AUTH_USER
        WHERE
        USER_ID = #{userId}
        AND COMPANY_CODE = #{companyCode}
	</select>

    <select id="simpleListSmAuthUserCnt" resultType="int">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_.simpleListSmAuthUserCnt */

        SELECT COUNT(*)
        FROM GTS2016.SM_AUTH_USER
        <include refid="simpleSmAuthUserCondition_" />
    </select>

    <select id="simpleListSmAuthUser" resultMap="simpleSmAuthUserResult_">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_.simpleListSmAuthUser */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SM_AUTH_USER
        <include refid="simpleSmAuthUserCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="userName != null and userName != ''">
            ${_alias}USER_NAME = #{userName},
        </if>
        <if test="userDesc != null and userDesc != ''">
            ${_alias}USER_DESC = #{userDesc},
        </if>
        <if test="loginId != null and loginId != ''">
            ${_alias}LOGIN_ID = #{loginId},
        </if>
        <if test="userPassword != null and userPassword != ''">
            ${_alias}USER_PASSWORD = #{userPassword},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="deptCode != null and deptCode != ''">
            ${_alias}DEPT_CODE = #{deptCode},
        </if>
        <if test="amDeptDiv != null and amDeptDiv != ''">
            ${_alias}AM_DEPT_DIV = #{amDeptDiv},
        </if>
        <if test="amUserDiv != null and amUserDiv != ''">
            ${_alias}AM_USER_DIV = #{amUserDiv},
        </if>
        <if test="helpEditYn != null and helpEditYn != ''">
            ${_alias}HELP_EDIT_YN = #{helpEditYn},
        </if>
        <if test="loginTime != null and loginTime != ''">
            ${_alias}LOGIN_TIME = #{loginTime},
        </if>
        <if test="ipAddr != null and ipAddr != ''">
            ${_alias}IP_ADDR = #{ipAddr},
        </if>
        <if test="lockNo != null and lockNo != ''">
            ${_alias}LOCK_NO = #{lockNo},
        </if>
        <if test="logoutTime != null and logoutTime != ''">
            ${_alias}LOGOUT_TIME = #{logoutTime},
        </if>
        <if test="infoPassword != null and infoPassword != ''">
            ${_alias}INFO_PASSWORD = #{infoPassword},
        </if>
        <if test="eisYn != null and eisYn != ''">
            ${_alias}EIS_YN = #{eisYn},
        </if>
        <if test="ammasterYn != null and ammasterYn != ''">
            ${_alias}AMMASTER_YN = #{ammasterYn},
        </if>
        <if test="hrmasterYn != null and hrmasterYn != ''">
            ${_alias}HRMASTER_YN = #{hrmasterYn},
        </if>
        <if test="epmasterYn != null and epmasterYn != ''">
            ${_alias}EPMASTER_YN = #{epmasterYn},
        </if>
        <if test="amCompanyCode != null and amCompanyCode != ''">
            ${_alias}AM_COMPANY_CODE = #{amCompanyCode},
        </if>
        <if test="hrCompanyCode != null and hrCompanyCode != ''">
            ${_alias}HR_COMPANY_CODE = #{hrCompanyCode},
        </if>
        <if test="amDeptCode != null and amDeptCode != ''">
            ${_alias}AM_DEPT_CODE = #{amDeptCode},
        </if>
        <if test="hrDeptCode != null and hrDeptCode != ''">
            ${_alias}HR_DEPT_CODE = #{hrDeptCode},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateSmAuthUser" parameterType="com.neofect.gts.core.services.sm.domain.SmAuthUser">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_.updateSmAuthUser */

        UPDATE GTS2016.SM_AUTH_USER
        SET
             USER_NAME = #{userName}
            , USER_DESC = #{userDesc}
            , LOGIN_ID = #{loginId}
            , USER_PASSWORD = #{userPassword}
            , USE_YN = #{useYn}
            , DEPT_CODE = #{deptCode}
            , AM_DEPT_DIV = #{amDeptDiv}
            , AM_USER_DIV = #{amUserDiv}
            , HELP_EDIT_YN = #{helpEditYn}
            , LOGIN_TIME = #{loginTime}
            , IP_ADDR = #{ipAddr}
            , LOCK_NO = #{lockNo}
            , LOGOUT_TIME = #{logoutTime}
            , INFO_PASSWORD = #{infoPassword}
            , EIS_YN = #{eisYn}
            , AMMASTER_YN = #{ammasterYn}
            , HRMASTER_YN = #{hrmasterYn}
            , EPMASTER_YN = #{epmasterYn}
            , AM_COMPANY_CODE = #{amCompanyCode}
            , HR_COMPANY_CODE = #{hrCompanyCode}
            , AM_DEPT_CODE = #{amDeptCode}
            , HR_DEPT_CODE = #{hrDeptCode}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            USER_ID = #{userId}
            AND COMPANY_CODE = #{companyCode}
    </update>

    <update id="updateSmAuthUserDynamic" parameterType="com.neofect.gts.core.services.sm.domain.SmAuthUser">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_.updateSmAuthUserDynamic */

        UPDATE GTS2016.SM_AUTH_USER
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            USER_ID = #{userId}
            AND COMPANY_CODE = #{companyCode}
    </update>

    <delete id="deleteSmAuthUser" parameterType="long">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_.deleteSmAuthUser */

        DELETE FROM GTS2016.SM_AUTH_USER
        WHERE
            USER_ID = #{userId}
            AND COMPANY_CODE = #{companyCode}
    </delete>

    <sql id="insert_values_">

        #{userName},
        #{userDesc},
        #{loginId},
        #{userPassword},
        #{useYn},
        #{deptCode},
        #{amDeptDiv},
        #{amUserDiv},
        #{helpEditYn},
        #{loginTime},
        #{ipAddr},
        #{lockNo},
        #{logoutTime},
        #{infoPassword},
        #{eisYn},
        #{ammasterYn},
        #{hrmasterYn},
        #{epmasterYn},
        #{amCompanyCode},
        #{hrCompanyCode},
        #{amDeptCode},
        #{hrDeptCode},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertSmAuthUser">
        /* com.neofect.gts.core.services.sm.repository.SmAuthUserRepository_.insertSmAuthUser */


        INSERT INTO GTS2016.SM_AUTH_USER
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

