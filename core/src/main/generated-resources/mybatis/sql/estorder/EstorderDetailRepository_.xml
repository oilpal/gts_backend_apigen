<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_">

    <resultMap id="simpleEstorderDetailResult_" type="com.neofect.gts.core.services.estorder.domain.EstorderDetail">
        <!-- 견적서/발주서/판매요청/구매요청/대여요청 -->
        <id     property="eslipDiv" column="ESLIP_DIV"/>
        <!-- 전표일자 -->
        <id     property="slipDate" column="SLIP_DATE"/>
        <!-- 지사ID -->
        <id     property="deptId" column="DEPT_ID"/>
        <!-- 전표번호 -->
        <id     property="slipSeq" column="SLIP_SEQ"/>
        <!-- 전표순번 -->
        <id     property="slipItem" column="SLIP_ITEM"/>
        <!-- 품목ID -->
        <result property="productId" column="PRODUCT_ID"/>
        <!-- 수량 -->
        <result property="qty" column="QTY"/>
        <!-- 단가 -->
        <result property="damt" column="DAMT"/>
        <!-- 금액 -->
        <result property="amt" column="AMT"/>
        <!-- 공급가액 -->
        <result property="supplyAmt" column="SUPPLY_AMT"/>
        <!-- 부가세액 -->
        <result property="vatAmt" column="VAT_AMT"/>
        <!-- 비고 -->
        <result property="remark" column="REMARK"/>
        <!-- 박스단위 -->
        <result property="unitDiv" column="UNIT_DIV"/>
        <!-- 박스수 -->
        <result property="unitqty" column="UNITQTY"/>
        <!-- 본인부담금 -->
        <result property="payAmt" column="PAY_AMT"/>
        <!-- 청구금액 -->
        <result property="reqAmt" column="REQ_AMT"/>
        <!-- 보장기관코드 -->
        <result property="managerOfficeDiv" column="MANAGER_OFFICE_DIV"/>
        
        <result property="useDiv" column="USE_DIV"/>
        <!-- 수량_판매용 -->
        <result property="qty1" column="QTY_1"/>
        <!-- 수량_대여용 -->
        <result property="qty2" column="QTY_2"/>
        <!-- 수량_비치용 -->
        <result property="qty3" column="QTY_3"/>
        
        <result property="sSlipDate" column="S_SLIP_DATE"/>
        
        <result property="sDeptId" column="S_DEPT_ID"/>
        
        <result property="sSlipSeq" column="S_SLIP_SEQ"/>
        
        <result property="sSlipItem" column="S_SLIP_ITEM"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleEstorderDetailCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="eslipDivs != null and !eslipDivs.isEmpty()">
            AND ${_alias}ESLIP_DIV IN <foreach collection="eslipDivs" item="eslipDivValue" open="(" close=")" separator=",">#{ eslipDivValue }</foreach>
        </if>
        <if test="slipDates != null and !slipDates.isEmpty()">
            AND ${_alias}SLIP_DATE IN <foreach collection="slipDates" item="slipDateValue" open="(" close=")" separator=",">#{ slipDateValue }</foreach>
        </if>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="slipSeqs != null and !slipSeqs.isEmpty()">
            AND ${_alias}SLIP_SEQ IN <foreach collection="slipSeqs" item="slipSeqValue" open="(" close=")" separator=",">#{ slipSeqValue }</foreach>
        </if>
        <if test="slipItems != null and !slipItems.isEmpty()">
            AND ${_alias}SLIP_ITEM IN <foreach collection="slipItems" item="slipItemValue" open="(" close=")" separator=",">#{ slipItemValue }</foreach>
        </if>
        <if test="eslipDiv != null and eslipDiv != ''">
            AND ${_alias}ESLIP_DIV = #{eslipDiv}
        </if>
        <if test="slipDate != null and slipDate.enabled == true">
            <if test="slipDate.from != null and slipDate.from != ''">
            AND ${_alias}SLIP_DATE >= TO_DATE(#{slipDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="slipDate.to != null and slipDate.to != ''">
            AND ${_alias}SLIP_DATE <![CDATA[ < ]]> TO_DATE(#{slipDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="slipSeq != null">
            AND ${_alias}SLIP_SEQ = #{slipSeq}
        </if>
        <if test="slipItem != null">
            AND ${_alias}SLIP_ITEM = #{slipItem}
        </if>
        <if test="productId != null">
            AND ${_alias}PRODUCT_ID = #{productId}
        </if>
        <if test="qty != null">
            AND ${_alias}QTY = #{qty}
        </if>
        <if test="damt != null">
            AND ${_alias}DAMT = #{damt}
        </if>
        <if test="amt != null">
            AND ${_alias}AMT = #{amt}
        </if>
        <if test="supplyAmt != null">
            AND ${_alias}SUPPLY_AMT = #{supplyAmt}
        </if>
        <if test="vatAmt != null">
            AND ${_alias}VAT_AMT = #{vatAmt}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="unitDiv != null and unitDiv != ''">
            AND ${_alias}UNIT_DIV = #{unitDiv}
        </if>
        <if test="unitqty != null">
            AND ${_alias}UNITQTY = #{unitqty}
        </if>
        <if test="payAmt != null">
            AND ${_alias}PAY_AMT = #{payAmt}
        </if>
        <if test="reqAmt != null">
            AND ${_alias}REQ_AMT = #{reqAmt}
        </if>
        <if test="managerOfficeDiv != null and managerOfficeDiv != ''">
            AND ${_alias}MANAGER_OFFICE_DIV = #{managerOfficeDiv}
        </if>
        <if test="useDiv != null and useDiv != ''">
            AND ${_alias}USE_DIV = #{useDiv}
        </if>
        <if test="qty1 != null">
            AND ${_alias}QTY_1 = #{qty1}
        </if>
        <if test="qty2 != null">
            AND ${_alias}QTY_2 = #{qty2}
        </if>
        <if test="qty3 != null">
            AND ${_alias}QTY_3 = #{qty3}
        </if>
        <if test="sSlipDate != null and sSlipDate.enabled == true">
            <if test="sSlipDate.from != null and sSlipDate.from != ''">
            AND ${_alias}S_SLIP_DATE >= TO_DATE(#{sSlipDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="sSlipDate.to != null and sSlipDate.to != ''">
            AND ${_alias}S_SLIP_DATE <![CDATA[ < ]]> TO_DATE(#{sSlipDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="sDeptId != null and sDeptId != ''">
            AND ${_alias}S_DEPT_ID = #{sDeptId}
        </if>
        <if test="sSlipSeq != null">
            AND ${_alias}S_SLIP_SEQ = #{sSlipSeq}
        </if>
        <if test="sSlipItem != null">
            AND ${_alias}S_SLIP_ITEM = #{sSlipItem}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ESLIP_DIV AS ${_asPrefix}ESLIP_DIV, ${_alias}SLIP_DATE AS ${_asPrefix}SLIP_DATE, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}SLIP_SEQ AS ${_asPrefix}SLIP_SEQ, ${_alias}SLIP_ITEM AS ${_asPrefix}SLIP_ITEM, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}QTY AS ${_asPrefix}QTY, ${_alias}DAMT AS ${_asPrefix}DAMT, ${_alias}AMT AS ${_asPrefix}AMT, ${_alias}SUPPLY_AMT AS ${_asPrefix}SUPPLY_AMT, ${_alias}VAT_AMT AS ${_asPrefix}VAT_AMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}UNIT_DIV AS ${_asPrefix}UNIT_DIV, ${_alias}UNITQTY AS ${_asPrefix}UNITQTY, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}MANAGER_OFFICE_DIV AS ${_asPrefix}MANAGER_OFFICE_DIV, ${_alias}USE_DIV AS ${_asPrefix}USE_DIV, ${_alias}QTY_1 AS ${_asPrefix}QTY_1, ${_alias}QTY_2 AS ${_asPrefix}QTY_2, ${_alias}QTY_3 AS ${_asPrefix}QTY_3, ${_alias}S_SLIP_DATE AS ${_asPrefix}S_SLIP_DATE, ${_alias}S_DEPT_ID AS ${_asPrefix}S_DEPT_ID, ${_alias}S_SLIP_SEQ AS ${_asPrefix}S_SLIP_SEQ, ${_alias}S_SLIP_ITEM AS ${_asPrefix}S_SLIP_ITEM, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}ESLIP_DIV, ${_alias}SLIP_DATE, ${_alias}DEPT_ID, ${_alias}SLIP_SEQ, ${_alias}SLIP_ITEM, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}MANAGER_OFFICE_DIV, ${_alias}USE_DIV, ${_alias}QTY_1, ${_alias}QTY_2, ${_alias}QTY_3, ${_alias}S_SLIP_DATE, ${_alias}S_DEPT_ID, ${_alias}S_SLIP_SEQ, ${_alias}S_SLIP_ITEM, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}QTY AS ${_asPrefix}QTY, ${_alias}DAMT AS ${_asPrefix}DAMT, ${_alias}AMT AS ${_asPrefix}AMT, ${_alias}SUPPLY_AMT AS ${_asPrefix}SUPPLY_AMT, ${_alias}VAT_AMT AS ${_asPrefix}VAT_AMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}UNIT_DIV AS ${_asPrefix}UNIT_DIV, ${_alias}UNITQTY AS ${_asPrefix}UNITQTY, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}MANAGER_OFFICE_DIV AS ${_asPrefix}MANAGER_OFFICE_DIV, ${_alias}USE_DIV AS ${_asPrefix}USE_DIV, ${_alias}QTY_1 AS ${_asPrefix}QTY_1, ${_alias}QTY_2 AS ${_asPrefix}QTY_2, ${_alias}QTY_3 AS ${_asPrefix}QTY_3, ${_alias}S_SLIP_DATE AS ${_asPrefix}S_SLIP_DATE, ${_alias}S_DEPT_ID AS ${_asPrefix}S_DEPT_ID, ${_alias}S_SLIP_SEQ AS ${_asPrefix}S_SLIP_SEQ, ${_alias}S_SLIP_ITEM AS ${_asPrefix}S_SLIP_ITEM, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}MANAGER_OFFICE_DIV, ${_alias}USE_DIV, ${_alias}QTY_1, ${_alias}QTY_2, ${_alias}QTY_3, ${_alias}S_SLIP_DATE, ${_alias}S_DEPT_ID, ${_alias}S_SLIP_SEQ, ${_alias}S_SLIP_ITEM, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}ESLIP_DIV, ${_alias}SLIP_DATE, ${_alias}DEPT_ID, ${_alias}SLIP_SEQ, ${_alias}SLIP_ITEM, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}MANAGER_OFFICE_DIV, ${_alias}USE_DIV, ${_alias}QTY_1, ${_alias}QTY_2, ${_alias}QTY_3, ${_alias}S_SLIP_DATE, ${_alias}S_DEPT_ID, ${_alias}S_SLIP_SEQ, ${_alias}S_SLIP_ITEM, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}MANAGER_OFFICE_DIV, ${_alias}USE_DIV, ${_alias}QTY_1, ${_alias}QTY_2, ${_alias}QTY_3, ${_alias}S_SLIP_DATE, ${_alias}S_DEPT_ID, ${_alias}S_SLIP_SEQ, ${_alias}S_SLIP_ITEM, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetEstorderDetail" parameterType="long" resultMap="simpleEstorderDetailResult_">
        /* com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_.simpleGetEstorderDetail */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.ESTORDER_DETAIL
        WHERE
        ESLIP_DIV = #{eslipDiv}
        AND SLIP_DATE = #{slipDate}
        AND DEPT_ID = #{deptId}
        AND SLIP_SEQ = #{slipSeq}
        AND SLIP_ITEM = #{slipItem}
	</select>

    <select id="simpleListEstorderDetailCnt" resultType="int">
        /* com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_.simpleListEstorderDetailCnt */

        SELECT COUNT(*)
        FROM GTS2016.ESTORDER_DETAIL
        <include refid="simpleEstorderDetailCondition_" />
    </select>

    <select id="simpleListEstorderDetail" resultMap="simpleEstorderDetailResult_">
        /* com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_.simpleListEstorderDetail */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.ESTORDER_DETAIL
        <include refid="simpleEstorderDetailCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="productId != null">
            ${_alias}PRODUCT_ID = #{productId},
        </if>
        <if test="qty != null">
            ${_alias}QTY = #{qty},
        </if>
        <if test="damt != null">
            ${_alias}DAMT = #{damt},
        </if>
        <if test="amt != null">
            ${_alias}AMT = #{amt},
        </if>
        <if test="supplyAmt != null">
            ${_alias}SUPPLY_AMT = #{supplyAmt},
        </if>
        <if test="vatAmt != null">
            ${_alias}VAT_AMT = #{vatAmt},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="unitDiv != null and unitDiv != ''">
            ${_alias}UNIT_DIV = #{unitDiv},
        </if>
        <if test="unitqty != null">
            ${_alias}UNITQTY = #{unitqty},
        </if>
        <if test="payAmt != null">
            ${_alias}PAY_AMT = #{payAmt},
        </if>
        <if test="reqAmt != null">
            ${_alias}REQ_AMT = #{reqAmt},
        </if>
        <if test="managerOfficeDiv != null and managerOfficeDiv != ''">
            ${_alias}MANAGER_OFFICE_DIV = #{managerOfficeDiv},
        </if>
        <if test="useDiv != null and useDiv != ''">
            ${_alias}USE_DIV = #{useDiv},
        </if>
        <if test="qty1 != null">
            ${_alias}QTY_1 = #{qty1},
        </if>
        <if test="qty2 != null">
            ${_alias}QTY_2 = #{qty2},
        </if>
        <if test="qty3 != null">
            ${_alias}QTY_3 = #{qty3},
        </if>
        <if test="sSlipDate != null">
            ${_alias}S_SLIP_DATE = #{sSlipDate},
        </if>
        <if test="sDeptId != null and sDeptId != ''">
            ${_alias}S_DEPT_ID = #{sDeptId},
        </if>
        <if test="sSlipSeq != null">
            ${_alias}S_SLIP_SEQ = #{sSlipSeq},
        </if>
        <if test="sSlipItem != null">
            ${_alias}S_SLIP_ITEM = #{sSlipItem},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateEstorderDetail" parameterType="com.neofect.gts.core.services.estorder.domain.EstorderDetail">
        /* com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_.updateEstorderDetail */

        UPDATE GTS2016.ESTORDER_DETAIL
        SET
             PRODUCT_ID = #{productId}
            , QTY = #{qty}
            , DAMT = #{damt}
            , AMT = #{amt}
            , SUPPLY_AMT = #{supplyAmt}
            , VAT_AMT = #{vatAmt}
            , REMARK = #{remark}
            , UNIT_DIV = #{unitDiv}
            , UNITQTY = #{unitqty}
            , PAY_AMT = #{payAmt}
            , REQ_AMT = #{reqAmt}
            , MANAGER_OFFICE_DIV = #{managerOfficeDiv}
            , USE_DIV = #{useDiv}
            , QTY_1 = #{qty1}
            , QTY_2 = #{qty2}
            , QTY_3 = #{qty3}
            , S_SLIP_DATE = #{sSlipDate}
            , S_DEPT_ID = #{sDeptId}
            , S_SLIP_SEQ = #{sSlipSeq}
            , S_SLIP_ITEM = #{sSlipItem}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            ESLIP_DIV = #{eslipDiv}
            AND SLIP_DATE = #{slipDate}
            AND DEPT_ID = #{deptId}
            AND SLIP_SEQ = #{slipSeq}
            AND SLIP_ITEM = #{slipItem}
    </update>

    <update id="updateEstorderDetailDynamic" parameterType="com.neofect.gts.core.services.estorder.domain.EstorderDetail">
        /* com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_.updateEstorderDetailDynamic */

        UPDATE GTS2016.ESTORDER_DETAIL
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            ESLIP_DIV = #{eslipDiv}
            AND SLIP_DATE = #{slipDate}
            AND DEPT_ID = #{deptId}
            AND SLIP_SEQ = #{slipSeq}
            AND SLIP_ITEM = #{slipItem}
    </update>

    <delete id="deleteEstorderDetail" parameterType="long">
        /* com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_.deleteEstorderDetail */

        DELETE FROM GTS2016.ESTORDER_DETAIL
        WHERE
            ESLIP_DIV = #{eslipDiv}
            AND SLIP_DATE = #{slipDate}
            AND DEPT_ID = #{deptId}
            AND SLIP_SEQ = #{slipSeq}
            AND SLIP_ITEM = #{slipItem}
    </delete>

    <sql id="insert_values_">

        #{productId},
        #{qty},
        #{damt},
        #{amt},
        #{supplyAmt},
        #{vatAmt},
        #{remark},
        #{unitDiv},
        #{unitqty},
        #{payAmt},
        #{reqAmt},
        #{managerOfficeDiv},
        #{useDiv},
        #{qty1},
        #{qty2},
        #{qty3},
        #{sSlipDate},
        #{sDeptId},
        #{sSlipSeq},
        #{sSlipItem},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertEstorderDetail">
        /* com.neofect.gts.core.services.estorder.repository.EstorderDetailRepository_.insertEstorderDetail */


        INSERT INTO GTS2016.ESTORDER_DETAIL
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

