<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.CategoryRepository_">

    <!--region ====================================================================================== reference only -->
    <resultMap id="_metaInfo" type="java.util.Map">
        <!-- Generated Files -->
        <result property="model_" column="com.neofect.gts.core.services.common.domain.Category_"/>
        <result property="repository_" column="com.neofect.gts.core.services.common.repository.CategoryRepository_"/>
        <!-- Extended Files -->
        <result property="model" column="com.neofect.gts.core.services.common.domain.Category"/>
        <result property="repository" column="com.neofect.gts.core.services.common.repository.CategoryRepository"/>
    </resultMap>

    <!--
     ! All Columns
     !  cate_id, cate_namespace, cate_full_path, cate_code, cate_parent_id, cate_parent_code, cate_depth, cate_max_depth, cate_fixed, cate_name, cate_desc, cate_value, cate_ext, cate_sort, cate_deleted, cate_created_by, cate_created_dt, cate_modified_by, cate_modified_dt
    -->

    <!--endregion =================================================================================== reference only -->

    <resultMap id="simpleCategoryResult_" type="com.neofect.gts.core.services.common.domain.Category">
        <!-- 카테고리ID -->
        <id     property="id" column="cate_id"/>
        <!-- 네임스페이스 -->
        <result property="namespace" column="cate_namespace"/>
        <!-- 카테고리전체경로 -->
        <result property="fullPath" column="cate_full_path"/>
        <!-- 카테고리코드 -->
        <result property="code" column="cate_code"/>
        <!-- 상위카테고리 아이디 -->
        <result property="parentId" column="cate_parent_id"/>
        <!-- 상위카테고리 코드 -->
        <result property="parentCode" column="cate_parent_code"/>
        <!-- 현재DEPTH -->
        <result property="depth" column="cate_depth"/>
        <!-- 최대DEPTH -->
        <result property="maxDepth" column="cate_max_depth"/>
        <!-- 삭제불가여부 -->
        <result property="fixed" column="cate_fixed"/>
        <!-- 카테고리명 -->
        <result property="name" column="cate_name"/>
        <!-- 카테고리설명 -->
        <result property="desc" column="cate_desc"/>
        <!-- 카테고리값 -->
        <result property="value" column="cate_value"/>
        <!-- 카테고리확장값-json -->
        <result property="ext" column="cate_ext"/>
        <!-- 정렬순서 -->
        <result property="sort" column="cate_sort"/>
        <!-- 삭제여부 -->
        <result property="deleted" column="cate_deleted"/>
        <!-- 등록자 -->
        <result property="createdBy" column="cate_created_by"/>
        <!-- 등록일시 -->
        <result property="createdDt" column="cate_created_dt"/>
        <!-- 수정자 -->
        <result property="modifiedBy" column="cate_modified_by"/>
        <!-- 수정일시 -->
        <result property="modifiedDt" column="cate_modified_dt"/>
    </resultMap>

    <sql id="simpleCategoryCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}cate_id IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}cate_id = #{id}
        </if>
        <if test="namespace != null and namespace != ''">
            AND ${_alias}cate_namespace = #{namespace}
        </if>
        <if test="fullPath != null and fullPath != ''">
            AND ${_alias}cate_full_path = #{fullPath}
        </if>
        <if test="code != null and code != ''">
            AND ${_alias}cate_code = #{code}
        </if>
        <if test="parentId != null">
            AND ${_alias}cate_parent_id = #{parentId}
        </if>
        <if test="parentCode != null and parentCode != ''">
            AND ${_alias}cate_parent_code = #{parentCode}
        </if>
        <if test="depth != null">
            AND ${_alias}cate_depth = #{depth}
        </if>
        <if test="maxDepth != null">
            AND ${_alias}cate_max_depth = #{maxDepth}
        </if>
        <if test="fixed != null">
            AND ${_alias}cate_fixed = #{fixed}
        </if>
        <if test="name != null and name != ''">
            AND ${_alias}cate_name = #{name}
        </if>
        <if test="desc != null and desc != ''">
            AND ${_alias}cate_desc = #{desc}
        </if>
        <if test="value != null and value != ''">
            AND ${_alias}cate_value = #{value}
        </if>
        <if test="ext != null and ext != ''">
            AND ${_alias}cate_ext = #{ext}
        </if>
        <if test="sort != null">
            AND ${_alias}cate_sort = #{sort}
        </if>
        <if test="deleted != null">
            AND ${_alias}cate_deleted = #{deleted}
        </if>
        <if test="createdBy != null">
            AND ${_alias}cate_created_by = #{createdBy}
        </if>
        <if test="createdDt != null and createdDt.enabled == true">
            <if test="createdDt.from != null and createdDt.from != ''">
            AND ${_alias}cate_created_dt >= STR_TO_DATE(#{createdDt.from}, '%Y.%m.%d')
            </if>
            <if test="createdDt.to != null and createdDt.to != ''">
            AND ${_alias}cate_created_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{createdDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="modifiedBy != null">
            AND ${_alias}cate_modified_by = #{modifiedBy}
        </if>
        <if test="modifiedDt != null and modifiedDt.enabled == true">
            <if test="modifiedDt.from != null and modifiedDt.from != ''">
            AND ${_alias}cate_modified_dt >= STR_TO_DATE(#{modifiedDt.from}, '%Y.%m.%d')
            </if>
            <if test="modifiedDt.to != null and modifiedDt.to != ''">
            AND ${_alias}cate_modified_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{modifiedDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}cate_id AS ${_asPrefix}cate_id, ${_alias}cate_namespace AS ${_asPrefix}cate_namespace, ${_alias}cate_full_path AS ${_asPrefix}cate_full_path, ${_alias}cate_code AS ${_asPrefix}cate_code, ${_alias}cate_parent_id AS ${_asPrefix}cate_parent_id, ${_alias}cate_parent_code AS ${_asPrefix}cate_parent_code, ${_alias}cate_depth AS ${_asPrefix}cate_depth, ${_alias}cate_max_depth AS ${_asPrefix}cate_max_depth, ${_alias}cate_fixed AS ${_asPrefix}cate_fixed, ${_alias}cate_name AS ${_asPrefix}cate_name, ${_alias}cate_desc AS ${_asPrefix}cate_desc, ${_alias}cate_value AS ${_asPrefix}cate_value, ${_alias}cate_ext AS ${_asPrefix}cate_ext, ${_alias}cate_sort AS ${_asPrefix}cate_sort, ${_alias}cate_deleted AS ${_asPrefix}cate_deleted, ${_alias}cate_created_by AS ${_asPrefix}cate_created_by, ${_alias}cate_created_dt AS ${_asPrefix}cate_created_dt, ${_alias}cate_modified_by AS ${_asPrefix}cate_modified_by, ${_alias}cate_modified_dt AS ${_asPrefix}cate_modified_dt        </when>
        <otherwise>
            ${_alias}cate_id, ${_alias}cate_namespace, ${_alias}cate_full_path, ${_alias}cate_code, ${_alias}cate_parent_id, ${_alias}cate_parent_code, ${_alias}cate_depth, ${_alias}cate_max_depth, ${_alias}cate_fixed, ${_alias}cate_name, ${_alias}cate_desc, ${_alias}cate_value, ${_alias}cate_ext, ${_alias}cate_sort, ${_alias}cate_deleted, ${_alias}cate_created_by, ${_alias}cate_created_dt, ${_alias}cate_modified_by, ${_alias}cate_modified_dt        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}cate_namespace AS ${_asPrefix}cate_namespace, ${_alias}cate_full_path AS ${_asPrefix}cate_full_path, ${_alias}cate_code AS ${_asPrefix}cate_code, ${_alias}cate_parent_id AS ${_asPrefix}cate_parent_id, ${_alias}cate_parent_code AS ${_asPrefix}cate_parent_code, ${_alias}cate_depth AS ${_asPrefix}cate_depth, ${_alias}cate_max_depth AS ${_asPrefix}cate_max_depth, ${_alias}cate_fixed AS ${_asPrefix}cate_fixed, ${_alias}cate_name AS ${_asPrefix}cate_name, ${_alias}cate_desc AS ${_asPrefix}cate_desc, ${_alias}cate_value AS ${_asPrefix}cate_value, ${_alias}cate_ext AS ${_asPrefix}cate_ext, ${_alias}cate_sort AS ${_asPrefix}cate_sort, ${_alias}cate_deleted AS ${_asPrefix}cate_deleted, ${_alias}cate_created_by AS ${_asPrefix}cate_created_by, ${_alias}cate_created_dt AS ${_asPrefix}cate_created_dt, ${_alias}cate_modified_by AS ${_asPrefix}cate_modified_by, ${_alias}cate_modified_dt AS ${_asPrefix}cate_modified_dt        </when>
        <otherwise>
            ${_alias}cate_namespace, ${_alias}cate_full_path, ${_alias}cate_code, ${_alias}cate_parent_id, ${_alias}cate_parent_code, ${_alias}cate_depth, ${_alias}cate_max_depth, ${_alias}cate_fixed, ${_alias}cate_name, ${_alias}cate_desc, ${_alias}cate_value, ${_alias}cate_ext, ${_alias}cate_sort, ${_alias}cate_deleted, ${_alias}cate_created_by, ${_alias}cate_created_dt, ${_alias}cate_modified_by, ${_alias}cate_modified_dt        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}cate_id, ${_alias}cate_namespace, ${_alias}cate_full_path, ${_alias}cate_code, ${_alias}cate_parent_id, ${_alias}cate_parent_code, ${_alias}cate_depth, ${_alias}cate_max_depth, ${_alias}cate_fixed, ${_alias}cate_name, ${_alias}cate_desc, ${_alias}cate_value, ${_alias}cate_ext, ${_alias}cate_sort, ${_alias}cate_deleted, ${_alias}cate_created_by, ${_alias}cate_created_dt, ${_alias}cate_modified_by, ${_alias}cate_modified_dt    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}cate_namespace, ${_alias}cate_full_path, ${_alias}cate_code, ${_alias}cate_parent_id, ${_alias}cate_parent_code, ${_alias}cate_depth, ${_alias}cate_max_depth, ${_alias}cate_fixed, ${_alias}cate_name, ${_alias}cate_desc, ${_alias}cate_value, ${_alias}cate_ext, ${_alias}cate_sort, ${_alias}cate_deleted, ${_alias}cate_created_by, ${_alias}cate_created_dt, ${_alias}cate_modified_by, ${_alias}cate_modified_dt    </sql>

    <select id="simpleGetCategory" parameterType="long" resultMap="simpleCategoryResult_">
        /* CategoryRepository_.simpleGetCategory */

        SELECT
            <include refid="columns_" />
        FROM
            nv_category
        WHERE
        cate_id = #{id}
	</select>

    <select id="simpleListCategoryCnt" resultType="int">
        /* CategoryRepository_.simpleListCategoryCnt */

        SELECT COUNT(*)
        FROM nv_category
        <include refid="simpleCategoryCondition_" />
    </select>

    <select id="simpleListCategory" resultMap="simpleCategoryResult_">
        /* CategoryRepository_.simpleListCategory */
        SELECT
            <include refid="columns_" />
        FROM nv_category
        <include refid="simpleCategoryCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="namespace != null and namespace != ''">
            ${_alias}cate_namespace = #{namespace},
        </if>
        <if test="fullPath != null and fullPath != ''">
            ${_alias}cate_full_path = #{fullPath},
        </if>
        <if test="code != null and code != ''">
            ${_alias}cate_code = #{code},
        </if>
        <if test="parentId != null">
            ${_alias}cate_parent_id = #{parentId},
        </if>
        <if test="parentCode != null and parentCode != ''">
            ${_alias}cate_parent_code = #{parentCode},
        </if>
        <if test="depth != null">
            ${_alias}cate_depth = #{depth},
        </if>
        <if test="maxDepth != null">
            ${_alias}cate_max_depth = #{maxDepth},
        </if>
        <if test="fixed != null">
            ${_alias}cate_fixed = #{fixed},
        </if>
        <if test="name != null and name != ''">
            ${_alias}cate_name = #{name},
        </if>
        <if test="desc != null and desc != ''">
            ${_alias}cate_desc = #{desc},
        </if>
        <if test="value != null and value != ''">
            ${_alias}cate_value = #{value},
        </if>
        <if test="ext != null and ext != ''">
            ${_alias}cate_ext = #{ext},
        </if>
        <if test="sort != null">
            ${_alias}cate_sort = #{sort},
        </if>
        <if test="deleted != null">
            ${_alias}cate_deleted = #{deleted},
        </if>
        <if test="modifiedBy != null">
            ${_alias}cate_modified_by = #{modifiedBy},
        </if>
        <if test="modifiedDt != null">
            ${_alias}cate_modified_dt = #{modifiedDt},
        </if>
    </sql>

    <update id="updateCategory" parameterType="com.neofect.gts.core.services.common.domain.Category">
        /* com.unvus.iflex.core.services.common.repository.CategoryRepository_.updateCategory */

        UPDATE nv_category
        SET
             cate_namespace = #{namespace}
            , cate_full_path = #{fullPath}
            , cate_code = #{code}
            , cate_parent_id = #{parentId}
            , cate_parent_code = #{parentCode}
            , cate_depth = #{depth}
            , cate_max_depth = #{maxDepth}
            , cate_fixed = #{fixed}
            , cate_name = #{name}
            , cate_desc = #{desc}
            , cate_value = #{value}
            , cate_ext = #{ext}
            , cate_sort = #{sort}
            , cate_deleted = #{deleted}
            , cate_modified_by = #{modifiedBy}
            , cate_modified_dt = #{modifiedDt}
        WHERE
            cate_id = #{id}
    </update>

    <update id="updateCategoryDynamic" parameterType="com.neofect.gts.core.services.common.domain.Category">
        /* CategoryRepository_.updateCategoryDynamic */

        UPDATE nv_category
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            cate_id = #{id}
    </update>

    <delete id="deleteCategory" parameterType="long">
        /* com.unvus.iflex.core.services.common.repository.CategoryRepository_.deleteCategory */

        DELETE FROM nv_category
        WHERE
            cate_id = #{id}
    </delete>

    <sql id="insert_values_">

        #{namespace},
        #{fullPath},
        #{code},
        #{parentId},
        #{parentCode},
        #{depth},
        #{maxDepth},
        #{fixed},
        #{name},
        #{desc},
        #{value},
        #{ext},
        #{sort},
        #{deleted},
        #{createdBy},
        #{createdDt},
        #{modifiedBy},
        #{modifiedDt}
    </sql>

    <insert id="insertCategory">
        /* CategoryRepository_.insertCategory */


        INSERT INTO nv_category
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

