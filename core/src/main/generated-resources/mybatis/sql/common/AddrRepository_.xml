<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.AddrRepository_">

    <!--region ====================================================================================== reference only -->
    <resultMap id="_metaInfo" type="java.util.Map">
        <!-- Generated Files -->
        <result property="model_" column="com.neofect.gts.core.services.common.domain.Addr_"/>
        <result property="repository_" column="com.neofect.gts.core.services.common.repository.AddrRepository_"/>
        <!-- Extended Files -->
        <result property="model" column="com.neofect.gts.core.services.common.domain.Addr"/>
        <result property="repository" column="com.neofect.gts.core.services.common.repository.AddrRepository"/>
    </resultMap>

    <!--
     ! All Columns
     !  addr_id, addr_ref_target, addr_ref_target_key, addr_ref_target_type, addr_alias_name, addr_sido_code, addr_gugun_code, addr_lgl_code, addr_sido, addr_gugun, addr_dong, addr_road_zip, addr_road_address, addr_ltno_zip, addr_ltno_address, addr_address_detail, addr_point, addr_sort
    -->

    <!--endregion =================================================================================== reference only -->

    <resultMap id="simpleAddrResult_" type="com.neofect.gts.core.services.common.domain.Addr">
        <!-- 아이디 -->
        <id     property="id" column="addr_id"/>
        <!-- 참조대상 -->
        <result property="refTarget" column="addr_ref_target"/>
        <!-- 참조키 -->
        <result property="refTargetKey" column="addr_ref_target_key"/>
        <!-- 참조타입 -->
        <result property="refTargetType" column="addr_ref_target_type"/>
        <!-- 주소별칭 -->
        <result property="aliasName" column="addr_alias_name"/>
        <!-- 시도코드 -->
        <result property="sidoCode" column="addr_sido_code"/>
        <!-- 구군코드 -->
        <result property="gugunCode" column="addr_gugun_code"/>
        <!-- 법정동코드 -->
        <result property="lglCode" column="addr_lgl_code"/>
        <!-- 시도 -->
        <result property="sido" column="addr_sido"/>
        <!-- 구군 -->
        <result property="gugun" column="addr_gugun"/>
        <!-- 읍면동 -->
        <result property="dong" column="addr_dong"/>
        <!-- 도로명 주소-우편번호 -->
        <result property="roadZip" column="addr_road_zip"/>
        <!-- 도로명 주소-주소고정 -->
        <result property="roadAddress" column="addr_road_address"/>
        <!-- 지번 주소-우편번호 -->
        <result property="ltnoZip" column="addr_ltno_zip"/>
        <!-- 지번 주소-주소고정 -->
        <result property="ltnoAddress" column="addr_ltno_address"/>
        <!-- 주소상세 -->
        <result property="addressDetail" column="addr_address_detail"/>
        <!-- GIS 좌표 -->
        <result property="point" column="addr_point"/>
        <!-- 정렬순서 -->
        <result property="sort" column="addr_sort"/>
    </resultMap>

    <sql id="simpleAddrCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}addr_id IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}addr_id = #{id}
        </if>
        <if test="refTarget != null and refTarget != ''">
            AND ${_alias}addr_ref_target = #{refTarget}
        </if>
        <if test="refTargetKey != null">
            AND ${_alias}addr_ref_target_key = #{refTargetKey}
        </if>
        <if test="refTargetType != null and refTargetType != ''">
            AND ${_alias}addr_ref_target_type = #{refTargetType}
        </if>
        <if test="aliasName != null and aliasName != ''">
            AND ${_alias}addr_alias_name = #{aliasName}
        </if>
        <if test="sidoCode != null and sidoCode != ''">
            AND ${_alias}addr_sido_code = #{sidoCode}
        </if>
        <if test="gugunCode != null and gugunCode != ''">
            AND ${_alias}addr_gugun_code = #{gugunCode}
        </if>
        <if test="lglCode != null and lglCode != ''">
            AND ${_alias}addr_lgl_code = #{lglCode}
        </if>
        <if test="sido != null and sido != ''">
            AND ${_alias}addr_sido = #{sido}
        </if>
        <if test="gugun != null and gugun != ''">
            AND ${_alias}addr_gugun = #{gugun}
        </if>
        <if test="dong != null and dong != ''">
            AND ${_alias}addr_dong = #{dong}
        </if>
        <if test="roadZip != null and roadZip != ''">
            AND ${_alias}addr_road_zip = #{roadZip}
        </if>
        <if test="roadAddress != null and roadAddress != ''">
            AND ${_alias}addr_road_address = #{roadAddress}
        </if>
        <if test="ltnoZip != null and ltnoZip != ''">
            AND ${_alias}addr_ltno_zip = #{ltnoZip}
        </if>
        <if test="ltnoAddress != null and ltnoAddress != ''">
            AND ${_alias}addr_ltno_address = #{ltnoAddress}
        </if>
        <if test="addressDetail != null and addressDetail != ''">
            AND ${_alias}addr_address_detail = #{addressDetail}
        </if>
        <if test="point != null">
            AND ${_alias}addr_point = #{point}
        </if>
        <if test="sort != null">
            AND ${_alias}addr_sort = #{sort}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}addr_id AS ${_asPrefix}addr_id, ${_alias}addr_ref_target AS ${_asPrefix}addr_ref_target, ${_alias}addr_ref_target_key AS ${_asPrefix}addr_ref_target_key, ${_alias}addr_ref_target_type AS ${_asPrefix}addr_ref_target_type, ${_alias}addr_alias_name AS ${_asPrefix}addr_alias_name, ${_alias}addr_sido_code AS ${_asPrefix}addr_sido_code, ${_alias}addr_gugun_code AS ${_asPrefix}addr_gugun_code, ${_alias}addr_lgl_code AS ${_asPrefix}addr_lgl_code, ${_alias}addr_sido AS ${_asPrefix}addr_sido, ${_alias}addr_gugun AS ${_asPrefix}addr_gugun, ${_alias}addr_dong AS ${_asPrefix}addr_dong, ${_alias}addr_road_zip AS ${_asPrefix}addr_road_zip, ${_alias}addr_road_address AS ${_asPrefix}addr_road_address, ${_alias}addr_ltno_zip AS ${_asPrefix}addr_ltno_zip, ${_alias}addr_ltno_address AS ${_asPrefix}addr_ltno_address, ${_alias}addr_address_detail AS ${_asPrefix}addr_address_detail, ${_alias}addr_point AS ${_asPrefix}addr_point, ${_alias}addr_sort AS ${_asPrefix}addr_sort        </when>
        <otherwise>
            ${_alias}addr_id, ${_alias}addr_ref_target, ${_alias}addr_ref_target_key, ${_alias}addr_ref_target_type, ${_alias}addr_alias_name, ${_alias}addr_sido_code, ${_alias}addr_gugun_code, ${_alias}addr_lgl_code, ${_alias}addr_sido, ${_alias}addr_gugun, ${_alias}addr_dong, ${_alias}addr_road_zip, ${_alias}addr_road_address, ${_alias}addr_ltno_zip, ${_alias}addr_ltno_address, ${_alias}addr_address_detail, ${_alias}addr_point, ${_alias}addr_sort        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}addr_ref_target AS ${_asPrefix}addr_ref_target, ${_alias}addr_ref_target_key AS ${_asPrefix}addr_ref_target_key, ${_alias}addr_ref_target_type AS ${_asPrefix}addr_ref_target_type, ${_alias}addr_alias_name AS ${_asPrefix}addr_alias_name, ${_alias}addr_sido_code AS ${_asPrefix}addr_sido_code, ${_alias}addr_gugun_code AS ${_asPrefix}addr_gugun_code, ${_alias}addr_lgl_code AS ${_asPrefix}addr_lgl_code, ${_alias}addr_sido AS ${_asPrefix}addr_sido, ${_alias}addr_gugun AS ${_asPrefix}addr_gugun, ${_alias}addr_dong AS ${_asPrefix}addr_dong, ${_alias}addr_road_zip AS ${_asPrefix}addr_road_zip, ${_alias}addr_road_address AS ${_asPrefix}addr_road_address, ${_alias}addr_ltno_zip AS ${_asPrefix}addr_ltno_zip, ${_alias}addr_ltno_address AS ${_asPrefix}addr_ltno_address, ${_alias}addr_address_detail AS ${_asPrefix}addr_address_detail, ${_alias}addr_point AS ${_asPrefix}addr_point, ${_alias}addr_sort AS ${_asPrefix}addr_sort        </when>
        <otherwise>
            ${_alias}addr_ref_target, ${_alias}addr_ref_target_key, ${_alias}addr_ref_target_type, ${_alias}addr_alias_name, ${_alias}addr_sido_code, ${_alias}addr_gugun_code, ${_alias}addr_lgl_code, ${_alias}addr_sido, ${_alias}addr_gugun, ${_alias}addr_dong, ${_alias}addr_road_zip, ${_alias}addr_road_address, ${_alias}addr_ltno_zip, ${_alias}addr_ltno_address, ${_alias}addr_address_detail, ${_alias}addr_point, ${_alias}addr_sort        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}addr_id, ${_alias}addr_ref_target, ${_alias}addr_ref_target_key, ${_alias}addr_ref_target_type, ${_alias}addr_alias_name, ${_alias}addr_sido_code, ${_alias}addr_gugun_code, ${_alias}addr_lgl_code, ${_alias}addr_sido, ${_alias}addr_gugun, ${_alias}addr_dong, ${_alias}addr_road_zip, ${_alias}addr_road_address, ${_alias}addr_ltno_zip, ${_alias}addr_ltno_address, ${_alias}addr_address_detail, ${_alias}addr_point, ${_alias}addr_sort    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}addr_ref_target, ${_alias}addr_ref_target_key, ${_alias}addr_ref_target_type, ${_alias}addr_alias_name, ${_alias}addr_sido_code, ${_alias}addr_gugun_code, ${_alias}addr_lgl_code, ${_alias}addr_sido, ${_alias}addr_gugun, ${_alias}addr_dong, ${_alias}addr_road_zip, ${_alias}addr_road_address, ${_alias}addr_ltno_zip, ${_alias}addr_ltno_address, ${_alias}addr_address_detail, ${_alias}addr_point, ${_alias}addr_sort    </sql>

    <select id="simpleGetAddr" parameterType="long" resultMap="simpleAddrResult_">
        /* AddrRepository_.simpleGetAddr */

        SELECT
            <include refid="columns_" />
        FROM
            nv_addr
        WHERE
        addr_id = #{id}
	</select>

    <select id="simpleListAddrCnt" resultType="int">
        /* AddrRepository_.simpleListAddrCnt */

        SELECT COUNT(*)
        FROM nv_addr
        <include refid="simpleAddrCondition_" />
    </select>

    <select id="simpleListAddr" resultMap="simpleAddrResult_">
        /* AddrRepository_.simpleListAddr */
        SELECT
            <include refid="columns_" />
        FROM nv_addr
        <include refid="simpleAddrCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="refTarget != null and refTarget != ''">
            ${_alias}addr_ref_target = #{refTarget},
        </if>
        <if test="refTargetKey != null">
            ${_alias}addr_ref_target_key = #{refTargetKey},
        </if>
        <if test="refTargetType != null and refTargetType != ''">
            ${_alias}addr_ref_target_type = #{refTargetType},
        </if>
        <if test="aliasName != null and aliasName != ''">
            ${_alias}addr_alias_name = #{aliasName},
        </if>
        <if test="sidoCode != null and sidoCode != ''">
            ${_alias}addr_sido_code = #{sidoCode},
        </if>
        <if test="gugunCode != null and gugunCode != ''">
            ${_alias}addr_gugun_code = #{gugunCode},
        </if>
        <if test="lglCode != null and lglCode != ''">
            ${_alias}addr_lgl_code = #{lglCode},
        </if>
        <if test="sido != null and sido != ''">
            ${_alias}addr_sido = #{sido},
        </if>
        <if test="gugun != null and gugun != ''">
            ${_alias}addr_gugun = #{gugun},
        </if>
        <if test="dong != null and dong != ''">
            ${_alias}addr_dong = #{dong},
        </if>
        <if test="roadZip != null and roadZip != ''">
            ${_alias}addr_road_zip = #{roadZip},
        </if>
        <if test="roadAddress != null and roadAddress != ''">
            ${_alias}addr_road_address = #{roadAddress},
        </if>
        <if test="ltnoZip != null and ltnoZip != ''">
            ${_alias}addr_ltno_zip = #{ltnoZip},
        </if>
        <if test="ltnoAddress != null and ltnoAddress != ''">
            ${_alias}addr_ltno_address = #{ltnoAddress},
        </if>
        <if test="addressDetail != null and addressDetail != ''">
            ${_alias}addr_address_detail = #{addressDetail},
        </if>
        <if test="point != null">
            ${_alias}addr_point = #{point},
        </if>
        <if test="sort != null">
            ${_alias}addr_sort = #{sort},
        </if>
    </sql>

    <update id="updateAddr" parameterType="com.neofect.gts.core.services.common.domain.Addr">
        /* com.unvus.iflex.core.services.common.repository.AddrRepository_.updateAddr */

        UPDATE nv_addr
        SET
             addr_ref_target = #{refTarget}
            , addr_ref_target_key = #{refTargetKey}
            , addr_ref_target_type = #{refTargetType}
            , addr_alias_name = #{aliasName}
            , addr_sido_code = #{sidoCode}
            , addr_gugun_code = #{gugunCode}
            , addr_lgl_code = #{lglCode}
            , addr_sido = #{sido}
            , addr_gugun = #{gugun}
            , addr_dong = #{dong}
            , addr_road_zip = #{roadZip}
            , addr_road_address = #{roadAddress}
            , addr_ltno_zip = #{ltnoZip}
            , addr_ltno_address = #{ltnoAddress}
            , addr_address_detail = #{addressDetail}
            , addr_point = #{point}
            , addr_sort = #{sort}
        WHERE
            addr_id = #{id}
    </update>

    <update id="updateAddrDynamic" parameterType="com.neofect.gts.core.services.common.domain.Addr">
        /* AddrRepository_.updateAddrDynamic */

        UPDATE nv_addr
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            addr_id = #{id}
    </update>

    <delete id="deleteAddr" parameterType="long">
        /* com.unvus.iflex.core.services.common.repository.AddrRepository_.deleteAddr */

        DELETE FROM nv_addr
        WHERE
            addr_id = #{id}
    </delete>

    <sql id="insert_values_">

        #{refTarget},
        #{refTargetKey},
        #{refTargetType},
        #{aliasName},
        #{sidoCode},
        #{gugunCode},
        #{lglCode},
        #{sido},
        #{gugun},
        #{dong},
        #{roadZip},
        #{roadAddress},
        #{ltnoZip},
        #{ltnoAddress},
        #{addressDetail},
        #{point},
        #{sort}
    </sql>

    <insert id="insertAddr">
        /* AddrRepository_.insertAddr */


        INSERT INTO nv_addr
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

