<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_">

    <resultMap id="simpleCodeDepositnoResult_" type="com.neofect.gts.core.services.common.domain.CodeDepositno">
        <!-- 지사ID -->
        <id     property="deptId" column="DEPT_ID"/>
        <!-- 계좌번호 -->
        <id     property="depositno" column="DEPOSITNO"/>
        <!-- 계좌구분코드 -->
        <result property="depositDiv" column="DEPOSIT_DIV"/>
        <!-- 은행코드 -->
        <result property="bankDiv" column="BANK_DIV"/>
        <!-- 지점명 -->
        <result property="branchName" column="BRANCH_NAME"/>
        <!-- 최초잔액 -->
        <result property="firstRamt" column="FIRST_RAMT"/>
        <!-- 현재잔액 -->
        <result property="nowRamt" column="NOW_RAMT"/>
        <!-- 카드수수료율 -->
        <result property="cardChargerate" column="CARD_CHARGERATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleCodeDepositnoCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="depositnos != null and !depositnos.isEmpty()">
            AND ${_alias}DEPOSITNO IN <foreach collection="depositnos" item="depositnoValue" open="(" close=")" separator=",">#{ depositnoValue }</foreach>
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="depositno != null and depositno != ''">
            AND ${_alias}DEPOSITNO = #{depositno}
        </if>
        <if test="depositDiv != null and depositDiv != ''">
            AND ${_alias}DEPOSIT_DIV = #{depositDiv}
        </if>
        <if test="bankDiv != null and bankDiv != ''">
            AND ${_alias}BANK_DIV = #{bankDiv}
        </if>
        <if test="branchName != null and branchName != ''">
            AND ${_alias}BRANCH_NAME = #{branchName}
        </if>
        <if test="firstRamt != null">
            AND ${_alias}FIRST_RAMT = #{firstRamt}
        </if>
        <if test="nowRamt != null">
            AND ${_alias}NOW_RAMT = #{nowRamt}
        </if>
        <if test="cardChargerate != null">
            AND ${_alias}CARD_CHARGERATE = #{cardChargerate}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}DEPOSITNO AS ${_asPrefix}DEPOSITNO, ${_alias}DEPOSIT_DIV AS ${_asPrefix}DEPOSIT_DIV, ${_alias}BANK_DIV AS ${_asPrefix}BANK_DIV, ${_alias}BRANCH_NAME AS ${_asPrefix}BRANCH_NAME, ${_alias}FIRST_RAMT AS ${_asPrefix}FIRST_RAMT, ${_alias}NOW_RAMT AS ${_asPrefix}NOW_RAMT, ${_alias}CARD_CHARGERATE AS ${_asPrefix}CARD_CHARGERATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}DEPT_ID, ${_alias}DEPOSITNO, ${_alias}DEPOSIT_DIV, ${_alias}BANK_DIV, ${_alias}BRANCH_NAME, ${_alias}FIRST_RAMT, ${_alias}NOW_RAMT, ${_alias}CARD_CHARGERATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}DEPOSIT_DIV AS ${_asPrefix}DEPOSIT_DIV, ${_alias}BANK_DIV AS ${_asPrefix}BANK_DIV, ${_alias}BRANCH_NAME AS ${_asPrefix}BRANCH_NAME, ${_alias}FIRST_RAMT AS ${_asPrefix}FIRST_RAMT, ${_alias}NOW_RAMT AS ${_asPrefix}NOW_RAMT, ${_alias}CARD_CHARGERATE AS ${_asPrefix}CARD_CHARGERATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}DEPOSIT_DIV, ${_alias}BANK_DIV, ${_alias}BRANCH_NAME, ${_alias}FIRST_RAMT, ${_alias}NOW_RAMT, ${_alias}CARD_CHARGERATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}DEPT_ID, ${_alias}DEPOSITNO, ${_alias}DEPOSIT_DIV, ${_alias}BANK_DIV, ${_alias}BRANCH_NAME, ${_alias}FIRST_RAMT, ${_alias}NOW_RAMT, ${_alias}CARD_CHARGERATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}DEPOSIT_DIV, ${_alias}BANK_DIV, ${_alias}BRANCH_NAME, ${_alias}FIRST_RAMT, ${_alias}NOW_RAMT, ${_alias}CARD_CHARGERATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetCodeDepositno" parameterType="long" resultMap="simpleCodeDepositnoResult_">
        /* com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_.simpleGetCodeDepositno */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.CODE_DEPOSITNO
        WHERE
        DEPT_ID = #{deptId}
        AND DEPOSITNO = #{depositno}
	</select>

    <select id="simpleListCodeDepositnoCnt" resultType="int">
        /* com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_.simpleListCodeDepositnoCnt */

        SELECT COUNT(*)
        FROM GTS2016.CODE_DEPOSITNO
        <include refid="simpleCodeDepositnoCondition_" />
    </select>

    <select id="simpleListCodeDepositno" resultMap="simpleCodeDepositnoResult_">
        /* com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_.simpleListCodeDepositno */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.CODE_DEPOSITNO
        <include refid="simpleCodeDepositnoCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="depositDiv != null and depositDiv != ''">
            ${_alias}DEPOSIT_DIV = #{depositDiv},
        </if>
        <if test="bankDiv != null and bankDiv != ''">
            ${_alias}BANK_DIV = #{bankDiv},
        </if>
        <if test="branchName != null and branchName != ''">
            ${_alias}BRANCH_NAME = #{branchName},
        </if>
        <if test="firstRamt != null">
            ${_alias}FIRST_RAMT = #{firstRamt},
        </if>
        <if test="nowRamt != null">
            ${_alias}NOW_RAMT = #{nowRamt},
        </if>
        <if test="cardChargerate != null">
            ${_alias}CARD_CHARGERATE = #{cardChargerate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateCodeDepositno" parameterType="com.neofect.gts.core.services.common.domain.CodeDepositno">
        /* com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_.updateCodeDepositno */

        UPDATE GTS2016.CODE_DEPOSITNO
        SET
             DEPOSIT_DIV = #{depositDiv}
            , BANK_DIV = #{bankDiv}
            , BRANCH_NAME = #{branchName}
            , FIRST_RAMT = #{firstRamt}
            , NOW_RAMT = #{nowRamt}
            , CARD_CHARGERATE = #{cardChargerate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            DEPT_ID = #{deptId}
            AND DEPOSITNO = #{depositno}
    </update>

    <update id="updateCodeDepositnoDynamic" parameterType="com.neofect.gts.core.services.common.domain.CodeDepositno">
        /* com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_.updateCodeDepositnoDynamic */

        UPDATE GTS2016.CODE_DEPOSITNO
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            DEPT_ID = #{deptId}
            AND DEPOSITNO = #{depositno}
    </update>

    <delete id="deleteCodeDepositno" parameterType="long">
        /* com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_.deleteCodeDepositno */

        DELETE FROM GTS2016.CODE_DEPOSITNO
        WHERE
            DEPT_ID = #{deptId}
            AND DEPOSITNO = #{depositno}
    </delete>

    <sql id="insert_values_">

        #{depositDiv},
        #{bankDiv},
        #{branchName},
        #{firstRamt},
        #{nowRamt},
        #{cardChargerate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertCodeDepositno">
        /* com.neofect.gts.core.services.common.repository.CodeDepositnoRepository_.insertCodeDepositno */


        INSERT INTO GTS2016.CODE_DEPOSITNO
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

