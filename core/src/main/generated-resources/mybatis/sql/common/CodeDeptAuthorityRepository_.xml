<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_">

    <resultMap id="simpleCodeDeptAuthorityResult_" type="com.neofect.gts.core.services.common.domain.CodeDeptAuthority">
        <!-- 사번 -->
        <id     property="memberId" column="MEMBER_ID"/>
        <!-- 지사ID -->
        <id     property="deptId" column="DEPT_ID"/>
        <!-- 출력순번 -->
        <result property="printSeq" column="PRINT_SEQ"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleCodeDeptAuthorityCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="memberIds != null and !memberIds.isEmpty()">
            AND ${_alias}MEMBER_ID IN <foreach collection="memberIds" item="memberIdValue" open="(" close=")" separator=",">#{ memberIdValue }</foreach>
        </if>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="memberId != null and memberId != ''">
            AND ${_alias}MEMBER_ID = #{memberId}
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="printSeq != null">
            AND ${_alias}PRINT_SEQ = #{printSeq}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}PRINT_SEQ AS ${_asPrefix}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}MEMBER_ID, ${_alias}DEPT_ID, ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}PRINT_SEQ AS ${_asPrefix}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}MEMBER_ID, ${_alias}DEPT_ID, ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetCodeDeptAuthority" parameterType="long" resultMap="simpleCodeDeptAuthorityResult_">
        /* com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_.simpleGetCodeDeptAuthority */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.CODE_DEPT_AUTHORITY
        WHERE
        MEMBER_ID = #{memberId}
        AND DEPT_ID = #{deptId}
	</select>

    <select id="simpleListCodeDeptAuthorityCnt" resultType="int">
        /* com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_.simpleListCodeDeptAuthorityCnt */

        SELECT COUNT(*)
        FROM GTS2016.CODE_DEPT_AUTHORITY
        <include refid="simpleCodeDeptAuthorityCondition_" />
    </select>

    <select id="simpleListCodeDeptAuthority" resultMap="simpleCodeDeptAuthorityResult_">
        /* com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_.simpleListCodeDeptAuthority */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.CODE_DEPT_AUTHORITY
        <include refid="simpleCodeDeptAuthorityCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="printSeq != null">
            ${_alias}PRINT_SEQ = #{printSeq},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateCodeDeptAuthority" parameterType="com.neofect.gts.core.services.common.domain.CodeDeptAuthority">
        /* com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_.updateCodeDeptAuthority */

        UPDATE GTS2016.CODE_DEPT_AUTHORITY
        SET
             PRINT_SEQ = #{printSeq}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            MEMBER_ID = #{memberId}
            AND DEPT_ID = #{deptId}
    </update>

    <update id="updateCodeDeptAuthorityDynamic" parameterType="com.neofect.gts.core.services.common.domain.CodeDeptAuthority">
        /* com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_.updateCodeDeptAuthorityDynamic */

        UPDATE GTS2016.CODE_DEPT_AUTHORITY
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            MEMBER_ID = #{memberId}
            AND DEPT_ID = #{deptId}
    </update>

    <delete id="deleteCodeDeptAuthority" parameterType="long">
        /* com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_.deleteCodeDeptAuthority */

        DELETE FROM GTS2016.CODE_DEPT_AUTHORITY
        WHERE
            MEMBER_ID = #{memberId}
            AND DEPT_ID = #{deptId}
    </delete>

    <sql id="insert_values_">

        #{printSeq},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertCodeDeptAuthority">
        /* com.neofect.gts.core.services.common.repository.CodeDeptAuthorityRepository_.insertCodeDeptAuthority */


        INSERT INTO GTS2016.CODE_DEPT_AUTHORITY
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

