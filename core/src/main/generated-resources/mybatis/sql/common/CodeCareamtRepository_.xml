<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.CodeCareamtRepository_">

    <resultMap id="simpleCodeCareamtResult_" type="com.neofect.gts.core.services.common.domain.CodeCareamt">
        <!-- 요양시설구분 -->
        <id     property="carefacilityDiv" column="CAREFACILITY_DIV"/>
        <!-- 고객등급 -->
        <id     property="custLevelDiv" column="CUST_LEVEL_DIV"/>
        
        <id     property="applyDate" column="APPLY_DATE"/>
        <!-- 월한도액 -->
        <result property="limitAmt" column="LIMIT_AMT"/>
        <!-- 일반부담금 -->
        <result property="gPayamt" column="G_PAYAMT"/>
        <!-- 비고 -->
        <result property="remark" column="REMARK"/>
        <!-- 의료급여자부담금(7.5%) -->
        <result property="mPayamt" column="M_PAYAMT"/>
        <!-- 사용여부 -->
        <result property="useYn" column="USE_YN"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 의료급여(6%) -->
        <result property="lPayamt" column="L_PAYAMT"/>
        <!-- 의료급여(9%) -->
        <result property="nPayamt" column="N_PAYAMT"/>
    </resultMap>

    <sql id="simpleCodeCareamtCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="carefacilityDivs != null and !carefacilityDivs.isEmpty()">
            AND ${_alias}CAREFACILITY_DIV IN <foreach collection="carefacilityDivs" item="carefacilityDivValue" open="(" close=")" separator=",">#{ carefacilityDivValue }</foreach>
        </if>
        <if test="custLevelDivs != null and !custLevelDivs.isEmpty()">
            AND ${_alias}CUST_LEVEL_DIV IN <foreach collection="custLevelDivs" item="custLevelDivValue" open="(" close=")" separator=",">#{ custLevelDivValue }</foreach>
        </if>
        <if test="applyDates != null and !applyDates.isEmpty()">
            AND ${_alias}APPLY_DATE IN <foreach collection="applyDates" item="applyDateValue" open="(" close=")" separator=",">#{ applyDateValue }</foreach>
        </if>
        <if test="carefacilityDiv != null and carefacilityDiv != ''">
            AND ${_alias}CAREFACILITY_DIV = #{carefacilityDiv}
        </if>
        <if test="custLevelDiv != null and custLevelDiv != ''">
            AND ${_alias}CUST_LEVEL_DIV = #{custLevelDiv}
        </if>
        <if test="applyDate != null and applyDate.enabled == true">
            <if test="applyDate.from != null and applyDate.from != ''">
            AND ${_alias}APPLY_DATE >= TO_DATE(#{applyDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="applyDate.to != null and applyDate.to != ''">
            AND ${_alias}APPLY_DATE <![CDATA[ < ]]> TO_DATE(#{applyDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="limitAmt != null">
            AND ${_alias}LIMIT_AMT = #{limitAmt}
        </if>
        <if test="gPayamt != null">
            AND ${_alias}G_PAYAMT = #{gPayamt}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="mPayamt != null">
            AND ${_alias}M_PAYAMT = #{mPayamt}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="lPayamt != null">
            AND ${_alias}L_PAYAMT = #{lPayamt}
        </if>
        <if test="nPayamt != null">
            AND ${_alias}N_PAYAMT = #{nPayamt}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CAREFACILITY_DIV AS ${_asPrefix}CAREFACILITY_DIV, ${_alias}CUST_LEVEL_DIV AS ${_asPrefix}CUST_LEVEL_DIV, ${_alias}APPLY_DATE AS ${_asPrefix}APPLY_DATE, ${_alias}LIMIT_AMT AS ${_asPrefix}LIMIT_AMT, ${_alias}G_PAYAMT AS ${_asPrefix}G_PAYAMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}M_PAYAMT AS ${_asPrefix}M_PAYAMT, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}L_PAYAMT AS ${_asPrefix}L_PAYAMT, ${_alias}N_PAYAMT AS ${_asPrefix}N_PAYAMT        </when>
        <otherwise>
            ${_alias}CAREFACILITY_DIV, ${_alias}CUST_LEVEL_DIV, ${_alias}APPLY_DATE, ${_alias}LIMIT_AMT, ${_alias}G_PAYAMT, ${_alias}REMARK, ${_alias}M_PAYAMT, ${_alias}USE_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}L_PAYAMT, ${_alias}N_PAYAMT        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}LIMIT_AMT AS ${_asPrefix}LIMIT_AMT, ${_alias}G_PAYAMT AS ${_asPrefix}G_PAYAMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}M_PAYAMT AS ${_asPrefix}M_PAYAMT, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}L_PAYAMT AS ${_asPrefix}L_PAYAMT, ${_alias}N_PAYAMT AS ${_asPrefix}N_PAYAMT        </when>
        <otherwise>
            ${_alias}LIMIT_AMT, ${_alias}G_PAYAMT, ${_alias}REMARK, ${_alias}M_PAYAMT, ${_alias}USE_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}L_PAYAMT, ${_alias}N_PAYAMT        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}CAREFACILITY_DIV, ${_alias}CUST_LEVEL_DIV, ${_alias}APPLY_DATE, ${_alias}LIMIT_AMT, ${_alias}G_PAYAMT, ${_alias}REMARK, ${_alias}M_PAYAMT, ${_alias}USE_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}L_PAYAMT, ${_alias}N_PAYAMT    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}LIMIT_AMT, ${_alias}G_PAYAMT, ${_alias}REMARK, ${_alias}M_PAYAMT, ${_alias}USE_YN, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}L_PAYAMT, ${_alias}N_PAYAMT    </sql>

    <select id="simpleGetCodeCareamt" parameterType="long" resultMap="simpleCodeCareamtResult_">
        /* com.neofect.gts.core.services.common.repository.CodeCareamtRepository_.simpleGetCodeCareamt */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.CODE_CAREAMT
        WHERE
        CAREFACILITY_DIV = #{carefacilityDiv}
        AND CUST_LEVEL_DIV = #{custLevelDiv}
        AND APPLY_DATE = #{applyDate}
	</select>

    <select id="simpleListCodeCareamtCnt" resultType="int">
        /* com.neofect.gts.core.services.common.repository.CodeCareamtRepository_.simpleListCodeCareamtCnt */

        SELECT COUNT(*)
        FROM GTS2016.CODE_CAREAMT
        <include refid="simpleCodeCareamtCondition_" />
    </select>

    <select id="simpleListCodeCareamt" resultMap="simpleCodeCareamtResult_">
        /* com.neofect.gts.core.services.common.repository.CodeCareamtRepository_.simpleListCodeCareamt */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.CODE_CAREAMT
        <include refid="simpleCodeCareamtCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="limitAmt != null">
            ${_alias}LIMIT_AMT = #{limitAmt},
        </if>
        <if test="gPayamt != null">
            ${_alias}G_PAYAMT = #{gPayamt},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="mPayamt != null">
            ${_alias}M_PAYAMT = #{mPayamt},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="lPayamt != null">
            ${_alias}L_PAYAMT = #{lPayamt},
        </if>
        <if test="nPayamt != null">
            ${_alias}N_PAYAMT = #{nPayamt},
        </if>
    </sql>

    <update id="updateCodeCareamt" parameterType="com.neofect.gts.core.services.common.domain.CodeCareamt">
        /* com.neofect.gts.core.services.common.repository.CodeCareamtRepository_.updateCodeCareamt */

        UPDATE GTS2016.CODE_CAREAMT
        SET
             LIMIT_AMT = #{limitAmt}
            , G_PAYAMT = #{gPayamt}
            , REMARK = #{remark}
            , M_PAYAMT = #{mPayamt}
            , USE_YN = #{useYn}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , L_PAYAMT = #{lPayamt}
            , N_PAYAMT = #{nPayamt}
        WHERE
            CAREFACILITY_DIV = #{carefacilityDiv}
            AND CUST_LEVEL_DIV = #{custLevelDiv}
            AND APPLY_DATE = #{applyDate}
    </update>

    <update id="updateCodeCareamtDynamic" parameterType="com.neofect.gts.core.services.common.domain.CodeCareamt">
        /* com.neofect.gts.core.services.common.repository.CodeCareamtRepository_.updateCodeCareamtDynamic */

        UPDATE GTS2016.CODE_CAREAMT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            CAREFACILITY_DIV = #{carefacilityDiv}
            AND CUST_LEVEL_DIV = #{custLevelDiv}
            AND APPLY_DATE = #{applyDate}
    </update>

    <delete id="deleteCodeCareamt" parameterType="long">
        /* com.neofect.gts.core.services.common.repository.CodeCareamtRepository_.deleteCodeCareamt */

        DELETE FROM GTS2016.CODE_CAREAMT
        WHERE
            CAREFACILITY_DIV = #{carefacilityDiv}
            AND CUST_LEVEL_DIV = #{custLevelDiv}
            AND APPLY_DATE = #{applyDate}
    </delete>

    <sql id="insert_values_">

        #{limitAmt},
        #{gPayamt},
        #{remark},
        #{mPayamt},
        #{useYn},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{lPayamt},
        #{nPayamt}
    </sql>

    <insert id="insertCodeCareamt">
        /* com.neofect.gts.core.services.common.repository.CodeCareamtRepository_.insertCodeCareamt */


        INSERT INTO GTS2016.CODE_CAREAMT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

