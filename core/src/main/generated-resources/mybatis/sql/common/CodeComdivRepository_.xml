<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.CodeComdivRepository_">

    <resultMap id="simpleCodeComdivResult_" type="com.neofect.gts.core.services.common.domain.CodeComdiv">
        <!-- 분류코드 -->
        <id     property="comsecCode" column="COMSEC_CODE"/>
        <!-- 구분코드 -->
        <id     property="comdivCode" column="COMDIV_CODE"/>
        <!-- 입력시사용여부 -->
        <result property="inputYn" column="INPUT_YN"/>
        <!-- 구분명칭 -->
        <result property="comdivName" column="COMDIV_NAME"/>
        <!-- 대중소구분 -->
        <result property="lmsTag" column="LMS_TAG"/>
        <!-- 구분종류1 -->
        <result property="kind1" column="KIND1"/>
        <!-- 구분내용1 -->
        <result property="name1" column="NAME1"/>
        <!-- 구분종류2 -->
        <result property="kind2" column="KIND2"/>
        <!-- 구분내용2 -->
        <result property="name2" column="NAME2"/>
        <!-- 적용시작일 -->
        <result property="startDate" column="START_DATE"/>
        <!-- 적용종료일 -->
        <result property="endDate" column="END_DATE"/>
        <!-- 사용 Y -->
        <result property="useYn" column="USE_YN"/>
        <!-- 출력순번 -->
        <result property="printSeq" column="PRINT_SEQ"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 비고 -->
        <result property="remark" column="REMARK"/>
    </resultMap>

    <sql id="simpleCodeComdivCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="comsecCodes != null and !comsecCodes.isEmpty()">
            AND ${_alias}COMSEC_CODE IN <foreach collection="comsecCodes" item="comsecCodeValue" open="(" close=")" separator=",">#{ comsecCodeValue }</foreach>
        </if>
        <if test="comdivCodes != null and !comdivCodes.isEmpty()">
            AND ${_alias}COMDIV_CODE IN <foreach collection="comdivCodes" item="comdivCodeValue" open="(" close=")" separator=",">#{ comdivCodeValue }</foreach>
        </if>
        <if test="comsecCode != null and comsecCode != ''">
            AND ${_alias}COMSEC_CODE = #{comsecCode}
        </if>
        <if test="comdivCode != null and comdivCode != ''">
            AND ${_alias}COMDIV_CODE = #{comdivCode}
        </if>
        <if test="inputYn != null and inputYn != ''">
            AND ${_alias}INPUT_YN = #{inputYn}
        </if>
        <if test="comdivName != null and comdivName != ''">
            AND ${_alias}COMDIV_NAME = #{comdivName}
        </if>
        <if test="lmsTag != null and lmsTag != ''">
            AND ${_alias}LMS_TAG = #{lmsTag}
        </if>
        <if test="kind1 != null and kind1 != ''">
            AND ${_alias}KIND1 = #{kind1}
        </if>
        <if test="name1 != null and name1 != ''">
            AND ${_alias}NAME1 = #{name1}
        </if>
        <if test="kind2 != null and kind2 != ''">
            AND ${_alias}KIND2 = #{kind2}
        </if>
        <if test="name2 != null and name2 != ''">
            AND ${_alias}NAME2 = #{name2}
        </if>
        <if test="startDate != null and startDate.enabled == true">
            <if test="startDate.from != null and startDate.from != ''">
            AND ${_alias}START_DATE >= TO_DATE(#{startDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="startDate.to != null and startDate.to != ''">
            AND ${_alias}START_DATE <![CDATA[ < ]]> TO_DATE(#{startDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="endDate != null and endDate.enabled == true">
            <if test="endDate.from != null and endDate.from != ''">
            AND ${_alias}END_DATE >= TO_DATE(#{endDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="endDate.to != null and endDate.to != ''">
            AND ${_alias}END_DATE <![CDATA[ < ]]> TO_DATE(#{endDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="printSeq != null">
            AND ${_alias}PRINT_SEQ = #{printSeq}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}COMSEC_CODE AS ${_asPrefix}COMSEC_CODE, ${_alias}COMDIV_CODE AS ${_asPrefix}COMDIV_CODE, ${_alias}INPUT_YN AS ${_asPrefix}INPUT_YN, ${_alias}COMDIV_NAME AS ${_asPrefix}COMDIV_NAME, ${_alias}LMS_TAG AS ${_asPrefix}LMS_TAG, ${_alias}KIND1 AS ${_asPrefix}KIND1, ${_alias}NAME1 AS ${_asPrefix}NAME1, ${_alias}KIND2 AS ${_asPrefix}KIND2, ${_alias}NAME2 AS ${_asPrefix}NAME2, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}PRINT_SEQ AS ${_asPrefix}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}REMARK AS ${_asPrefix}REMARK        </when>
        <otherwise>
            ${_alias}COMSEC_CODE, ${_alias}COMDIV_CODE, ${_alias}INPUT_YN, ${_alias}COMDIV_NAME, ${_alias}LMS_TAG, ${_alias}KIND1, ${_alias}NAME1, ${_alias}KIND2, ${_alias}NAME2, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}REMARK        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}INPUT_YN AS ${_asPrefix}INPUT_YN, ${_alias}COMDIV_NAME AS ${_asPrefix}COMDIV_NAME, ${_alias}LMS_TAG AS ${_asPrefix}LMS_TAG, ${_alias}KIND1 AS ${_asPrefix}KIND1, ${_alias}NAME1 AS ${_asPrefix}NAME1, ${_alias}KIND2 AS ${_asPrefix}KIND2, ${_alias}NAME2 AS ${_asPrefix}NAME2, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}PRINT_SEQ AS ${_asPrefix}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}REMARK AS ${_asPrefix}REMARK        </when>
        <otherwise>
            ${_alias}INPUT_YN, ${_alias}COMDIV_NAME, ${_alias}LMS_TAG, ${_alias}KIND1, ${_alias}NAME1, ${_alias}KIND2, ${_alias}NAME2, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}REMARK        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}COMSEC_CODE, ${_alias}COMDIV_CODE, ${_alias}INPUT_YN, ${_alias}COMDIV_NAME, ${_alias}LMS_TAG, ${_alias}KIND1, ${_alias}NAME1, ${_alias}KIND2, ${_alias}NAME2, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}REMARK    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}INPUT_YN, ${_alias}COMDIV_NAME, ${_alias}LMS_TAG, ${_alias}KIND1, ${_alias}NAME1, ${_alias}KIND2, ${_alias}NAME2, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}PRINT_SEQ, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}REMARK    </sql>

    <select id="simpleGetCodeComdiv" parameterType="long" resultMap="simpleCodeComdivResult_">
        /* com.neofect.gts.core.services.common.repository.CodeComdivRepository_.simpleGetCodeComdiv */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.CODE_COMDIV
        WHERE
        COMSEC_CODE = #{comsecCode}
        AND COMDIV_CODE = #{comdivCode}
	</select>

    <select id="simpleListCodeComdivCnt" resultType="int">
        /* com.neofect.gts.core.services.common.repository.CodeComdivRepository_.simpleListCodeComdivCnt */

        SELECT COUNT(*)
        FROM GTS2016.CODE_COMDIV
        <include refid="simpleCodeComdivCondition_" />
    </select>

    <select id="simpleListCodeComdiv" resultMap="simpleCodeComdivResult_">
        /* com.neofect.gts.core.services.common.repository.CodeComdivRepository_.simpleListCodeComdiv */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.CODE_COMDIV
        <include refid="simpleCodeComdivCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="inputYn != null and inputYn != ''">
            ${_alias}INPUT_YN = #{inputYn},
        </if>
        <if test="comdivName != null and comdivName != ''">
            ${_alias}COMDIV_NAME = #{comdivName},
        </if>
        <if test="lmsTag != null and lmsTag != ''">
            ${_alias}LMS_TAG = #{lmsTag},
        </if>
        <if test="kind1 != null and kind1 != ''">
            ${_alias}KIND1 = #{kind1},
        </if>
        <if test="name1 != null and name1 != ''">
            ${_alias}NAME1 = #{name1},
        </if>
        <if test="kind2 != null and kind2 != ''">
            ${_alias}KIND2 = #{kind2},
        </if>
        <if test="name2 != null and name2 != ''">
            ${_alias}NAME2 = #{name2},
        </if>
        <if test="startDate != null">
            ${_alias}START_DATE = #{startDate},
        </if>
        <if test="endDate != null">
            ${_alias}END_DATE = #{endDate},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="printSeq != null">
            ${_alias}PRINT_SEQ = #{printSeq},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
    </sql>

    <update id="updateCodeComdiv" parameterType="com.neofect.gts.core.services.common.domain.CodeComdiv">
        /* com.neofect.gts.core.services.common.repository.CodeComdivRepository_.updateCodeComdiv */

        UPDATE GTS2016.CODE_COMDIV
        SET
             INPUT_YN = #{inputYn}
            , COMDIV_NAME = #{comdivName}
            , LMS_TAG = #{lmsTag}
            , KIND1 = #{kind1}
            , NAME1 = #{name1}
            , KIND2 = #{kind2}
            , NAME2 = #{name2}
            , START_DATE = #{startDate}
            , END_DATE = #{endDate}
            , USE_YN = #{useYn}
            , PRINT_SEQ = #{printSeq}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , REMARK = #{remark}
        WHERE
            COMSEC_CODE = #{comsecCode}
            AND COMDIV_CODE = #{comdivCode}
    </update>

    <update id="updateCodeComdivDynamic" parameterType="com.neofect.gts.core.services.common.domain.CodeComdiv">
        /* com.neofect.gts.core.services.common.repository.CodeComdivRepository_.updateCodeComdivDynamic */

        UPDATE GTS2016.CODE_COMDIV
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            COMSEC_CODE = #{comsecCode}
            AND COMDIV_CODE = #{comdivCode}
    </update>

    <delete id="deleteCodeComdiv" parameterType="long">
        /* com.neofect.gts.core.services.common.repository.CodeComdivRepository_.deleteCodeComdiv */

        DELETE FROM GTS2016.CODE_COMDIV
        WHERE
            COMSEC_CODE = #{comsecCode}
            AND COMDIV_CODE = #{comdivCode}
    </delete>

    <sql id="insert_values_">

        #{inputYn},
        #{comdivName},
        #{lmsTag},
        #{kind1},
        #{name1},
        #{kind2},
        #{name2},
        #{startDate},
        #{endDate},
        #{useYn},
        #{printSeq},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{remark}
    </sql>

    <insert id="insertCodeComdiv">
        /* com.neofect.gts.core.services.common.repository.CodeComdivRepository_.insertCodeComdiv */


        INSERT INTO GTS2016.CODE_COMDIV
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

