<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.CodeProductRepository_">

    <resultMap id="simpleCodeProductResult_" type="com.neofect.gts.core.services.common.domain.CodeProduct">
        <!-- 품목ID -->
        <id     property="id" column="PRODUCT_ID"/>
        <!-- O : 공단품목정의품목,    E:그외품목(임의등록) -->
        <result property="prooffiDiv" column="PROOFFI_DIV"/>
        <!-- S서비스  P 물품 R 대여 -->
        <result property="psepDiv" column="PSEP_DIV"/>
        <!-- 1목용리프트 ~ 14 휴대용배면기 -->
        <result property="productDiv" column="PRODUCT_DIV"/>
        <!-- 품목코드 -->
        <result property="productCode" column="PRODUCT_CODE"/>
        <!-- 품목명 -->
        <result property="productName" column="PRODUCT_NAME"/>
        <!-- 모델명 -->
        <result property="modelName" column="MODEL_NAME"/>
        <!-- 제조사 -->
        <result property="maker" column="MAKER"/>
        <!-- 구매단가 -->
        <result property="inputAmt" column="INPUT_AMT"/>
        <!-- 구매부가세 -->
        <result property="inputVat" column="INPUT_VAT"/>
        <!-- 판매단가 -->
        <result property="saleAmt" column="SALE_AMT"/>
        <!-- 판매부가세 -->
        <result property="saleVat" column="SALE_VAT"/>
        <!-- 지사판매단가 -->
        <result property="deptSaleAmt" column="DEPT_SALE_AMT"/>
        <!-- 지사판매부가세 -->
        <result property="deptSaleVat" column="DEPT_SALE_VAT"/>
        <!-- 대여금액 -->
        <result property="rentAmt" column="RENT_AMT"/>
        <!-- 대여부가세 -->
        <result property="rentVat" column="RENT_VAT"/>
        <!-- 지사대여금액 -->
        <result property="deptRentamt" column="DEPT_RENTAMT"/>
        <!-- 지사대여부가세 -->
        <result property="deptRentvat" column="DEPT_RENTVAT"/>
        <!-- 소개수수료율 -->
        <result property="introRate" column="INTRO_RATE"/>
        <!-- 박스단위 -->
        <result property="unitDiv" column="UNIT_DIV"/>
        <!-- 박스수량 -->
        <result property="unitqty" column="UNITQTY"/>
        <!-- 박스판매금액 -->
        <result property="boxsaleAmt" column="BOXSALE_AMT"/>
        <!-- 박스판매부가세 -->
        <result property="boxsaleVat" column="BOXSALE_VAT"/>
        <!-- 지사박스판매단가 -->
        <result property="boxsaleDeptamt" column="BOXSALE_DEPTAMT"/>
        <!-- 지사박스판매부가세 -->
        <result property="boxsaleDeptvat" column="BOXSALE_DEPTVAT"/>
        <!-- 최초재고수량 -->
        <result property="firstRqty" column="FIRST_RQTY"/>
        <!-- 현재고수량 -->
        <result property="nowRqty" column="NOW_RQTY"/>
        <!-- 적정재고수량 -->
        <result property="warrantRqty" column="WARRANT_RQTY"/>
        <!-- 품목정보1 -->
        <result property="pinfo1" column="PINFO1"/>
        <!-- 품목정보2 -->
        <result property="pinfo2" column="PINFO2"/>
        <!-- 품목정보3 -->
        <result property="pinfo3" column="PINFO3"/>
        <!-- 상품이미지1 -->
        <result property="pimg1" column="PIMG1"/>
        <!-- 상품이미지2 -->
        <result property="pimg2" column="PIMG2"/>
        <!-- 상품이미지3 -->
        <result property="pimg3" column="PIMG3"/>
        <!-- 적용시작일 -->
        <result property="startDate" column="START_DATE"/>
        <!-- 적용종료일 -->
        <result property="endDate" column="END_DATE"/>
        <!-- 폐기여부  Y사용  N폐기 -->
        <result property="useYn" column="USE_YN"/>
        <!-- 등록일 -->
        <result property="regDate" column="REG_DATE"/>
        <!-- 고객ID -->
        <result property="custId" column="CUST_ID"/>
        <!-- 지사ID -->
        <result property="deptId" column="DEPT_ID"/>
        <!-- 거래처임대료지급기준 -->
        <result property="leasepayDiv" column="LEASEPAY_DIV"/>
        <!-- 임대지사ID -->
        <result property="rentDeptId" column="RENT_DEPT_ID"/>
        <!-- 정렬 순서 -->
        <result property="sortOrder" column="SORT_ORDER"/>
        <!-- 판매 대여 구분 -->
        <result property="useType" column="USE_TYPE"/>
        <!-- 내구연한 여부 -->
        <result property="useyearYn" column="USEYEAR_YN"/>
        <!-- 시리얼넘버(대여) -->
        <result property="serialno" column="SERIALNO"/>
        <!-- 제품 상태 -->
        <result property="prodState" column="PROD_STATE"/>
        <!-- 품목 차수 -->
        <result property="productSeq" column="PRODUCT_SEQ"/>
        <!-- 내구연한 -->
        <result property="useyear" column="USEYEAR"/>
        <!-- 부가세 구분(과세/면세) -->
        <result property="vatType" column="VAT_TYPE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 품목분류 -->
        <result property="productGbn" column="PRODUCT_GBN"/>
        <!-- 소유지사ID(대여) -->
        <result property="deptIdReal" column="DEPT_ID_REAL"/>
        <!-- 소독일자 -->
        <result property="sodokDate" column="SODOK_DATE"/>
        <!-- 소독업체 -->
        <result property="sodokCustId" column="SODOK_CUST_ID"/>
        <!-- 소독인증 -->
        <result property="sodokId" column="SODOK_ID"/>
        <!-- 소독방법 -->
        <result property="sodokKind" column="SODOK_KIND"/>
        
        <result property="serviceMin" column="SERVICE_MIN"/>
        
        <result property="roundYn" column="ROUND_YN"/>
        
        <result property="custLevelDiv" column="CUST_LEVEL_DIV"/>
        
        <result property="familyYn" column="FAMILY_YN"/>
    </resultMap>

    <sql id="simpleCodeProductCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}PRODUCT_ID IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}PRODUCT_ID = #{id}
        </if>
        <if test="prooffiDiv != null and prooffiDiv != ''">
            AND ${_alias}PROOFFI_DIV = #{prooffiDiv}
        </if>
        <if test="psepDiv != null and psepDiv != ''">
            AND ${_alias}PSEP_DIV = #{psepDiv}
        </if>
        <if test="productDiv != null and productDiv != ''">
            AND ${_alias}PRODUCT_DIV = #{productDiv}
        </if>
        <if test="productCode != null and productCode != ''">
            AND ${_alias}PRODUCT_CODE = #{productCode}
        </if>
        <if test="productName != null and productName != ''">
            AND ${_alias}PRODUCT_NAME = #{productName}
        </if>
        <if test="modelName != null and modelName != ''">
            AND ${_alias}MODEL_NAME = #{modelName}
        </if>
        <if test="maker != null and maker != ''">
            AND ${_alias}MAKER = #{maker}
        </if>
        <if test="inputAmt != null">
            AND ${_alias}INPUT_AMT = #{inputAmt}
        </if>
        <if test="inputVat != null">
            AND ${_alias}INPUT_VAT = #{inputVat}
        </if>
        <if test="saleAmt != null">
            AND ${_alias}SALE_AMT = #{saleAmt}
        </if>
        <if test="saleVat != null">
            AND ${_alias}SALE_VAT = #{saleVat}
        </if>
        <if test="deptSaleAmt != null">
            AND ${_alias}DEPT_SALE_AMT = #{deptSaleAmt}
        </if>
        <if test="deptSaleVat != null">
            AND ${_alias}DEPT_SALE_VAT = #{deptSaleVat}
        </if>
        <if test="rentAmt != null">
            AND ${_alias}RENT_AMT = #{rentAmt}
        </if>
        <if test="rentVat != null">
            AND ${_alias}RENT_VAT = #{rentVat}
        </if>
        <if test="deptRentamt != null">
            AND ${_alias}DEPT_RENTAMT = #{deptRentamt}
        </if>
        <if test="deptRentvat != null">
            AND ${_alias}DEPT_RENTVAT = #{deptRentvat}
        </if>
        <if test="introRate != null">
            AND ${_alias}INTRO_RATE = #{introRate}
        </if>
        <if test="unitDiv != null and unitDiv != ''">
            AND ${_alias}UNIT_DIV = #{unitDiv}
        </if>
        <if test="unitqty != null">
            AND ${_alias}UNITQTY = #{unitqty}
        </if>
        <if test="boxsaleAmt != null">
            AND ${_alias}BOXSALE_AMT = #{boxsaleAmt}
        </if>
        <if test="boxsaleVat != null">
            AND ${_alias}BOXSALE_VAT = #{boxsaleVat}
        </if>
        <if test="boxsaleDeptamt != null">
            AND ${_alias}BOXSALE_DEPTAMT = #{boxsaleDeptamt}
        </if>
        <if test="boxsaleDeptvat != null">
            AND ${_alias}BOXSALE_DEPTVAT = #{boxsaleDeptvat}
        </if>
        <if test="firstRqty != null">
            AND ${_alias}FIRST_RQTY = #{firstRqty}
        </if>
        <if test="nowRqty != null">
            AND ${_alias}NOW_RQTY = #{nowRqty}
        </if>
        <if test="warrantRqty != null">
            AND ${_alias}WARRANT_RQTY = #{warrantRqty}
        </if>
        <if test="pinfo1 != null and pinfo1 != ''">
            AND ${_alias}PINFO1 = #{pinfo1}
        </if>
        <if test="pinfo2 != null and pinfo2 != ''">
            AND ${_alias}PINFO2 = #{pinfo2}
        </if>
        <if test="pinfo3 != null and pinfo3 != ''">
            AND ${_alias}PINFO3 = #{pinfo3}
        </if>
        <if test="pimg1 != null and pimg1 != ''">
            AND ${_alias}PIMG1 = #{pimg1}
        </if>
        <if test="pimg2 != null and pimg2 != ''">
            AND ${_alias}PIMG2 = #{pimg2}
        </if>
        <if test="pimg3 != null and pimg3 != ''">
            AND ${_alias}PIMG3 = #{pimg3}
        </if>
        <if test="startDate != null and startDate.enabled == true">
            <if test="startDate.from != null and startDate.from != ''">
            AND ${_alias}START_DATE >= TO_DATE(#{startDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="startDate.to != null and startDate.to != ''">
            AND ${_alias}START_DATE <![CDATA[ < ]]> TO_DATE(#{startDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="endDate != null and endDate.enabled == true">
            <if test="endDate.from != null and endDate.from != ''">
            AND ${_alias}END_DATE >= TO_DATE(#{endDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="endDate.to != null and endDate.to != ''">
            AND ${_alias}END_DATE <![CDATA[ < ]]> TO_DATE(#{endDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="regDate != null and regDate.enabled == true">
            <if test="regDate.from != null and regDate.from != ''">
            AND ${_alias}REG_DATE >= TO_DATE(#{regDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="regDate.to != null and regDate.to != ''">
            AND ${_alias}REG_DATE <![CDATA[ < ]]> TO_DATE(#{regDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="leasepayDiv != null and leasepayDiv != ''">
            AND ${_alias}LEASEPAY_DIV = #{leasepayDiv}
        </if>
        <if test="rentDeptId != null and rentDeptId != ''">
            AND ${_alias}RENT_DEPT_ID = #{rentDeptId}
        </if>
        <if test="sortOrder != null">
            AND ${_alias}SORT_ORDER = #{sortOrder}
        </if>
        <if test="useType != null and useType != ''">
            AND ${_alias}USE_TYPE = #{useType}
        </if>
        <if test="useyearYn != null and useyearYn != ''">
            AND ${_alias}USEYEAR_YN = #{useyearYn}
        </if>
        <if test="serialno != null and serialno != ''">
            AND ${_alias}SERIALNO = #{serialno}
        </if>
        <if test="prodState != null and prodState != ''">
            AND ${_alias}PROD_STATE = #{prodState}
        </if>
        <if test="productSeq != null">
            AND ${_alias}PRODUCT_SEQ = #{productSeq}
        </if>
        <if test="useyear != null and useyear != ''">
            AND ${_alias}USEYEAR = #{useyear}
        </if>
        <if test="vatType != null and vatType != ''">
            AND ${_alias}VAT_TYPE = #{vatType}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="productGbn != null and productGbn != ''">
            AND ${_alias}PRODUCT_GBN = #{productGbn}
        </if>
        <if test="deptIdReal != null and deptIdReal != ''">
            AND ${_alias}DEPT_ID_REAL = #{deptIdReal}
        </if>
        <if test="sodokDate != null and sodokDate.enabled == true">
            <if test="sodokDate.from != null and sodokDate.from != ''">
            AND ${_alias}SODOK_DATE >= TO_DATE(#{sodokDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="sodokDate.to != null and sodokDate.to != ''">
            AND ${_alias}SODOK_DATE <![CDATA[ < ]]> TO_DATE(#{sodokDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="sodokCustId != null">
            AND ${_alias}SODOK_CUST_ID = #{sodokCustId}
        </if>
        <if test="sodokId != null and sodokId != ''">
            AND ${_alias}SODOK_ID = #{sodokId}
        </if>
        <if test="sodokKind != null and sodokKind != ''">
            AND ${_alias}SODOK_KIND = #{sodokKind}
        </if>
        <if test="serviceMin != null">
            AND ${_alias}SERVICE_MIN = #{serviceMin}
        </if>
        <if test="roundYn != null and roundYn != ''">
            AND ${_alias}ROUND_YN = #{roundYn}
        </if>
        <if test="custLevelDiv != null and custLevelDiv != ''">
            AND ${_alias}CUST_LEVEL_DIV = #{custLevelDiv}
        </if>
        <if test="familyYn != null and familyYn != ''">
            AND ${_alias}FAMILY_YN = #{familyYn}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}PROOFFI_DIV AS ${_asPrefix}PROOFFI_DIV, ${_alias}PSEP_DIV AS ${_asPrefix}PSEP_DIV, ${_alias}PRODUCT_DIV AS ${_asPrefix}PRODUCT_DIV, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}MODEL_NAME AS ${_asPrefix}MODEL_NAME, ${_alias}MAKER AS ${_asPrefix}MAKER, ${_alias}INPUT_AMT AS ${_asPrefix}INPUT_AMT, ${_alias}INPUT_VAT AS ${_asPrefix}INPUT_VAT, ${_alias}SALE_AMT AS ${_asPrefix}SALE_AMT, ${_alias}SALE_VAT AS ${_asPrefix}SALE_VAT, ${_alias}DEPT_SALE_AMT AS ${_asPrefix}DEPT_SALE_AMT, ${_alias}DEPT_SALE_VAT AS ${_asPrefix}DEPT_SALE_VAT, ${_alias}RENT_AMT AS ${_asPrefix}RENT_AMT, ${_alias}RENT_VAT AS ${_asPrefix}RENT_VAT, ${_alias}DEPT_RENTAMT AS ${_asPrefix}DEPT_RENTAMT, ${_alias}DEPT_RENTVAT AS ${_asPrefix}DEPT_RENTVAT, ${_alias}INTRO_RATE AS ${_asPrefix}INTRO_RATE, ${_alias}UNIT_DIV AS ${_asPrefix}UNIT_DIV, ${_alias}UNITQTY AS ${_asPrefix}UNITQTY, ${_alias}BOXSALE_AMT AS ${_asPrefix}BOXSALE_AMT, ${_alias}BOXSALE_VAT AS ${_asPrefix}BOXSALE_VAT, ${_alias}BOXSALE_DEPTAMT AS ${_asPrefix}BOXSALE_DEPTAMT, ${_alias}BOXSALE_DEPTVAT AS ${_asPrefix}BOXSALE_DEPTVAT, ${_alias}FIRST_RQTY AS ${_asPrefix}FIRST_RQTY, ${_alias}NOW_RQTY AS ${_asPrefix}NOW_RQTY, ${_alias}WARRANT_RQTY AS ${_asPrefix}WARRANT_RQTY, ${_alias}PINFO1 AS ${_asPrefix}PINFO1, ${_alias}PINFO2 AS ${_asPrefix}PINFO2, ${_alias}PINFO3 AS ${_asPrefix}PINFO3, ${_alias}PIMG1 AS ${_asPrefix}PIMG1, ${_alias}PIMG2 AS ${_asPrefix}PIMG2, ${_alias}PIMG3 AS ${_asPrefix}PIMG3, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}REG_DATE AS ${_asPrefix}REG_DATE, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}LEASEPAY_DIV AS ${_asPrefix}LEASEPAY_DIV, ${_alias}RENT_DEPT_ID AS ${_asPrefix}RENT_DEPT_ID, ${_alias}SORT_ORDER AS ${_asPrefix}SORT_ORDER, ${_alias}USE_TYPE AS ${_asPrefix}USE_TYPE, ${_alias}USEYEAR_YN AS ${_asPrefix}USEYEAR_YN, ${_alias}SERIALNO AS ${_asPrefix}SERIALNO, ${_alias}PROD_STATE AS ${_asPrefix}PROD_STATE, ${_alias}PRODUCT_SEQ AS ${_asPrefix}PRODUCT_SEQ, ${_alias}USEYEAR AS ${_asPrefix}USEYEAR, ${_alias}VAT_TYPE AS ${_asPrefix}VAT_TYPE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}PRODUCT_GBN AS ${_asPrefix}PRODUCT_GBN, ${_alias}DEPT_ID_REAL AS ${_asPrefix}DEPT_ID_REAL, ${_alias}SODOK_DATE AS ${_asPrefix}SODOK_DATE, ${_alias}SODOK_CUST_ID AS ${_asPrefix}SODOK_CUST_ID, ${_alias}SODOK_ID AS ${_asPrefix}SODOK_ID, ${_alias}SODOK_KIND AS ${_asPrefix}SODOK_KIND, ${_alias}SERVICE_MIN AS ${_asPrefix}SERVICE_MIN, ${_alias}ROUND_YN AS ${_asPrefix}ROUND_YN, ${_alias}CUST_LEVEL_DIV AS ${_asPrefix}CUST_LEVEL_DIV, ${_alias}FAMILY_YN AS ${_asPrefix}FAMILY_YN        </when>
        <otherwise>
            ${_alias}PRODUCT_ID, ${_alias}PROOFFI_DIV, ${_alias}PSEP_DIV, ${_alias}PRODUCT_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}MODEL_NAME, ${_alias}MAKER, ${_alias}INPUT_AMT, ${_alias}INPUT_VAT, ${_alias}SALE_AMT, ${_alias}SALE_VAT, ${_alias}DEPT_SALE_AMT, ${_alias}DEPT_SALE_VAT, ${_alias}RENT_AMT, ${_alias}RENT_VAT, ${_alias}DEPT_RENTAMT, ${_alias}DEPT_RENTVAT, ${_alias}INTRO_RATE, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}BOXSALE_AMT, ${_alias}BOXSALE_VAT, ${_alias}BOXSALE_DEPTAMT, ${_alias}BOXSALE_DEPTVAT, ${_alias}FIRST_RQTY, ${_alias}NOW_RQTY, ${_alias}WARRANT_RQTY, ${_alias}PINFO1, ${_alias}PINFO2, ${_alias}PINFO3, ${_alias}PIMG1, ${_alias}PIMG2, ${_alias}PIMG3, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}REG_DATE, ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}LEASEPAY_DIV, ${_alias}RENT_DEPT_ID, ${_alias}SORT_ORDER, ${_alias}USE_TYPE, ${_alias}USEYEAR_YN, ${_alias}SERIALNO, ${_alias}PROD_STATE, ${_alias}PRODUCT_SEQ, ${_alias}USEYEAR, ${_alias}VAT_TYPE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}PRODUCT_GBN, ${_alias}DEPT_ID_REAL, ${_alias}SODOK_DATE, ${_alias}SODOK_CUST_ID, ${_alias}SODOK_ID, ${_alias}SODOK_KIND, ${_alias}SERVICE_MIN, ${_alias}ROUND_YN, ${_alias}CUST_LEVEL_DIV, ${_alias}FAMILY_YN        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}PROOFFI_DIV AS ${_asPrefix}PROOFFI_DIV, ${_alias}PSEP_DIV AS ${_asPrefix}PSEP_DIV, ${_alias}PRODUCT_DIV AS ${_asPrefix}PRODUCT_DIV, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}MODEL_NAME AS ${_asPrefix}MODEL_NAME, ${_alias}MAKER AS ${_asPrefix}MAKER, ${_alias}INPUT_AMT AS ${_asPrefix}INPUT_AMT, ${_alias}INPUT_VAT AS ${_asPrefix}INPUT_VAT, ${_alias}SALE_AMT AS ${_asPrefix}SALE_AMT, ${_alias}SALE_VAT AS ${_asPrefix}SALE_VAT, ${_alias}DEPT_SALE_AMT AS ${_asPrefix}DEPT_SALE_AMT, ${_alias}DEPT_SALE_VAT AS ${_asPrefix}DEPT_SALE_VAT, ${_alias}RENT_AMT AS ${_asPrefix}RENT_AMT, ${_alias}RENT_VAT AS ${_asPrefix}RENT_VAT, ${_alias}DEPT_RENTAMT AS ${_asPrefix}DEPT_RENTAMT, ${_alias}DEPT_RENTVAT AS ${_asPrefix}DEPT_RENTVAT, ${_alias}INTRO_RATE AS ${_asPrefix}INTRO_RATE, ${_alias}UNIT_DIV AS ${_asPrefix}UNIT_DIV, ${_alias}UNITQTY AS ${_asPrefix}UNITQTY, ${_alias}BOXSALE_AMT AS ${_asPrefix}BOXSALE_AMT, ${_alias}BOXSALE_VAT AS ${_asPrefix}BOXSALE_VAT, ${_alias}BOXSALE_DEPTAMT AS ${_asPrefix}BOXSALE_DEPTAMT, ${_alias}BOXSALE_DEPTVAT AS ${_asPrefix}BOXSALE_DEPTVAT, ${_alias}FIRST_RQTY AS ${_asPrefix}FIRST_RQTY, ${_alias}NOW_RQTY AS ${_asPrefix}NOW_RQTY, ${_alias}WARRANT_RQTY AS ${_asPrefix}WARRANT_RQTY, ${_alias}PINFO1 AS ${_asPrefix}PINFO1, ${_alias}PINFO2 AS ${_asPrefix}PINFO2, ${_alias}PINFO3 AS ${_asPrefix}PINFO3, ${_alias}PIMG1 AS ${_asPrefix}PIMG1, ${_alias}PIMG2 AS ${_asPrefix}PIMG2, ${_alias}PIMG3 AS ${_asPrefix}PIMG3, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}REG_DATE AS ${_asPrefix}REG_DATE, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}LEASEPAY_DIV AS ${_asPrefix}LEASEPAY_DIV, ${_alias}RENT_DEPT_ID AS ${_asPrefix}RENT_DEPT_ID, ${_alias}SORT_ORDER AS ${_asPrefix}SORT_ORDER, ${_alias}USE_TYPE AS ${_asPrefix}USE_TYPE, ${_alias}USEYEAR_YN AS ${_asPrefix}USEYEAR_YN, ${_alias}SERIALNO AS ${_asPrefix}SERIALNO, ${_alias}PROD_STATE AS ${_asPrefix}PROD_STATE, ${_alias}PRODUCT_SEQ AS ${_asPrefix}PRODUCT_SEQ, ${_alias}USEYEAR AS ${_asPrefix}USEYEAR, ${_alias}VAT_TYPE AS ${_asPrefix}VAT_TYPE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}PRODUCT_GBN AS ${_asPrefix}PRODUCT_GBN, ${_alias}DEPT_ID_REAL AS ${_asPrefix}DEPT_ID_REAL, ${_alias}SODOK_DATE AS ${_asPrefix}SODOK_DATE, ${_alias}SODOK_CUST_ID AS ${_asPrefix}SODOK_CUST_ID, ${_alias}SODOK_ID AS ${_asPrefix}SODOK_ID, ${_alias}SODOK_KIND AS ${_asPrefix}SODOK_KIND, ${_alias}SERVICE_MIN AS ${_asPrefix}SERVICE_MIN, ${_alias}ROUND_YN AS ${_asPrefix}ROUND_YN, ${_alias}CUST_LEVEL_DIV AS ${_asPrefix}CUST_LEVEL_DIV, ${_alias}FAMILY_YN AS ${_asPrefix}FAMILY_YN        </when>
        <otherwise>
            ${_alias}PROOFFI_DIV, ${_alias}PSEP_DIV, ${_alias}PRODUCT_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}MODEL_NAME, ${_alias}MAKER, ${_alias}INPUT_AMT, ${_alias}INPUT_VAT, ${_alias}SALE_AMT, ${_alias}SALE_VAT, ${_alias}DEPT_SALE_AMT, ${_alias}DEPT_SALE_VAT, ${_alias}RENT_AMT, ${_alias}RENT_VAT, ${_alias}DEPT_RENTAMT, ${_alias}DEPT_RENTVAT, ${_alias}INTRO_RATE, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}BOXSALE_AMT, ${_alias}BOXSALE_VAT, ${_alias}BOXSALE_DEPTAMT, ${_alias}BOXSALE_DEPTVAT, ${_alias}FIRST_RQTY, ${_alias}NOW_RQTY, ${_alias}WARRANT_RQTY, ${_alias}PINFO1, ${_alias}PINFO2, ${_alias}PINFO3, ${_alias}PIMG1, ${_alias}PIMG2, ${_alias}PIMG3, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}REG_DATE, ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}LEASEPAY_DIV, ${_alias}RENT_DEPT_ID, ${_alias}SORT_ORDER, ${_alias}USE_TYPE, ${_alias}USEYEAR_YN, ${_alias}SERIALNO, ${_alias}PROD_STATE, ${_alias}PRODUCT_SEQ, ${_alias}USEYEAR, ${_alias}VAT_TYPE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}PRODUCT_GBN, ${_alias}DEPT_ID_REAL, ${_alias}SODOK_DATE, ${_alias}SODOK_CUST_ID, ${_alias}SODOK_ID, ${_alias}SODOK_KIND, ${_alias}SERVICE_MIN, ${_alias}ROUND_YN, ${_alias}CUST_LEVEL_DIV, ${_alias}FAMILY_YN        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}PRODUCT_ID, ${_alias}PROOFFI_DIV, ${_alias}PSEP_DIV, ${_alias}PRODUCT_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}MODEL_NAME, ${_alias}MAKER, ${_alias}INPUT_AMT, ${_alias}INPUT_VAT, ${_alias}SALE_AMT, ${_alias}SALE_VAT, ${_alias}DEPT_SALE_AMT, ${_alias}DEPT_SALE_VAT, ${_alias}RENT_AMT, ${_alias}RENT_VAT, ${_alias}DEPT_RENTAMT, ${_alias}DEPT_RENTVAT, ${_alias}INTRO_RATE, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}BOXSALE_AMT, ${_alias}BOXSALE_VAT, ${_alias}BOXSALE_DEPTAMT, ${_alias}BOXSALE_DEPTVAT, ${_alias}FIRST_RQTY, ${_alias}NOW_RQTY, ${_alias}WARRANT_RQTY, ${_alias}PINFO1, ${_alias}PINFO2, ${_alias}PINFO3, ${_alias}PIMG1, ${_alias}PIMG2, ${_alias}PIMG3, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}REG_DATE, ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}LEASEPAY_DIV, ${_alias}RENT_DEPT_ID, ${_alias}SORT_ORDER, ${_alias}USE_TYPE, ${_alias}USEYEAR_YN, ${_alias}SERIALNO, ${_alias}PROD_STATE, ${_alias}PRODUCT_SEQ, ${_alias}USEYEAR, ${_alias}VAT_TYPE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}PRODUCT_GBN, ${_alias}DEPT_ID_REAL, ${_alias}SODOK_DATE, ${_alias}SODOK_CUST_ID, ${_alias}SODOK_ID, ${_alias}SODOK_KIND, ${_alias}SERVICE_MIN, ${_alias}ROUND_YN, ${_alias}CUST_LEVEL_DIV, ${_alias}FAMILY_YN    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}PROOFFI_DIV, ${_alias}PSEP_DIV, ${_alias}PRODUCT_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}MODEL_NAME, ${_alias}MAKER, ${_alias}INPUT_AMT, ${_alias}INPUT_VAT, ${_alias}SALE_AMT, ${_alias}SALE_VAT, ${_alias}DEPT_SALE_AMT, ${_alias}DEPT_SALE_VAT, ${_alias}RENT_AMT, ${_alias}RENT_VAT, ${_alias}DEPT_RENTAMT, ${_alias}DEPT_RENTVAT, ${_alias}INTRO_RATE, ${_alias}UNIT_DIV, ${_alias}UNITQTY, ${_alias}BOXSALE_AMT, ${_alias}BOXSALE_VAT, ${_alias}BOXSALE_DEPTAMT, ${_alias}BOXSALE_DEPTVAT, ${_alias}FIRST_RQTY, ${_alias}NOW_RQTY, ${_alias}WARRANT_RQTY, ${_alias}PINFO1, ${_alias}PINFO2, ${_alias}PINFO3, ${_alias}PIMG1, ${_alias}PIMG2, ${_alias}PIMG3, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}USE_YN, ${_alias}REG_DATE, ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}LEASEPAY_DIV, ${_alias}RENT_DEPT_ID, ${_alias}SORT_ORDER, ${_alias}USE_TYPE, ${_alias}USEYEAR_YN, ${_alias}SERIALNO, ${_alias}PROD_STATE, ${_alias}PRODUCT_SEQ, ${_alias}USEYEAR, ${_alias}VAT_TYPE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}PRODUCT_GBN, ${_alias}DEPT_ID_REAL, ${_alias}SODOK_DATE, ${_alias}SODOK_CUST_ID, ${_alias}SODOK_ID, ${_alias}SODOK_KIND, ${_alias}SERVICE_MIN, ${_alias}ROUND_YN, ${_alias}CUST_LEVEL_DIV, ${_alias}FAMILY_YN    </sql>

    <select id="simpleGetCodeProduct" parameterType="long" resultMap="simpleCodeProductResult_">
        /* com.neofect.gts.core.services.common.repository.CodeProductRepository_.simpleGetCodeProduct */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.CODE_PRODUCT
        WHERE
        PRODUCT_ID = #{id}
	</select>

    <select id="simpleListCodeProductCnt" resultType="int">
        /* com.neofect.gts.core.services.common.repository.CodeProductRepository_.simpleListCodeProductCnt */

        SELECT COUNT(*)
        FROM GTS2016.CODE_PRODUCT
        <include refid="simpleCodeProductCondition_" />
    </select>

    <select id="simpleListCodeProduct" resultMap="simpleCodeProductResult_">
        /* com.neofect.gts.core.services.common.repository.CodeProductRepository_.simpleListCodeProduct */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.CODE_PRODUCT
        <include refid="simpleCodeProductCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="prooffiDiv != null and prooffiDiv != ''">
            ${_alias}PROOFFI_DIV = #{prooffiDiv},
        </if>
        <if test="psepDiv != null and psepDiv != ''">
            ${_alias}PSEP_DIV = #{psepDiv},
        </if>
        <if test="productDiv != null and productDiv != ''">
            ${_alias}PRODUCT_DIV = #{productDiv},
        </if>
        <if test="productCode != null and productCode != ''">
            ${_alias}PRODUCT_CODE = #{productCode},
        </if>
        <if test="productName != null and productName != ''">
            ${_alias}PRODUCT_NAME = #{productName},
        </if>
        <if test="modelName != null and modelName != ''">
            ${_alias}MODEL_NAME = #{modelName},
        </if>
        <if test="maker != null and maker != ''">
            ${_alias}MAKER = #{maker},
        </if>
        <if test="inputAmt != null">
            ${_alias}INPUT_AMT = #{inputAmt},
        </if>
        <if test="inputVat != null">
            ${_alias}INPUT_VAT = #{inputVat},
        </if>
        <if test="saleAmt != null">
            ${_alias}SALE_AMT = #{saleAmt},
        </if>
        <if test="saleVat != null">
            ${_alias}SALE_VAT = #{saleVat},
        </if>
        <if test="deptSaleAmt != null">
            ${_alias}DEPT_SALE_AMT = #{deptSaleAmt},
        </if>
        <if test="deptSaleVat != null">
            ${_alias}DEPT_SALE_VAT = #{deptSaleVat},
        </if>
        <if test="rentAmt != null">
            ${_alias}RENT_AMT = #{rentAmt},
        </if>
        <if test="rentVat != null">
            ${_alias}RENT_VAT = #{rentVat},
        </if>
        <if test="deptRentamt != null">
            ${_alias}DEPT_RENTAMT = #{deptRentamt},
        </if>
        <if test="deptRentvat != null">
            ${_alias}DEPT_RENTVAT = #{deptRentvat},
        </if>
        <if test="introRate != null">
            ${_alias}INTRO_RATE = #{introRate},
        </if>
        <if test="unitDiv != null and unitDiv != ''">
            ${_alias}UNIT_DIV = #{unitDiv},
        </if>
        <if test="unitqty != null">
            ${_alias}UNITQTY = #{unitqty},
        </if>
        <if test="boxsaleAmt != null">
            ${_alias}BOXSALE_AMT = #{boxsaleAmt},
        </if>
        <if test="boxsaleVat != null">
            ${_alias}BOXSALE_VAT = #{boxsaleVat},
        </if>
        <if test="boxsaleDeptamt != null">
            ${_alias}BOXSALE_DEPTAMT = #{boxsaleDeptamt},
        </if>
        <if test="boxsaleDeptvat != null">
            ${_alias}BOXSALE_DEPTVAT = #{boxsaleDeptvat},
        </if>
        <if test="firstRqty != null">
            ${_alias}FIRST_RQTY = #{firstRqty},
        </if>
        <if test="nowRqty != null">
            ${_alias}NOW_RQTY = #{nowRqty},
        </if>
        <if test="warrantRqty != null">
            ${_alias}WARRANT_RQTY = #{warrantRqty},
        </if>
        <if test="pinfo1 != null and pinfo1 != ''">
            ${_alias}PINFO1 = #{pinfo1},
        </if>
        <if test="pinfo2 != null and pinfo2 != ''">
            ${_alias}PINFO2 = #{pinfo2},
        </if>
        <if test="pinfo3 != null and pinfo3 != ''">
            ${_alias}PINFO3 = #{pinfo3},
        </if>
        <if test="pimg1 != null and pimg1 != ''">
            ${_alias}PIMG1 = #{pimg1},
        </if>
        <if test="pimg2 != null and pimg2 != ''">
            ${_alias}PIMG2 = #{pimg2},
        </if>
        <if test="pimg3 != null and pimg3 != ''">
            ${_alias}PIMG3 = #{pimg3},
        </if>
        <if test="startDate != null">
            ${_alias}START_DATE = #{startDate},
        </if>
        <if test="endDate != null">
            ${_alias}END_DATE = #{endDate},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="regDate != null">
            ${_alias}REG_DATE = #{regDate},
        </if>
        <if test="custId != null">
            ${_alias}CUST_ID = #{custId},
        </if>
        <if test="deptId != null and deptId != ''">
            ${_alias}DEPT_ID = #{deptId},
        </if>
        <if test="leasepayDiv != null and leasepayDiv != ''">
            ${_alias}LEASEPAY_DIV = #{leasepayDiv},
        </if>
        <if test="rentDeptId != null and rentDeptId != ''">
            ${_alias}RENT_DEPT_ID = #{rentDeptId},
        </if>
        <if test="sortOrder != null">
            ${_alias}SORT_ORDER = #{sortOrder},
        </if>
        <if test="useType != null and useType != ''">
            ${_alias}USE_TYPE = #{useType},
        </if>
        <if test="useyearYn != null and useyearYn != ''">
            ${_alias}USEYEAR_YN = #{useyearYn},
        </if>
        <if test="serialno != null and serialno != ''">
            ${_alias}SERIALNO = #{serialno},
        </if>
        <if test="prodState != null and prodState != ''">
            ${_alias}PROD_STATE = #{prodState},
        </if>
        <if test="productSeq != null">
            ${_alias}PRODUCT_SEQ = #{productSeq},
        </if>
        <if test="useyear != null and useyear != ''">
            ${_alias}USEYEAR = #{useyear},
        </if>
        <if test="vatType != null and vatType != ''">
            ${_alias}VAT_TYPE = #{vatType},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="productGbn != null and productGbn != ''">
            ${_alias}PRODUCT_GBN = #{productGbn},
        </if>
        <if test="deptIdReal != null and deptIdReal != ''">
            ${_alias}DEPT_ID_REAL = #{deptIdReal},
        </if>
        <if test="sodokDate != null">
            ${_alias}SODOK_DATE = #{sodokDate},
        </if>
        <if test="sodokCustId != null">
            ${_alias}SODOK_CUST_ID = #{sodokCustId},
        </if>
        <if test="sodokId != null and sodokId != ''">
            ${_alias}SODOK_ID = #{sodokId},
        </if>
        <if test="sodokKind != null and sodokKind != ''">
            ${_alias}SODOK_KIND = #{sodokKind},
        </if>
        <if test="serviceMin != null">
            ${_alias}SERVICE_MIN = #{serviceMin},
        </if>
        <if test="roundYn != null and roundYn != ''">
            ${_alias}ROUND_YN = #{roundYn},
        </if>
        <if test="custLevelDiv != null and custLevelDiv != ''">
            ${_alias}CUST_LEVEL_DIV = #{custLevelDiv},
        </if>
        <if test="familyYn != null and familyYn != ''">
            ${_alias}FAMILY_YN = #{familyYn},
        </if>
    </sql>

    <update id="updateCodeProduct" parameterType="com.neofect.gts.core.services.common.domain.CodeProduct">
        /* com.neofect.gts.core.services.common.repository.CodeProductRepository_.updateCodeProduct */

        UPDATE GTS2016.CODE_PRODUCT
        SET
             PROOFFI_DIV = #{prooffiDiv}
            , PSEP_DIV = #{psepDiv}
            , PRODUCT_DIV = #{productDiv}
            , PRODUCT_CODE = #{productCode}
            , PRODUCT_NAME = #{productName}
            , MODEL_NAME = #{modelName}
            , MAKER = #{maker}
            , INPUT_AMT = #{inputAmt}
            , INPUT_VAT = #{inputVat}
            , SALE_AMT = #{saleAmt}
            , SALE_VAT = #{saleVat}
            , DEPT_SALE_AMT = #{deptSaleAmt}
            , DEPT_SALE_VAT = #{deptSaleVat}
            , RENT_AMT = #{rentAmt}
            , RENT_VAT = #{rentVat}
            , DEPT_RENTAMT = #{deptRentamt}
            , DEPT_RENTVAT = #{deptRentvat}
            , INTRO_RATE = #{introRate}
            , UNIT_DIV = #{unitDiv}
            , UNITQTY = #{unitqty}
            , BOXSALE_AMT = #{boxsaleAmt}
            , BOXSALE_VAT = #{boxsaleVat}
            , BOXSALE_DEPTAMT = #{boxsaleDeptamt}
            , BOXSALE_DEPTVAT = #{boxsaleDeptvat}
            , FIRST_RQTY = #{firstRqty}
            , NOW_RQTY = #{nowRqty}
            , WARRANT_RQTY = #{warrantRqty}
            , PINFO1 = #{pinfo1}
            , PINFO2 = #{pinfo2}
            , PINFO3 = #{pinfo3}
            , PIMG1 = #{pimg1}
            , PIMG2 = #{pimg2}
            , PIMG3 = #{pimg3}
            , START_DATE = #{startDate}
            , END_DATE = #{endDate}
            , USE_YN = #{useYn}
            , REG_DATE = #{regDate}
            , CUST_ID = #{custId}
            , DEPT_ID = #{deptId}
            , LEASEPAY_DIV = #{leasepayDiv}
            , RENT_DEPT_ID = #{rentDeptId}
            , SORT_ORDER = #{sortOrder}
            , USE_TYPE = #{useType}
            , USEYEAR_YN = #{useyearYn}
            , SERIALNO = #{serialno}
            , PROD_STATE = #{prodState}
            , PRODUCT_SEQ = #{productSeq}
            , USEYEAR = #{useyear}
            , VAT_TYPE = #{vatType}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , PRODUCT_GBN = #{productGbn}
            , DEPT_ID_REAL = #{deptIdReal}
            , SODOK_DATE = #{sodokDate}
            , SODOK_CUST_ID = #{sodokCustId}
            , SODOK_ID = #{sodokId}
            , SODOK_KIND = #{sodokKind}
            , SERVICE_MIN = #{serviceMin}
            , ROUND_YN = #{roundYn}
            , CUST_LEVEL_DIV = #{custLevelDiv}
            , FAMILY_YN = #{familyYn}
        WHERE
            PRODUCT_ID = #{id}
    </update>

    <update id="updateCodeProductDynamic" parameterType="com.neofect.gts.core.services.common.domain.CodeProduct">
        /* com.neofect.gts.core.services.common.repository.CodeProductRepository_.updateCodeProductDynamic */

        UPDATE GTS2016.CODE_PRODUCT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            PRODUCT_ID = #{id}
    </update>

    <delete id="deleteCodeProduct" parameterType="long">
        /* com.neofect.gts.core.services.common.repository.CodeProductRepository_.deleteCodeProduct */

        DELETE FROM GTS2016.CODE_PRODUCT
        WHERE
            PRODUCT_ID = #{id}
    </delete>

    <sql id="insert_values_">

        #{prooffiDiv},
        #{psepDiv},
        #{productDiv},
        #{productCode},
        #{productName},
        #{modelName},
        #{maker},
        #{inputAmt},
        #{inputVat},
        #{saleAmt},
        #{saleVat},
        #{deptSaleAmt},
        #{deptSaleVat},
        #{rentAmt},
        #{rentVat},
        #{deptRentamt},
        #{deptRentvat},
        #{introRate},
        #{unitDiv},
        #{unitqty},
        #{boxsaleAmt},
        #{boxsaleVat},
        #{boxsaleDeptamt},
        #{boxsaleDeptvat},
        #{firstRqty},
        #{nowRqty},
        #{warrantRqty},
        #{pinfo1},
        #{pinfo2},
        #{pinfo3},
        #{pimg1},
        #{pimg2},
        #{pimg3},
        #{startDate},
        #{endDate},
        #{useYn},
        #{regDate},
        #{custId},
        #{deptId},
        #{leasepayDiv},
        #{rentDeptId},
        #{sortOrder},
        #{useType},
        #{useyearYn},
        #{serialno},
        #{prodState},
        #{productSeq},
        #{useyear},
        #{vatType},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{productGbn},
        #{deptIdReal},
        #{sodokDate},
        #{sodokCustId},
        #{sodokId},
        #{sodokKind},
        #{serviceMin},
        #{roundYn},
        #{custLevelDiv},
        #{familyYn}
    </sql>

    <insert id="insertCodeProduct">
        /* com.neofect.gts.core.services.common.repository.CodeProductRepository_.insertCodeProduct */


        INSERT INTO GTS2016.CODE_PRODUCT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

