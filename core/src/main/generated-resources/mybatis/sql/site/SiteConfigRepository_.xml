<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.site.repository.SiteConfigRepository_">

    <!--region ====================================================================================== reference only -->
    <resultMap id="_metaInfo" type="java.util.Map">
        <!-- Generated Files -->
        <result property="model_" column="com.neofect.gts.core.services.site.domain.SiteConfig_"/>
        <result property="repository_" column="com.neofect.gts.core.services.site.repository.SiteConfigRepository_"/>
        <!-- Extended Files -->
        <result property="model" column="com.neofect.gts.core.services.site.domain.SiteConfig"/>
        <result property="repository" column="com.neofect.gts.core.services.site.repository.SiteConfigRepository"/>
    </resultMap>

    <!--
     ! All Columns
     !  sc_id, sc_current, sc_config, sc_modified_dt, sc_modified_by
    -->

    <!--endregion =================================================================================== reference only -->

    <resultMap id="simpleSiteConfigResult_" type="com.neofect.gts.core.services.site.domain.SiteConfig">
        <!-- 아이디 -->
        <id     property="id" column="sc_id"/>
        <!-- 현재 설정 여부 -->
        <result property="current" column="sc_current"/>
        <!-- 설정값 -->
        <result property="config" column="sc_config"/>
        <!-- 수정일시 -->
        <result property="modifiedDt" column="sc_modified_dt"/>
        <!-- 수정자 -->
        <result property="modifiedBy" column="sc_modified_by"/>
    </resultMap>

    <sql id="simpleSiteConfigCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}sc_id IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}sc_id = #{id}
        </if>
        <if test="current != null">
            AND ${_alias}sc_current = #{current}
        </if>
        <if test="config != null and config != ''">
            AND ${_alias}sc_config = #{config}
        </if>
        <if test="modifiedDt != null and modifiedDt.enabled == true">
            <if test="modifiedDt.from != null and modifiedDt.from != ''">
            AND ${_alias}sc_modified_dt >= STR_TO_DATE(#{modifiedDt.from}, '%Y.%m.%d')
            </if>
            <if test="modifiedDt.to != null and modifiedDt.to != ''">
            AND ${_alias}sc_modified_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{modifiedDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="modifiedBy != null">
            AND ${_alias}sc_modified_by = #{modifiedBy}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}sc_id AS ${_asPrefix}sc_id, ${_alias}sc_current AS ${_asPrefix}sc_current, ${_alias}sc_config AS ${_asPrefix}sc_config, ${_alias}sc_modified_dt AS ${_asPrefix}sc_modified_dt, ${_alias}sc_modified_by AS ${_asPrefix}sc_modified_by        </when>
        <otherwise>
            ${_alias}sc_id, ${_alias}sc_current, ${_alias}sc_config, ${_alias}sc_modified_dt, ${_alias}sc_modified_by        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}sc_current AS ${_asPrefix}sc_current, ${_alias}sc_config AS ${_asPrefix}sc_config, ${_alias}sc_modified_dt AS ${_asPrefix}sc_modified_dt, ${_alias}sc_modified_by AS ${_asPrefix}sc_modified_by        </when>
        <otherwise>
            ${_alias}sc_current, ${_alias}sc_config, ${_alias}sc_modified_dt, ${_alias}sc_modified_by        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}sc_id, ${_alias}sc_current, ${_alias}sc_config, ${_alias}sc_modified_dt, ${_alias}sc_modified_by    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}sc_current, ${_alias}sc_config, ${_alias}sc_modified_dt, ${_alias}sc_modified_by    </sql>

    <select id="simpleGetSiteConfig" parameterType="long" resultMap="simpleSiteConfigResult_">
        /* SiteConfigRepository_.simpleGetSiteConfig */

        SELECT
            <include refid="columns_" />
        FROM
            nv_site_config
        WHERE
        sc_id = #{id}
	</select>

    <select id="simpleListSiteConfigCnt" resultType="int">
        /* SiteConfigRepository_.simpleListSiteConfigCnt */

        SELECT COUNT(*)
        FROM nv_site_config
        <include refid="simpleSiteConfigCondition_" />
    </select>

    <select id="simpleListSiteConfig" resultMap="simpleSiteConfigResult_">
        /* SiteConfigRepository_.simpleListSiteConfig */
        SELECT
            <include refid="columns_" />
        FROM nv_site_config
        <include refid="simpleSiteConfigCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="current != null">
            ${_alias}sc_current = #{current},
        </if>
        <if test="config != null and config != ''">
            ${_alias}sc_config = #{config},
        </if>
        <if test="modifiedDt != null">
            ${_alias}sc_modified_dt = #{modifiedDt},
        </if>
        <if test="modifiedBy != null">
            ${_alias}sc_modified_by = #{modifiedBy},
        </if>
    </sql>

    <update id="updateSiteConfig" parameterType="com.neofect.gts.core.services.site.domain.SiteConfig">
        /* com.unvus.iflex.core.services.site.repository.SiteConfigRepository_.updateSiteConfig */

        UPDATE nv_site_config
        SET
             sc_current = #{current}
            , sc_config = #{config}
            , sc_modified_dt = #{modifiedDt}
            , sc_modified_by = #{modifiedBy}
        WHERE
            sc_id = #{id}
    </update>

    <update id="updateSiteConfigDynamic" parameterType="com.neofect.gts.core.services.site.domain.SiteConfig">
        /* SiteConfigRepository_.updateSiteConfigDynamic */

        UPDATE nv_site_config
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            sc_id = #{id}
    </update>

    <delete id="deleteSiteConfig" parameterType="long">
        /* com.unvus.iflex.core.services.site.repository.SiteConfigRepository_.deleteSiteConfig */

        DELETE FROM nv_site_config
        WHERE
            sc_id = #{id}
    </delete>

    <sql id="insert_values_">

        #{current},
        #{config},
        #{modifiedDt},
        #{modifiedBy}
    </sql>

    <insert id="insertSiteConfig">
        /* SiteConfigRepository_.insertSiteConfig */


        INSERT INTO nv_site_config
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

