<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.site.repository.TermRepository_">

    <!--region ====================================================================================== reference only -->
    <resultMap id="_metaInfo" type="java.util.Map">
        <!-- Generated Files -->
        <result property="model_" column="com.neofect.gts.core.services.site.domain.Term_"/>
        <result property="repository_" column="com.neofect.gts.core.services.site.repository.TermRepository_"/>
        <!-- Extended Files -->
        <result property="model" column="com.neofect.gts.core.services.site.domain.Term"/>
        <result property="repository" column="com.neofect.gts.core.services.site.repository.TermRepository"/>
    </resultMap>

    <!--
     ! All Columns
     !  term_code, term_revision, term_deleted, term_created_dt, term_created_by
    -->

    <!--endregion =================================================================================== reference only -->

    <resultMap id="simpleTermResult_" type="com.neofect.gts.core.services.site.domain.Term">
        <!-- 약관코드 -->
        <id     property="id" column="term_code"/>
        <!-- 현재 약관리비전 -->
        <result property="revision" column="term_revision"/>
        <!-- 삭제여부 -->
        <result property="deleted" column="term_deleted"/>
        <!-- 등록일시 -->
        <result property="createdDt" column="term_created_dt"/>
        <!-- 등록자 -->
        <result property="createdBy" column="term_created_by"/>
    </resultMap>

    <sql id="simpleTermCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}term_code IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null and id != ''">
            AND ${_alias}term_code = #{id}
        </if>
        <if test="revision != null">
            AND ${_alias}term_revision = #{revision}
        </if>
        <if test="deleted != null">
            AND ${_alias}term_deleted = #{deleted}
        </if>
        <if test="createdDt != null and createdDt.enabled == true">
            <if test="createdDt.from != null and createdDt.from != ''">
            AND ${_alias}term_created_dt >= STR_TO_DATE(#{createdDt.from}, '%Y.%m.%d')
            </if>
            <if test="createdDt.to != null and createdDt.to != ''">
            AND ${_alias}term_created_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{createdDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="createdBy != null">
            AND ${_alias}term_created_by = #{createdBy}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}term_code AS ${_asPrefix}term_code, ${_alias}term_revision AS ${_asPrefix}term_revision, ${_alias}term_deleted AS ${_asPrefix}term_deleted, ${_alias}term_created_dt AS ${_asPrefix}term_created_dt, ${_alias}term_created_by AS ${_asPrefix}term_created_by        </when>
        <otherwise>
            ${_alias}term_code, ${_alias}term_revision, ${_alias}term_deleted, ${_alias}term_created_dt, ${_alias}term_created_by        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}term_revision AS ${_asPrefix}term_revision, ${_alias}term_deleted AS ${_asPrefix}term_deleted, ${_alias}term_created_dt AS ${_asPrefix}term_created_dt, ${_alias}term_created_by AS ${_asPrefix}term_created_by        </when>
        <otherwise>
            ${_alias}term_revision, ${_alias}term_deleted, ${_alias}term_created_dt, ${_alias}term_created_by        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}term_code, ${_alias}term_revision, ${_alias}term_deleted, ${_alias}term_created_dt, ${_alias}term_created_by    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}term_revision, ${_alias}term_deleted, ${_alias}term_created_dt, ${_alias}term_created_by    </sql>

    <select id="simpleGetTerm" parameterType="long" resultMap="simpleTermResult_">
        /* TermRepository_.simpleGetTerm */

        SELECT
            <include refid="columns_" />
        FROM
            nv_term
        WHERE
        term_code = #{id}
	</select>

    <select id="simpleListTermCnt" resultType="int">
        /* TermRepository_.simpleListTermCnt */

        SELECT COUNT(*)
        FROM nv_term
        <include refid="simpleTermCondition_" />
    </select>

    <select id="simpleListTerm" resultMap="simpleTermResult_">
        /* TermRepository_.simpleListTerm */
        SELECT
            <include refid="columns_" />
        FROM nv_term
        <include refid="simpleTermCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="revision != null">
            ${_alias}term_revision = #{revision},
        </if>
        <if test="deleted != null">
            ${_alias}term_deleted = #{deleted},
        </if>
    </sql>

    <update id="updateTerm" parameterType="com.neofect.gts.core.services.site.domain.Term">
        /* com.unvus.iflex.core.services.site.repository.TermRepository_.updateTerm */

        UPDATE nv_term
        SET
             term_revision = #{revision}
            , term_deleted = #{deleted}
        WHERE
            term_code = #{id}
    </update>

    <update id="updateTermDynamic" parameterType="com.neofect.gts.core.services.site.domain.Term">
        /* TermRepository_.updateTermDynamic */

        UPDATE nv_term
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            term_code = #{id}
    </update>

    <delete id="deleteTerm" parameterType="long">
        /* com.unvus.iflex.core.services.site.repository.TermRepository_.deleteTerm */

        DELETE FROM nv_term
        WHERE
            term_code = #{id}
    </delete>

    <sql id="insert_values_">

        #{revision},
        #{deleted},
        #{createdDt},
        #{createdBy}
    </sql>

    <insert id="insertTerm">
        /* TermRepository_.insertTerm */


        INSERT INTO nv_term
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

