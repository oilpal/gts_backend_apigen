<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.site.repository.TermContentRepository_">

    <!--region ====================================================================================== reference only -->
    <resultMap id="_metaInfo" type="java.util.Map">
        <!-- Generated Files -->
        <result property="model_" column="com.neofect.gts.core.services.site.domain.TermContent_"/>
        <result property="repository_" column="com.neofect.gts.core.services.site.repository.TermContentRepository_"/>
        <!-- Extended Files -->
        <result property="model" column="com.neofect.gts.core.services.site.domain.TermContent"/>
        <result property="repository" column="com.neofect.gts.core.services.site.repository.TermContentRepository"/>
    </resultMap>

    <!--
     ! All Columns
     !  tc_code, tc_revision, tc_current, tc_title, tc_content, tc_required, tc_active_from_dt, tc_active_to_dt, tc_modified_dt, tc_modified_by
    -->

    <!--endregion =================================================================================== reference only -->

    <resultMap id="simpleTermContentResult_" type="com.neofect.gts.core.services.site.domain.TermContent">
        <!-- 약관코드 -->
        <id     property="code" column="tc_code"/>
        <!-- 약관리비전 -->
        <id     property="revision" column="tc_revision"/>
        <!-- 현재약관여부 -->
        <result property="current" column="tc_current"/>
        <!-- 약관제목 -->
        <result property="title" column="tc_title"/>
        <!-- 약관내용 -->
        <result property="content" column="tc_content"/>
        <!-- 필수여부 -->
        <result property="required" column="tc_required"/>
        <!-- 버전 적용시작일시 -->
        <result property="activeFromDt" column="tc_active_from_dt"/>
        <!-- 버전 게시종료일시 -->
        <result property="activeToDt" column="tc_active_to_dt"/>
        <!-- 수정일시 -->
        <result property="modifiedDt" column="tc_modified_dt"/>
        <!-- 수정자 -->
        <result property="modifiedBy" column="tc_modified_by"/>
    </resultMap>

    <sql id="simpleTermContentCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="codes != null and !codes.isEmpty()">
            AND ${_alias}tc_code IN <foreach collection="codes" item="codeValue" open="(" close=")" separator=",">#{ codeValue }</foreach>
        </if>
        <if test="revisions != null and !revisions.isEmpty()">
            AND ${_alias}tc_revision IN <foreach collection="revisions" item="revisionValue" open="(" close=")" separator=",">#{ revisionValue }</foreach>
        </if>
        <if test="code != null and code != ''">
            AND ${_alias}tc_code = #{code}
        </if>
        <if test="revision != null">
            AND ${_alias}tc_revision = #{revision}
        </if>
        <if test="current != null">
            AND ${_alias}tc_current = #{current}
        </if>
        <if test="title != null and title != ''">
            AND ${_alias}tc_title = #{title}
        </if>
        <if test="content != null and content != ''">
            AND ${_alias}tc_content = #{content}
        </if>
        <if test="required != null">
            AND ${_alias}tc_required = #{required}
        </if>
        <if test="activeFromDt != null and activeFromDt.enabled == true">
            <if test="activeFromDt.from != null and activeFromDt.from != ''">
            AND ${_alias}tc_active_from_dt >= STR_TO_DATE(#{activeFromDt.from}, '%Y.%m.%d')
            </if>
            <if test="activeFromDt.to != null and activeFromDt.to != ''">
            AND ${_alias}tc_active_from_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{activeFromDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="activeToDt != null and activeToDt.enabled == true">
            <if test="activeToDt.from != null and activeToDt.from != ''">
            AND ${_alias}tc_active_to_dt >= STR_TO_DATE(#{activeToDt.from}, '%Y.%m.%d')
            </if>
            <if test="activeToDt.to != null and activeToDt.to != ''">
            AND ${_alias}tc_active_to_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{activeToDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="modifiedDt != null and modifiedDt.enabled == true">
            <if test="modifiedDt.from != null and modifiedDt.from != ''">
            AND ${_alias}tc_modified_dt >= STR_TO_DATE(#{modifiedDt.from}, '%Y.%m.%d')
            </if>
            <if test="modifiedDt.to != null and modifiedDt.to != ''">
            AND ${_alias}tc_modified_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{modifiedDt.to}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="modifiedBy != null">
            AND ${_alias}tc_modified_by = #{modifiedBy}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}tc_code AS ${_asPrefix}tc_code, ${_alias}tc_revision AS ${_asPrefix}tc_revision, ${_alias}tc_current AS ${_asPrefix}tc_current, ${_alias}tc_title AS ${_asPrefix}tc_title, ${_alias}tc_content AS ${_asPrefix}tc_content, ${_alias}tc_required AS ${_asPrefix}tc_required, ${_alias}tc_active_from_dt AS ${_asPrefix}tc_active_from_dt, ${_alias}tc_active_to_dt AS ${_asPrefix}tc_active_to_dt, ${_alias}tc_modified_dt AS ${_asPrefix}tc_modified_dt, ${_alias}tc_modified_by AS ${_asPrefix}tc_modified_by        </when>
        <otherwise>
            ${_alias}tc_code, ${_alias}tc_revision, ${_alias}tc_current, ${_alias}tc_title, ${_alias}tc_content, ${_alias}tc_required, ${_alias}tc_active_from_dt, ${_alias}tc_active_to_dt, ${_alias}tc_modified_dt, ${_alias}tc_modified_by        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}tc_current AS ${_asPrefix}tc_current, ${_alias}tc_title AS ${_asPrefix}tc_title, ${_alias}tc_content AS ${_asPrefix}tc_content, ${_alias}tc_required AS ${_asPrefix}tc_required, ${_alias}tc_active_from_dt AS ${_asPrefix}tc_active_from_dt, ${_alias}tc_active_to_dt AS ${_asPrefix}tc_active_to_dt, ${_alias}tc_modified_dt AS ${_asPrefix}tc_modified_dt, ${_alias}tc_modified_by AS ${_asPrefix}tc_modified_by        </when>
        <otherwise>
            ${_alias}tc_current, ${_alias}tc_title, ${_alias}tc_content, ${_alias}tc_required, ${_alias}tc_active_from_dt, ${_alias}tc_active_to_dt, ${_alias}tc_modified_dt, ${_alias}tc_modified_by        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}tc_code, ${_alias}tc_revision, ${_alias}tc_current, ${_alias}tc_title, ${_alias}tc_content, ${_alias}tc_required, ${_alias}tc_active_from_dt, ${_alias}tc_active_to_dt, ${_alias}tc_modified_dt, ${_alias}tc_modified_by    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}tc_current, ${_alias}tc_title, ${_alias}tc_content, ${_alias}tc_required, ${_alias}tc_active_from_dt, ${_alias}tc_active_to_dt, ${_alias}tc_modified_dt, ${_alias}tc_modified_by    </sql>

    <select id="simpleGetTermContent" parameterType="long" resultMap="simpleTermContentResult_">
        /* TermContentRepository_.simpleGetTermContent */

        SELECT
            <include refid="columns_" />
        FROM
            nv_term_content
        WHERE
        tc_code = #{code}
        AND tc_revision = #{revision}
	</select>

    <select id="simpleListTermContentCnt" resultType="int">
        /* TermContentRepository_.simpleListTermContentCnt */

        SELECT COUNT(*)
        FROM nv_term_content
        <include refid="simpleTermContentCondition_" />
    </select>

    <select id="simpleListTermContent" resultMap="simpleTermContentResult_">
        /* TermContentRepository_.simpleListTermContent */
        SELECT
            <include refid="columns_" />
        FROM nv_term_content
        <include refid="simpleTermContentCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="current != null">
            ${_alias}tc_current = #{current},
        </if>
        <if test="title != null and title != ''">
            ${_alias}tc_title = #{title},
        </if>
        <if test="content != null and content != ''">
            ${_alias}tc_content = #{content},
        </if>
        <if test="required != null">
            ${_alias}tc_required = #{required},
        </if>
        <if test="activeFromDt != null">
            ${_alias}tc_active_from_dt = #{activeFromDt},
        </if>
        <if test="activeToDt != null">
            ${_alias}tc_active_to_dt = #{activeToDt},
        </if>
        <if test="modifiedDt != null">
            ${_alias}tc_modified_dt = #{modifiedDt},
        </if>
        <if test="modifiedBy != null">
            ${_alias}tc_modified_by = #{modifiedBy},
        </if>
    </sql>

    <update id="updateTermContent" parameterType="com.neofect.gts.core.services.site.domain.TermContent">
        /* com.unvus.iflex.core.services.site.repository.TermContentRepository_.updateTermContent */

        UPDATE nv_term_content
        SET
             tc_current = #{current}
            , tc_title = #{title}
            , tc_content = #{content}
            , tc_required = #{required}
            , tc_active_from_dt = #{activeFromDt}
            , tc_active_to_dt = #{activeToDt}
            , tc_modified_dt = #{modifiedDt}
            , tc_modified_by = #{modifiedBy}
        WHERE
            tc_code = #{code}
            AND tc_revision = #{revision}
    </update>

    <update id="updateTermContentDynamic" parameterType="com.neofect.gts.core.services.site.domain.TermContent">
        /* TermContentRepository_.updateTermContentDynamic */

        UPDATE nv_term_content
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            tc_code = #{code}
            AND tc_revision = #{revision}
    </update>

    <delete id="deleteTermContent" parameterType="long">
        /* com.unvus.iflex.core.services.site.repository.TermContentRepository_.deleteTermContent */

        DELETE FROM nv_term_content
        WHERE
            tc_code = #{code}
            AND tc_revision = #{revision}
    </delete>

    <sql id="insert_values_">

        #{current},
        #{title},
        #{content},
        #{required},
        #{activeFromDt},
        #{activeToDt},
        #{modifiedDt},
        #{modifiedBy}
    </sql>

    <insert id="insertTermContent">
        /* TermContentRepository_.insertTermContent */


        INSERT INTO nv_term_content
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

