<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.form.repository.FormContractRepository_">

    <resultMap id="simpleFormContractResult_" type="com.neofect.gts.core.services.form.domain.FormContract">
        
        <id     property="id" column="FORM_SEQ"/>
        
        <result property="custId" column="CUST_ID"/>
        
        <result property="custName" column="CUST_NAME"/>
        
        <result property="custLevelDiv" column="CUST_LEVEL_DIV"/>
        
        <result property="custGubunDiv" column="CUST_GUBUN_DIV"/>
        
        <result property="manageNo" column="MANAGE_NO"/>
        
        <result property="birthDate" column="BIRTH_DATE"/>
        
        <result property="phone" column="PHONE"/>
        
        <result property="zipCode" column="ZIP_CODE"/>
        
        <result property="addr1" column="ADDR1"/>
        
        <result property="addr2" column="ADDR2"/>
        
        <result property="deptId" column="DEPT_ID"/>
        
        <result property="deptName" column="DEPT_NAME"/>
        
        <result property="deptDiv" column="DEPT_DIV"/>
        
        <result property="ownerName" column="OWNER_NAME"/>
        
        <result property="deptPhone" column="DEPT_PHONE"/>
        
        <result property="deptAddr" column="DEPT_ADDR"/>
        
        <result property="proName" column="PRO_NAME"/>
        
        <result property="relationDiv" column="RELATION_DIV"/>
        
        <result property="proBirthDate" column="PRO_BIRTH_DATE"/>
        
        <result property="proPhone" column="PRO_PHONE"/>
        
        <result property="proHp" column="PRO_HP"/>
        
        <result property="proZipCode" column="PRO_ZIP_CODE"/>
        
        <result property="proAddr1" column="PRO_ADDR1"/>
        
        <result property="proAddr2" column="PRO_ADDR2"/>
        
        <result property="fromDate" column="FROM_DATE"/>
        
        <result property="toDate" column="TO_DATE"/>
        
        <result property="writeDay" column="WRITE_DAY"/>
        
        <result property="calcDay" column="CALC_DAY"/>
        
        <result property="notiDay" column="NOTI_DAY"/>
        
        <result property="payDay" column="PAY_DAY"/>
        
        <result property="payMethod" column="PAY_METHOD"/>
        
        <result property="contractDate" column="CONTRACT_DATE"/>
        
        <result property="writeDate" column="WRITE_DATE"/>
        
        <result property="memberId" column="MEMBER_ID"/>
        
        <result property="memberName" column="MEMBER_NAME"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleFormContractCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}FORM_SEQ IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}FORM_SEQ = #{id}
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="custName != null and custName != ''">
            AND ${_alias}CUST_NAME = #{custName}
        </if>
        <if test="custLevelDiv != null and custLevelDiv != ''">
            AND ${_alias}CUST_LEVEL_DIV = #{custLevelDiv}
        </if>
        <if test="custGubunDiv != null and custGubunDiv != ''">
            AND ${_alias}CUST_GUBUN_DIV = #{custGubunDiv}
        </if>
        <if test="manageNo != null and manageNo != ''">
            AND ${_alias}MANAGE_NO = #{manageNo}
        </if>
        <if test="birthDate != null and birthDate != ''">
            AND ${_alias}BIRTH_DATE = #{birthDate}
        </if>
        <if test="phone != null and phone != ''">
            AND ${_alias}PHONE = #{phone}
        </if>
        <if test="zipCode != null and zipCode != ''">
            AND ${_alias}ZIP_CODE = #{zipCode}
        </if>
        <if test="addr1 != null and addr1 != ''">
            AND ${_alias}ADDR1 = #{addr1}
        </if>
        <if test="addr2 != null and addr2 != ''">
            AND ${_alias}ADDR2 = #{addr2}
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="deptName != null and deptName != ''">
            AND ${_alias}DEPT_NAME = #{deptName}
        </if>
        <if test="deptDiv != null and deptDiv != ''">
            AND ${_alias}DEPT_DIV = #{deptDiv}
        </if>
        <if test="ownerName != null and ownerName != ''">
            AND ${_alias}OWNER_NAME = #{ownerName}
        </if>
        <if test="deptPhone != null and deptPhone != ''">
            AND ${_alias}DEPT_PHONE = #{deptPhone}
        </if>
        <if test="deptAddr != null and deptAddr != ''">
            AND ${_alias}DEPT_ADDR = #{deptAddr}
        </if>
        <if test="proName != null and proName != ''">
            AND ${_alias}PRO_NAME = #{proName}
        </if>
        <if test="relationDiv != null and relationDiv != ''">
            AND ${_alias}RELATION_DIV = #{relationDiv}
        </if>
        <if test="proBirthDate != null and proBirthDate != ''">
            AND ${_alias}PRO_BIRTH_DATE = #{proBirthDate}
        </if>
        <if test="proPhone != null and proPhone != ''">
            AND ${_alias}PRO_PHONE = #{proPhone}
        </if>
        <if test="proHp != null and proHp != ''">
            AND ${_alias}PRO_HP = #{proHp}
        </if>
        <if test="proZipCode != null and proZipCode != ''">
            AND ${_alias}PRO_ZIP_CODE = #{proZipCode}
        </if>
        <if test="proAddr1 != null and proAddr1 != ''">
            AND ${_alias}PRO_ADDR1 = #{proAddr1}
        </if>
        <if test="proAddr2 != null and proAddr2 != ''">
            AND ${_alias}PRO_ADDR2 = #{proAddr2}
        </if>
        <if test="fromDate != null and fromDate != ''">
            AND ${_alias}FROM_DATE = #{fromDate}
        </if>
        <if test="toDate != null and toDate != ''">
            AND ${_alias}TO_DATE = #{toDate}
        </if>
        <if test="writeDay != null">
            AND ${_alias}WRITE_DAY = #{writeDay}
        </if>
        <if test="calcDay != null">
            AND ${_alias}CALC_DAY = #{calcDay}
        </if>
        <if test="notiDay != null">
            AND ${_alias}NOTI_DAY = #{notiDay}
        </if>
        <if test="payDay != null">
            AND ${_alias}PAY_DAY = #{payDay}
        </if>
        <if test="payMethod != null and payMethod != ''">
            AND ${_alias}PAY_METHOD = #{payMethod}
        </if>
        <if test="contractDate != null and contractDate != ''">
            AND ${_alias}CONTRACT_DATE = #{contractDate}
        </if>
        <if test="writeDate != null and writeDate != ''">
            AND ${_alias}WRITE_DATE = #{writeDate}
        </if>
        <if test="memberId != null and memberId != ''">
            AND ${_alias}MEMBER_ID = #{memberId}
        </if>
        <if test="memberName != null and memberName != ''">
            AND ${_alias}MEMBER_NAME = #{memberName}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}FORM_SEQ AS ${_asPrefix}FORM_SEQ, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}CUST_LEVEL_DIV AS ${_asPrefix}CUST_LEVEL_DIV, ${_alias}CUST_GUBUN_DIV AS ${_asPrefix}CUST_GUBUN_DIV, ${_alias}MANAGE_NO AS ${_asPrefix}MANAGE_NO, ${_alias}BIRTH_DATE AS ${_asPrefix}BIRTH_DATE, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}DEPT_NAME AS ${_asPrefix}DEPT_NAME, ${_alias}DEPT_DIV AS ${_asPrefix}DEPT_DIV, ${_alias}OWNER_NAME AS ${_asPrefix}OWNER_NAME, ${_alias}DEPT_PHONE AS ${_asPrefix}DEPT_PHONE, ${_alias}DEPT_ADDR AS ${_asPrefix}DEPT_ADDR, ${_alias}PRO_NAME AS ${_asPrefix}PRO_NAME, ${_alias}RELATION_DIV AS ${_asPrefix}RELATION_DIV, ${_alias}PRO_BIRTH_DATE AS ${_asPrefix}PRO_BIRTH_DATE, ${_alias}PRO_PHONE AS ${_asPrefix}PRO_PHONE, ${_alias}PRO_HP AS ${_asPrefix}PRO_HP, ${_alias}PRO_ZIP_CODE AS ${_asPrefix}PRO_ZIP_CODE, ${_alias}PRO_ADDR1 AS ${_asPrefix}PRO_ADDR1, ${_alias}PRO_ADDR2 AS ${_asPrefix}PRO_ADDR2, ${_alias}FROM_DATE AS ${_asPrefix}FROM_DATE, ${_alias}TO_DATE AS ${_asPrefix}TO_DATE, ${_alias}WRITE_DAY AS ${_asPrefix}WRITE_DAY, ${_alias}CALC_DAY AS ${_asPrefix}CALC_DAY, ${_alias}NOTI_DAY AS ${_asPrefix}NOTI_DAY, ${_alias}PAY_DAY AS ${_asPrefix}PAY_DAY, ${_alias}PAY_METHOD AS ${_asPrefix}PAY_METHOD, ${_alias}CONTRACT_DATE AS ${_asPrefix}CONTRACT_DATE, ${_alias}WRITE_DATE AS ${_asPrefix}WRITE_DATE, ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}MEMBER_NAME AS ${_asPrefix}MEMBER_NAME, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}FORM_SEQ, ${_alias}CUST_ID, ${_alias}CUST_NAME, ${_alias}CUST_LEVEL_DIV, ${_alias}CUST_GUBUN_DIV, ${_alias}MANAGE_NO, ${_alias}BIRTH_DATE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPT_ID, ${_alias}DEPT_NAME, ${_alias}DEPT_DIV, ${_alias}OWNER_NAME, ${_alias}DEPT_PHONE, ${_alias}DEPT_ADDR, ${_alias}PRO_NAME, ${_alias}RELATION_DIV, ${_alias}PRO_BIRTH_DATE, ${_alias}PRO_PHONE, ${_alias}PRO_HP, ${_alias}PRO_ZIP_CODE, ${_alias}PRO_ADDR1, ${_alias}PRO_ADDR2, ${_alias}FROM_DATE, ${_alias}TO_DATE, ${_alias}WRITE_DAY, ${_alias}CALC_DAY, ${_alias}NOTI_DAY, ${_alias}PAY_DAY, ${_alias}PAY_METHOD, ${_alias}CONTRACT_DATE, ${_alias}WRITE_DATE, ${_alias}MEMBER_ID, ${_alias}MEMBER_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}CUST_LEVEL_DIV AS ${_asPrefix}CUST_LEVEL_DIV, ${_alias}CUST_GUBUN_DIV AS ${_asPrefix}CUST_GUBUN_DIV, ${_alias}MANAGE_NO AS ${_asPrefix}MANAGE_NO, ${_alias}BIRTH_DATE AS ${_asPrefix}BIRTH_DATE, ${_alias}PHONE AS ${_asPrefix}PHONE, ${_alias}ZIP_CODE AS ${_asPrefix}ZIP_CODE, ${_alias}ADDR1 AS ${_asPrefix}ADDR1, ${_alias}ADDR2 AS ${_asPrefix}ADDR2, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}DEPT_NAME AS ${_asPrefix}DEPT_NAME, ${_alias}DEPT_DIV AS ${_asPrefix}DEPT_DIV, ${_alias}OWNER_NAME AS ${_asPrefix}OWNER_NAME, ${_alias}DEPT_PHONE AS ${_asPrefix}DEPT_PHONE, ${_alias}DEPT_ADDR AS ${_asPrefix}DEPT_ADDR, ${_alias}PRO_NAME AS ${_asPrefix}PRO_NAME, ${_alias}RELATION_DIV AS ${_asPrefix}RELATION_DIV, ${_alias}PRO_BIRTH_DATE AS ${_asPrefix}PRO_BIRTH_DATE, ${_alias}PRO_PHONE AS ${_asPrefix}PRO_PHONE, ${_alias}PRO_HP AS ${_asPrefix}PRO_HP, ${_alias}PRO_ZIP_CODE AS ${_asPrefix}PRO_ZIP_CODE, ${_alias}PRO_ADDR1 AS ${_asPrefix}PRO_ADDR1, ${_alias}PRO_ADDR2 AS ${_asPrefix}PRO_ADDR2, ${_alias}FROM_DATE AS ${_asPrefix}FROM_DATE, ${_alias}TO_DATE AS ${_asPrefix}TO_DATE, ${_alias}WRITE_DAY AS ${_asPrefix}WRITE_DAY, ${_alias}CALC_DAY AS ${_asPrefix}CALC_DAY, ${_alias}NOTI_DAY AS ${_asPrefix}NOTI_DAY, ${_alias}PAY_DAY AS ${_asPrefix}PAY_DAY, ${_alias}PAY_METHOD AS ${_asPrefix}PAY_METHOD, ${_alias}CONTRACT_DATE AS ${_asPrefix}CONTRACT_DATE, ${_alias}WRITE_DATE AS ${_asPrefix}WRITE_DATE, ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}MEMBER_NAME AS ${_asPrefix}MEMBER_NAME, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}CUST_ID, ${_alias}CUST_NAME, ${_alias}CUST_LEVEL_DIV, ${_alias}CUST_GUBUN_DIV, ${_alias}MANAGE_NO, ${_alias}BIRTH_DATE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPT_ID, ${_alias}DEPT_NAME, ${_alias}DEPT_DIV, ${_alias}OWNER_NAME, ${_alias}DEPT_PHONE, ${_alias}DEPT_ADDR, ${_alias}PRO_NAME, ${_alias}RELATION_DIV, ${_alias}PRO_BIRTH_DATE, ${_alias}PRO_PHONE, ${_alias}PRO_HP, ${_alias}PRO_ZIP_CODE, ${_alias}PRO_ADDR1, ${_alias}PRO_ADDR2, ${_alias}FROM_DATE, ${_alias}TO_DATE, ${_alias}WRITE_DAY, ${_alias}CALC_DAY, ${_alias}NOTI_DAY, ${_alias}PAY_DAY, ${_alias}PAY_METHOD, ${_alias}CONTRACT_DATE, ${_alias}WRITE_DATE, ${_alias}MEMBER_ID, ${_alias}MEMBER_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}FORM_SEQ, ${_alias}CUST_ID, ${_alias}CUST_NAME, ${_alias}CUST_LEVEL_DIV, ${_alias}CUST_GUBUN_DIV, ${_alias}MANAGE_NO, ${_alias}BIRTH_DATE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPT_ID, ${_alias}DEPT_NAME, ${_alias}DEPT_DIV, ${_alias}OWNER_NAME, ${_alias}DEPT_PHONE, ${_alias}DEPT_ADDR, ${_alias}PRO_NAME, ${_alias}RELATION_DIV, ${_alias}PRO_BIRTH_DATE, ${_alias}PRO_PHONE, ${_alias}PRO_HP, ${_alias}PRO_ZIP_CODE, ${_alias}PRO_ADDR1, ${_alias}PRO_ADDR2, ${_alias}FROM_DATE, ${_alias}TO_DATE, ${_alias}WRITE_DAY, ${_alias}CALC_DAY, ${_alias}NOTI_DAY, ${_alias}PAY_DAY, ${_alias}PAY_METHOD, ${_alias}CONTRACT_DATE, ${_alias}WRITE_DATE, ${_alias}MEMBER_ID, ${_alias}MEMBER_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}CUST_ID, ${_alias}CUST_NAME, ${_alias}CUST_LEVEL_DIV, ${_alias}CUST_GUBUN_DIV, ${_alias}MANAGE_NO, ${_alias}BIRTH_DATE, ${_alias}PHONE, ${_alias}ZIP_CODE, ${_alias}ADDR1, ${_alias}ADDR2, ${_alias}DEPT_ID, ${_alias}DEPT_NAME, ${_alias}DEPT_DIV, ${_alias}OWNER_NAME, ${_alias}DEPT_PHONE, ${_alias}DEPT_ADDR, ${_alias}PRO_NAME, ${_alias}RELATION_DIV, ${_alias}PRO_BIRTH_DATE, ${_alias}PRO_PHONE, ${_alias}PRO_HP, ${_alias}PRO_ZIP_CODE, ${_alias}PRO_ADDR1, ${_alias}PRO_ADDR2, ${_alias}FROM_DATE, ${_alias}TO_DATE, ${_alias}WRITE_DAY, ${_alias}CALC_DAY, ${_alias}NOTI_DAY, ${_alias}PAY_DAY, ${_alias}PAY_METHOD, ${_alias}CONTRACT_DATE, ${_alias}WRITE_DATE, ${_alias}MEMBER_ID, ${_alias}MEMBER_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetFormContract" parameterType="long" resultMap="simpleFormContractResult_">
        /* com.neofect.gts.core.services.form.repository.FormContractRepository_.simpleGetFormContract */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.FORM_CONTRACT
        WHERE
        FORM_SEQ = #{id}
	</select>

    <select id="simpleListFormContractCnt" resultType="int">
        /* com.neofect.gts.core.services.form.repository.FormContractRepository_.simpleListFormContractCnt */

        SELECT COUNT(*)
        FROM GTS2016.FORM_CONTRACT
        <include refid="simpleFormContractCondition_" />
    </select>

    <select id="simpleListFormContract" resultMap="simpleFormContractResult_">
        /* com.neofect.gts.core.services.form.repository.FormContractRepository_.simpleListFormContract */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.FORM_CONTRACT
        <include refid="simpleFormContractCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="custId != null">
            ${_alias}CUST_ID = #{custId},
        </if>
        <if test="custName != null and custName != ''">
            ${_alias}CUST_NAME = #{custName},
        </if>
        <if test="custLevelDiv != null and custLevelDiv != ''">
            ${_alias}CUST_LEVEL_DIV = #{custLevelDiv},
        </if>
        <if test="custGubunDiv != null and custGubunDiv != ''">
            ${_alias}CUST_GUBUN_DIV = #{custGubunDiv},
        </if>
        <if test="manageNo != null and manageNo != ''">
            ${_alias}MANAGE_NO = #{manageNo},
        </if>
        <if test="birthDate != null and birthDate != ''">
            ${_alias}BIRTH_DATE = #{birthDate},
        </if>
        <if test="phone != null and phone != ''">
            ${_alias}PHONE = #{phone},
        </if>
        <if test="zipCode != null and zipCode != ''">
            ${_alias}ZIP_CODE = #{zipCode},
        </if>
        <if test="addr1 != null and addr1 != ''">
            ${_alias}ADDR1 = #{addr1},
        </if>
        <if test="addr2 != null and addr2 != ''">
            ${_alias}ADDR2 = #{addr2},
        </if>
        <if test="deptId != null and deptId != ''">
            ${_alias}DEPT_ID = #{deptId},
        </if>
        <if test="deptName != null and deptName != ''">
            ${_alias}DEPT_NAME = #{deptName},
        </if>
        <if test="deptDiv != null and deptDiv != ''">
            ${_alias}DEPT_DIV = #{deptDiv},
        </if>
        <if test="ownerName != null and ownerName != ''">
            ${_alias}OWNER_NAME = #{ownerName},
        </if>
        <if test="deptPhone != null and deptPhone != ''">
            ${_alias}DEPT_PHONE = #{deptPhone},
        </if>
        <if test="deptAddr != null and deptAddr != ''">
            ${_alias}DEPT_ADDR = #{deptAddr},
        </if>
        <if test="proName != null and proName != ''">
            ${_alias}PRO_NAME = #{proName},
        </if>
        <if test="relationDiv != null and relationDiv != ''">
            ${_alias}RELATION_DIV = #{relationDiv},
        </if>
        <if test="proBirthDate != null and proBirthDate != ''">
            ${_alias}PRO_BIRTH_DATE = #{proBirthDate},
        </if>
        <if test="proPhone != null and proPhone != ''">
            ${_alias}PRO_PHONE = #{proPhone},
        </if>
        <if test="proHp != null and proHp != ''">
            ${_alias}PRO_HP = #{proHp},
        </if>
        <if test="proZipCode != null and proZipCode != ''">
            ${_alias}PRO_ZIP_CODE = #{proZipCode},
        </if>
        <if test="proAddr1 != null and proAddr1 != ''">
            ${_alias}PRO_ADDR1 = #{proAddr1},
        </if>
        <if test="proAddr2 != null and proAddr2 != ''">
            ${_alias}PRO_ADDR2 = #{proAddr2},
        </if>
        <if test="fromDate != null and fromDate != ''">
            ${_alias}FROM_DATE = #{fromDate},
        </if>
        <if test="toDate != null and toDate != ''">
            ${_alias}TO_DATE = #{toDate},
        </if>
        <if test="writeDay != null">
            ${_alias}WRITE_DAY = #{writeDay},
        </if>
        <if test="calcDay != null">
            ${_alias}CALC_DAY = #{calcDay},
        </if>
        <if test="notiDay != null">
            ${_alias}NOTI_DAY = #{notiDay},
        </if>
        <if test="payDay != null">
            ${_alias}PAY_DAY = #{payDay},
        </if>
        <if test="payMethod != null and payMethod != ''">
            ${_alias}PAY_METHOD = #{payMethod},
        </if>
        <if test="contractDate != null and contractDate != ''">
            ${_alias}CONTRACT_DATE = #{contractDate},
        </if>
        <if test="writeDate != null and writeDate != ''">
            ${_alias}WRITE_DATE = #{writeDate},
        </if>
        <if test="memberId != null and memberId != ''">
            ${_alias}MEMBER_ID = #{memberId},
        </if>
        <if test="memberName != null and memberName != ''">
            ${_alias}MEMBER_NAME = #{memberName},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateFormContract" parameterType="com.neofect.gts.core.services.form.domain.FormContract">
        /* com.neofect.gts.core.services.form.repository.FormContractRepository_.updateFormContract */

        UPDATE GTS2016.FORM_CONTRACT
        SET
             CUST_ID = #{custId}
            , CUST_NAME = #{custName}
            , CUST_LEVEL_DIV = #{custLevelDiv}
            , CUST_GUBUN_DIV = #{custGubunDiv}
            , MANAGE_NO = #{manageNo}
            , BIRTH_DATE = #{birthDate}
            , PHONE = #{phone}
            , ZIP_CODE = #{zipCode}
            , ADDR1 = #{addr1}
            , ADDR2 = #{addr2}
            , DEPT_ID = #{deptId}
            , DEPT_NAME = #{deptName}
            , DEPT_DIV = #{deptDiv}
            , OWNER_NAME = #{ownerName}
            , DEPT_PHONE = #{deptPhone}
            , DEPT_ADDR = #{deptAddr}
            , PRO_NAME = #{proName}
            , RELATION_DIV = #{relationDiv}
            , PRO_BIRTH_DATE = #{proBirthDate}
            , PRO_PHONE = #{proPhone}
            , PRO_HP = #{proHp}
            , PRO_ZIP_CODE = #{proZipCode}
            , PRO_ADDR1 = #{proAddr1}
            , PRO_ADDR2 = #{proAddr2}
            , FROM_DATE = #{fromDate}
            , TO_DATE = #{toDate}
            , WRITE_DAY = #{writeDay}
            , CALC_DAY = #{calcDay}
            , NOTI_DAY = #{notiDay}
            , PAY_DAY = #{payDay}
            , PAY_METHOD = #{payMethod}
            , CONTRACT_DATE = #{contractDate}
            , WRITE_DATE = #{writeDate}
            , MEMBER_ID = #{memberId}
            , MEMBER_NAME = #{memberName}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            FORM_SEQ = #{id}
    </update>

    <update id="updateFormContractDynamic" parameterType="com.neofect.gts.core.services.form.domain.FormContract">
        /* com.neofect.gts.core.services.form.repository.FormContractRepository_.updateFormContractDynamic */

        UPDATE GTS2016.FORM_CONTRACT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            FORM_SEQ = #{id}
    </update>

    <delete id="deleteFormContract" parameterType="long">
        /* com.neofect.gts.core.services.form.repository.FormContractRepository_.deleteFormContract */

        DELETE FROM GTS2016.FORM_CONTRACT
        WHERE
            FORM_SEQ = #{id}
    </delete>

    <sql id="insert_values_">

        #{custId},
        #{custName},
        #{custLevelDiv},
        #{custGubunDiv},
        #{manageNo},
        #{birthDate},
        #{phone},
        #{zipCode},
        #{addr1},
        #{addr2},
        #{deptId},
        #{deptName},
        #{deptDiv},
        #{ownerName},
        #{deptPhone},
        #{deptAddr},
        #{proName},
        #{relationDiv},
        #{proBirthDate},
        #{proPhone},
        #{proHp},
        #{proZipCode},
        #{proAddr1},
        #{proAddr2},
        #{fromDate},
        #{toDate},
        #{writeDay},
        #{calcDay},
        #{notiDay},
        #{payDay},
        #{payMethod},
        #{contractDate},
        #{writeDate},
        #{memberId},
        #{memberName},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertFormContract">
        /* com.neofect.gts.core.services.form.repository.FormContractRepository_.insertFormContract */


        INSERT INTO GTS2016.FORM_CONTRACT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

