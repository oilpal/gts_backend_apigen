<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.lease.repository.LeaseContractRepository_">

    <resultMap id="simpleLeaseContractResult_" type="com.neofect.gts.core.services.lease.domain.LeaseContract">
        <!-- 지사ID -->
        <id     property="deptId" column="DEPT_ID"/>
        <!-- 임대계약ID -->
        <id     property="lId" column="L_ID"/>
        <!-- 대여구분 -->
        <result property="leaseDiv" column="LEASE_DIV"/>
        <!-- 요청처리지사ID -->
        <result property="pdeptId" column="PDEPT_ID"/>
        <!-- 고객ID -->
        <result property="custId" column="CUST_ID"/>
        <!-- 거래처코드 -->
        <result property="custCode" column="CUST_CODE"/>
        <!-- 거래처명 -->
        <result property="custName" column="CUST_NAME"/>
        <!-- 품목ID -->
        <result property="productId" column="PRODUCT_ID"/>
        <!-- 수량 -->
        <result property="qty" column="QTY"/>
        <!-- 단가 -->
        <result property="damt" column="DAMT"/>
        <!-- 금액 -->
        <result property="amt" column="AMT"/>
        <!-- 공급가액 -->
        <result property="supplyAmt" column="SUPPLY_AMT"/>
        <!-- 부가세액 -->
        <result property="vatAmt" column="VAT_AMT"/>
        <!-- 적요 -->
        <result property="remark" column="REMARK"/>
        <!-- 입고일 -->
        <result property="inDate" column="IN_DATE"/>
        <!-- 출고일 -->
        <result property="outDate" column="OUT_DATE"/>
        <!-- 서비스개시일 -->
        <result property="startDate" column="START_DATE"/>
        <!-- 서비스종료일 -->
        <result property="endDate" column="END_DATE"/>
        <!-- 반납일 -->
        <result property="returnDate" column="RETURN_DATE"/>
        <!-- 반납확인사번 -->
        <result property="mmemberId" column="MMEMBER_ID"/>
        <!-- 임대료지급기준 -->
        <result property="leasepayDiv" column="LEASEPAY_DIV"/>
        <!-- 임대료지급완료여부   Y 완료 -->
        <result property="leaspayYn" column="LEASPAY_YN"/>
        <!-- 요청서전표구분 -->
        <result property="eslipDiv" column="ESLIP_DIV"/>
        <!-- 요청서전표일자 -->
        <result property="eslipDate" column="ESLIP_DATE"/>
        <!-- 요청서지사ID -->
        <result property="edeptId" column="EDEPT_ID"/>
        <!-- 요청서전표번호 -->
        <result property="eslipSeq" column="ESLIP_SEQ"/>
        <!-- 요청서전표순번 -->
        <result property="eslipItem" column="ESLIP_ITEM"/>
        <!-- 임대생성품목ID -->
        <result property="lprodId" column="LPROD_ID"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleLeaseContractCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="lIds != null and !lIds.isEmpty()">
            AND ${_alias}L_ID IN <foreach collection="lIds" item="lIdValue" open="(" close=")" separator=",">#{ lIdValue }</foreach>
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="lId != null">
            AND ${_alias}L_ID = #{lId}
        </if>
        <if test="leaseDiv != null and leaseDiv != ''">
            AND ${_alias}LEASE_DIV = #{leaseDiv}
        </if>
        <if test="pdeptId != null and pdeptId != ''">
            AND ${_alias}PDEPT_ID = #{pdeptId}
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="custCode != null and custCode != ''">
            AND ${_alias}CUST_CODE = #{custCode}
        </if>
        <if test="custName != null and custName != ''">
            AND ${_alias}CUST_NAME = #{custName}
        </if>
        <if test="productId != null">
            AND ${_alias}PRODUCT_ID = #{productId}
        </if>
        <if test="qty != null">
            AND ${_alias}QTY = #{qty}
        </if>
        <if test="damt != null">
            AND ${_alias}DAMT = #{damt}
        </if>
        <if test="amt != null">
            AND ${_alias}AMT = #{amt}
        </if>
        <if test="supplyAmt != null">
            AND ${_alias}SUPPLY_AMT = #{supplyAmt}
        </if>
        <if test="vatAmt != null">
            AND ${_alias}VAT_AMT = #{vatAmt}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="inDate != null and inDate.enabled == true">
            <if test="inDate.from != null and inDate.from != ''">
            AND ${_alias}IN_DATE >= TO_DATE(#{inDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="inDate.to != null and inDate.to != ''">
            AND ${_alias}IN_DATE <![CDATA[ < ]]> TO_DATE(#{inDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="outDate != null and outDate.enabled == true">
            <if test="outDate.from != null and outDate.from != ''">
            AND ${_alias}OUT_DATE >= TO_DATE(#{outDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="outDate.to != null and outDate.to != ''">
            AND ${_alias}OUT_DATE <![CDATA[ < ]]> TO_DATE(#{outDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="startDate != null and startDate.enabled == true">
            <if test="startDate.from != null and startDate.from != ''">
            AND ${_alias}START_DATE >= TO_DATE(#{startDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="startDate.to != null and startDate.to != ''">
            AND ${_alias}START_DATE <![CDATA[ < ]]> TO_DATE(#{startDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="endDate != null and endDate.enabled == true">
            <if test="endDate.from != null and endDate.from != ''">
            AND ${_alias}END_DATE >= TO_DATE(#{endDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="endDate.to != null and endDate.to != ''">
            AND ${_alias}END_DATE <![CDATA[ < ]]> TO_DATE(#{endDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="returnDate != null and returnDate.enabled == true">
            <if test="returnDate.from != null and returnDate.from != ''">
            AND ${_alias}RETURN_DATE >= TO_DATE(#{returnDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="returnDate.to != null and returnDate.to != ''">
            AND ${_alias}RETURN_DATE <![CDATA[ < ]]> TO_DATE(#{returnDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="mmemberId != null and mmemberId != ''">
            AND ${_alias}MMEMBER_ID = #{mmemberId}
        </if>
        <if test="leasepayDiv != null and leasepayDiv != ''">
            AND ${_alias}LEASEPAY_DIV = #{leasepayDiv}
        </if>
        <if test="leaspayYn != null and leaspayYn != ''">
            AND ${_alias}LEASPAY_YN = #{leaspayYn}
        </if>
        <if test="eslipDiv != null and eslipDiv != ''">
            AND ${_alias}ESLIP_DIV = #{eslipDiv}
        </if>
        <if test="eslipDate != null and eslipDate.enabled == true">
            <if test="eslipDate.from != null and eslipDate.from != ''">
            AND ${_alias}ESLIP_DATE >= TO_DATE(#{eslipDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="eslipDate.to != null and eslipDate.to != ''">
            AND ${_alias}ESLIP_DATE <![CDATA[ < ]]> TO_DATE(#{eslipDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="edeptId != null and edeptId != ''">
            AND ${_alias}EDEPT_ID = #{edeptId}
        </if>
        <if test="eslipSeq != null">
            AND ${_alias}ESLIP_SEQ = #{eslipSeq}
        </if>
        <if test="eslipItem != null">
            AND ${_alias}ESLIP_ITEM = #{eslipItem}
        </if>
        <if test="lprodId != null">
            AND ${_alias}LPROD_ID = #{lprodId}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}L_ID AS ${_asPrefix}L_ID, ${_alias}LEASE_DIV AS ${_asPrefix}LEASE_DIV, ${_alias}PDEPT_ID AS ${_asPrefix}PDEPT_ID, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}QTY AS ${_asPrefix}QTY, ${_alias}DAMT AS ${_asPrefix}DAMT, ${_alias}AMT AS ${_asPrefix}AMT, ${_alias}SUPPLY_AMT AS ${_asPrefix}SUPPLY_AMT, ${_alias}VAT_AMT AS ${_asPrefix}VAT_AMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}IN_DATE AS ${_asPrefix}IN_DATE, ${_alias}OUT_DATE AS ${_asPrefix}OUT_DATE, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}RETURN_DATE AS ${_asPrefix}RETURN_DATE, ${_alias}MMEMBER_ID AS ${_asPrefix}MMEMBER_ID, ${_alias}LEASEPAY_DIV AS ${_asPrefix}LEASEPAY_DIV, ${_alias}LEASPAY_YN AS ${_asPrefix}LEASPAY_YN, ${_alias}ESLIP_DIV AS ${_asPrefix}ESLIP_DIV, ${_alias}ESLIP_DATE AS ${_asPrefix}ESLIP_DATE, ${_alias}EDEPT_ID AS ${_asPrefix}EDEPT_ID, ${_alias}ESLIP_SEQ AS ${_asPrefix}ESLIP_SEQ, ${_alias}ESLIP_ITEM AS ${_asPrefix}ESLIP_ITEM, ${_alias}LPROD_ID AS ${_asPrefix}LPROD_ID, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}DEPT_ID, ${_alias}L_ID, ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}IN_DATE, ${_alias}OUT_DATE, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}ESLIP_DIV, ${_alias}ESLIP_DATE, ${_alias}EDEPT_ID, ${_alias}ESLIP_SEQ, ${_alias}ESLIP_ITEM, ${_alias}LPROD_ID, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}LEASE_DIV AS ${_asPrefix}LEASE_DIV, ${_alias}PDEPT_ID AS ${_asPrefix}PDEPT_ID, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}QTY AS ${_asPrefix}QTY, ${_alias}DAMT AS ${_asPrefix}DAMT, ${_alias}AMT AS ${_asPrefix}AMT, ${_alias}SUPPLY_AMT AS ${_asPrefix}SUPPLY_AMT, ${_alias}VAT_AMT AS ${_asPrefix}VAT_AMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}IN_DATE AS ${_asPrefix}IN_DATE, ${_alias}OUT_DATE AS ${_asPrefix}OUT_DATE, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}RETURN_DATE AS ${_asPrefix}RETURN_DATE, ${_alias}MMEMBER_ID AS ${_asPrefix}MMEMBER_ID, ${_alias}LEASEPAY_DIV AS ${_asPrefix}LEASEPAY_DIV, ${_alias}LEASPAY_YN AS ${_asPrefix}LEASPAY_YN, ${_alias}ESLIP_DIV AS ${_asPrefix}ESLIP_DIV, ${_alias}ESLIP_DATE AS ${_asPrefix}ESLIP_DATE, ${_alias}EDEPT_ID AS ${_asPrefix}EDEPT_ID, ${_alias}ESLIP_SEQ AS ${_asPrefix}ESLIP_SEQ, ${_alias}ESLIP_ITEM AS ${_asPrefix}ESLIP_ITEM, ${_alias}LPROD_ID AS ${_asPrefix}LPROD_ID, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}IN_DATE, ${_alias}OUT_DATE, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}ESLIP_DIV, ${_alias}ESLIP_DATE, ${_alias}EDEPT_ID, ${_alias}ESLIP_SEQ, ${_alias}ESLIP_ITEM, ${_alias}LPROD_ID, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}DEPT_ID, ${_alias}L_ID, ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}IN_DATE, ${_alias}OUT_DATE, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}ESLIP_DIV, ${_alias}ESLIP_DATE, ${_alias}EDEPT_ID, ${_alias}ESLIP_SEQ, ${_alias}ESLIP_ITEM, ${_alias}LPROD_ID, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}IN_DATE, ${_alias}OUT_DATE, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}ESLIP_DIV, ${_alias}ESLIP_DATE, ${_alias}EDEPT_ID, ${_alias}ESLIP_SEQ, ${_alias}ESLIP_ITEM, ${_alias}LPROD_ID, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetLeaseContract" parameterType="long" resultMap="simpleLeaseContractResult_">
        /* com.neofect.gts.core.services.lease.repository.LeaseContractRepository_.simpleGetLeaseContract */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.LEASE_CONTRACT
        WHERE
        DEPT_ID = #{deptId}
        AND L_ID = #{lId}
	</select>

    <select id="simpleListLeaseContractCnt" resultType="int">
        /* com.neofect.gts.core.services.lease.repository.LeaseContractRepository_.simpleListLeaseContractCnt */

        SELECT COUNT(*)
        FROM GTS2016.LEASE_CONTRACT
        <include refid="simpleLeaseContractCondition_" />
    </select>

    <select id="simpleListLeaseContract" resultMap="simpleLeaseContractResult_">
        /* com.neofect.gts.core.services.lease.repository.LeaseContractRepository_.simpleListLeaseContract */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.LEASE_CONTRACT
        <include refid="simpleLeaseContractCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="leaseDiv != null and leaseDiv != ''">
            ${_alias}LEASE_DIV = #{leaseDiv},
        </if>
        <if test="pdeptId != null and pdeptId != ''">
            ${_alias}PDEPT_ID = #{pdeptId},
        </if>
        <if test="custId != null">
            ${_alias}CUST_ID = #{custId},
        </if>
        <if test="custCode != null and custCode != ''">
            ${_alias}CUST_CODE = #{custCode},
        </if>
        <if test="custName != null and custName != ''">
            ${_alias}CUST_NAME = #{custName},
        </if>
        <if test="productId != null">
            ${_alias}PRODUCT_ID = #{productId},
        </if>
        <if test="qty != null">
            ${_alias}QTY = #{qty},
        </if>
        <if test="damt != null">
            ${_alias}DAMT = #{damt},
        </if>
        <if test="amt != null">
            ${_alias}AMT = #{amt},
        </if>
        <if test="supplyAmt != null">
            ${_alias}SUPPLY_AMT = #{supplyAmt},
        </if>
        <if test="vatAmt != null">
            ${_alias}VAT_AMT = #{vatAmt},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="inDate != null">
            ${_alias}IN_DATE = #{inDate},
        </if>
        <if test="outDate != null">
            ${_alias}OUT_DATE = #{outDate},
        </if>
        <if test="startDate != null">
            ${_alias}START_DATE = #{startDate},
        </if>
        <if test="endDate != null">
            ${_alias}END_DATE = #{endDate},
        </if>
        <if test="returnDate != null">
            ${_alias}RETURN_DATE = #{returnDate},
        </if>
        <if test="mmemberId != null and mmemberId != ''">
            ${_alias}MMEMBER_ID = #{mmemberId},
        </if>
        <if test="leasepayDiv != null and leasepayDiv != ''">
            ${_alias}LEASEPAY_DIV = #{leasepayDiv},
        </if>
        <if test="leaspayYn != null and leaspayYn != ''">
            ${_alias}LEASPAY_YN = #{leaspayYn},
        </if>
        <if test="eslipDiv != null and eslipDiv != ''">
            ${_alias}ESLIP_DIV = #{eslipDiv},
        </if>
        <if test="eslipDate != null">
            ${_alias}ESLIP_DATE = #{eslipDate},
        </if>
        <if test="edeptId != null and edeptId != ''">
            ${_alias}EDEPT_ID = #{edeptId},
        </if>
        <if test="eslipSeq != null">
            ${_alias}ESLIP_SEQ = #{eslipSeq},
        </if>
        <if test="eslipItem != null">
            ${_alias}ESLIP_ITEM = #{eslipItem},
        </if>
        <if test="lprodId != null">
            ${_alias}LPROD_ID = #{lprodId},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateLeaseContract" parameterType="com.neofect.gts.core.services.lease.domain.LeaseContract">
        /* com.neofect.gts.core.services.lease.repository.LeaseContractRepository_.updateLeaseContract */

        UPDATE GTS2016.LEASE_CONTRACT
        SET
             LEASE_DIV = #{leaseDiv}
            , PDEPT_ID = #{pdeptId}
            , CUST_ID = #{custId}
            , CUST_CODE = #{custCode}
            , CUST_NAME = #{custName}
            , PRODUCT_ID = #{productId}
            , QTY = #{qty}
            , DAMT = #{damt}
            , AMT = #{amt}
            , SUPPLY_AMT = #{supplyAmt}
            , VAT_AMT = #{vatAmt}
            , REMARK = #{remark}
            , IN_DATE = #{inDate}
            , OUT_DATE = #{outDate}
            , START_DATE = #{startDate}
            , END_DATE = #{endDate}
            , RETURN_DATE = #{returnDate}
            , MMEMBER_ID = #{mmemberId}
            , LEASEPAY_DIV = #{leasepayDiv}
            , LEASPAY_YN = #{leaspayYn}
            , ESLIP_DIV = #{eslipDiv}
            , ESLIP_DATE = #{eslipDate}
            , EDEPT_ID = #{edeptId}
            , ESLIP_SEQ = #{eslipSeq}
            , ESLIP_ITEM = #{eslipItem}
            , LPROD_ID = #{lprodId}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            DEPT_ID = #{deptId}
            AND L_ID = #{lId}
    </update>

    <update id="updateLeaseContractDynamic" parameterType="com.neofect.gts.core.services.lease.domain.LeaseContract">
        /* com.neofect.gts.core.services.lease.repository.LeaseContractRepository_.updateLeaseContractDynamic */

        UPDATE GTS2016.LEASE_CONTRACT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            DEPT_ID = #{deptId}
            AND L_ID = #{lId}
    </update>

    <delete id="deleteLeaseContract" parameterType="long">
        /* com.neofect.gts.core.services.lease.repository.LeaseContractRepository_.deleteLeaseContract */

        DELETE FROM GTS2016.LEASE_CONTRACT
        WHERE
            DEPT_ID = #{deptId}
            AND L_ID = #{lId}
    </delete>

    <sql id="insert_values_">

        #{leaseDiv},
        #{pdeptId},
        #{custId},
        #{custCode},
        #{custName},
        #{productId},
        #{qty},
        #{damt},
        #{amt},
        #{supplyAmt},
        #{vatAmt},
        #{remark},
        #{inDate},
        #{outDate},
        #{startDate},
        #{endDate},
        #{returnDate},
        #{mmemberId},
        #{leasepayDiv},
        #{leaspayYn},
        #{eslipDiv},
        #{eslipDate},
        #{edeptId},
        #{eslipSeq},
        #{eslipItem},
        #{lprodId},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertLeaseContract">
        /* com.neofect.gts.core.services.lease.repository.LeaseContractRepository_.insertLeaseContract */


        INSERT INTO GTS2016.LEASE_CONTRACT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

