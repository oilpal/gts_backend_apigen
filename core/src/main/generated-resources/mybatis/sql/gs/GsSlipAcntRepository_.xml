<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_">

    <resultMap id="simpleGsSlipAcntResult_" type="com.neofect.gts.core.services.gs.domain.GsSlipAcnt">
        
        <id     property="id" column="ACNT_CODE"/>
        
        <result property="acntName" column="ACNT_NAME"/>
        
        <result property="acntDiv" column="ACNT_DIV"/>
        
        <result property="acntDivName" column="ACNT_DIV_NAME"/>
        
        <result property="useYn" column="USE_YN"/>
        
        <result property="remark" column="REMARK"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        
        <result property="inputYn" column="INPUT_YN"/>
        <!-- 내용 -->
        <result property="description" column="DESCRIPTION"/>
        <!-- 정렬코드 -->
        <result property="sortCode" column="SORT_CODE"/>
        <!-- 예정 전월집계 사용계정 -->
        <result property="preYn" column="PRE_YN"/>
    </resultMap>

    <sql id="simpleGsSlipAcntCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}ACNT_CODE IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null and id != ''">
            AND ${_alias}ACNT_CODE = #{id}
        </if>
        <if test="acntName != null and acntName != ''">
            AND ${_alias}ACNT_NAME = #{acntName}
        </if>
        <if test="acntDiv != null and acntDiv != ''">
            AND ${_alias}ACNT_DIV = #{acntDiv}
        </if>
        <if test="acntDivName != null and acntDivName != ''">
            AND ${_alias}ACNT_DIV_NAME = #{acntDivName}
        </if>
        <if test="useYn != null and useYn != ''">
            AND ${_alias}USE_YN = #{useYn}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate.enabled == true">
            <if test="rowUpdateDate.from != null and rowUpdateDate.from != ''">
            AND ${_alias}ROW_UPDATE_DATE >= TO_DATE(#{rowUpdateDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowUpdateDate.to != null and rowUpdateDate.to != ''">
            AND ${_alias}ROW_UPDATE_DATE <![CDATA[ < ]]> TO_DATE(#{rowUpdateDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="inputYn != null and inputYn != ''">
            AND ${_alias}INPUT_YN = #{inputYn}
        </if>
        <if test="description != null and description != ''">
            AND ${_alias}DESCRIPTION = #{description}
        </if>
        <if test="sortCode != null and sortCode != ''">
            AND ${_alias}SORT_CODE = #{sortCode}
        </if>
        <if test="preYn != null and preYn != ''">
            AND ${_alias}PRE_YN = #{preYn}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ACNT_CODE AS ${_asPrefix}ACNT_CODE, ${_alias}ACNT_NAME AS ${_asPrefix}ACNT_NAME, ${_alias}ACNT_DIV AS ${_asPrefix}ACNT_DIV, ${_alias}ACNT_DIV_NAME AS ${_asPrefix}ACNT_DIV_NAME, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}INPUT_YN AS ${_asPrefix}INPUT_YN, ${_alias}DESCRIPTION AS ${_asPrefix}DESCRIPTION, ${_alias}SORT_CODE AS ${_asPrefix}SORT_CODE, ${_alias}PRE_YN AS ${_asPrefix}PRE_YN        </when>
        <otherwise>
            ${_alias}ACNT_CODE, ${_alias}ACNT_NAME, ${_alias}ACNT_DIV, ${_alias}ACNT_DIV_NAME, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}INPUT_YN, ${_alias}DESCRIPTION, ${_alias}SORT_CODE, ${_alias}PRE_YN        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}ACNT_NAME AS ${_asPrefix}ACNT_NAME, ${_alias}ACNT_DIV AS ${_asPrefix}ACNT_DIV, ${_alias}ACNT_DIV_NAME AS ${_asPrefix}ACNT_DIV_NAME, ${_alias}USE_YN AS ${_asPrefix}USE_YN, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}INPUT_YN AS ${_asPrefix}INPUT_YN, ${_alias}DESCRIPTION AS ${_asPrefix}DESCRIPTION, ${_alias}SORT_CODE AS ${_asPrefix}SORT_CODE, ${_alias}PRE_YN AS ${_asPrefix}PRE_YN        </when>
        <otherwise>
            ${_alias}ACNT_NAME, ${_alias}ACNT_DIV, ${_alias}ACNT_DIV_NAME, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}INPUT_YN, ${_alias}DESCRIPTION, ${_alias}SORT_CODE, ${_alias}PRE_YN        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}ACNT_CODE, ${_alias}ACNT_NAME, ${_alias}ACNT_DIV, ${_alias}ACNT_DIV_NAME, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}INPUT_YN, ${_alias}DESCRIPTION, ${_alias}SORT_CODE, ${_alias}PRE_YN    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}ACNT_NAME, ${_alias}ACNT_DIV, ${_alias}ACNT_DIV_NAME, ${_alias}USE_YN, ${_alias}REMARK, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}INPUT_YN, ${_alias}DESCRIPTION, ${_alias}SORT_CODE, ${_alias}PRE_YN    </sql>

    <select id="simpleGetGsSlipAcnt" parameterType="long" resultMap="simpleGsSlipAcntResult_">
        /* com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_.simpleGetGsSlipAcnt */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.GS_SLIP_ACNT
        WHERE
        ACNT_CODE = #{id}
	</select>

    <select id="simpleListGsSlipAcntCnt" resultType="int">
        /* com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_.simpleListGsSlipAcntCnt */

        SELECT COUNT(*)
        FROM GTS2016.GS_SLIP_ACNT
        <include refid="simpleGsSlipAcntCondition_" />
    </select>

    <select id="simpleListGsSlipAcnt" resultMap="simpleGsSlipAcntResult_">
        /* com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_.simpleListGsSlipAcnt */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.GS_SLIP_ACNT
        <include refid="simpleGsSlipAcntCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="acntName != null and acntName != ''">
            ${_alias}ACNT_NAME = #{acntName},
        </if>
        <if test="acntDiv != null and acntDiv != ''">
            ${_alias}ACNT_DIV = #{acntDiv},
        </if>
        <if test="acntDivName != null and acntDivName != ''">
            ${_alias}ACNT_DIV_NAME = #{acntDivName},
        </if>
        <if test="useYn != null and useYn != ''">
            ${_alias}USE_YN = #{useYn},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="inputYn != null and inputYn != ''">
            ${_alias}INPUT_YN = #{inputYn},
        </if>
        <if test="description != null and description != ''">
            ${_alias}DESCRIPTION = #{description},
        </if>
        <if test="sortCode != null and sortCode != ''">
            ${_alias}SORT_CODE = #{sortCode},
        </if>
        <if test="preYn != null and preYn != ''">
            ${_alias}PRE_YN = #{preYn},
        </if>
    </sql>

    <update id="updateGsSlipAcnt" parameterType="com.neofect.gts.core.services.gs.domain.GsSlipAcnt">
        /* com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_.updateGsSlipAcnt */

        UPDATE GTS2016.GS_SLIP_ACNT
        SET
             ACNT_NAME = #{acntName}
            , ACNT_DIV = #{acntDiv}
            , ACNT_DIV_NAME = #{acntDivName}
            , USE_YN = #{useYn}
            , REMARK = #{remark}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , INPUT_YN = #{inputYn}
            , DESCRIPTION = #{description}
            , SORT_CODE = #{sortCode}
            , PRE_YN = #{preYn}
        WHERE
            ACNT_CODE = #{id}
    </update>

    <update id="updateGsSlipAcntDynamic" parameterType="com.neofect.gts.core.services.gs.domain.GsSlipAcnt">
        /* com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_.updateGsSlipAcntDynamic */

        UPDATE GTS2016.GS_SLIP_ACNT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            ACNT_CODE = #{id}
    </update>

    <delete id="deleteGsSlipAcnt" parameterType="long">
        /* com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_.deleteGsSlipAcnt */

        DELETE FROM GTS2016.GS_SLIP_ACNT
        WHERE
            ACNT_CODE = #{id}
    </delete>

    <sql id="insert_values_">

        #{acntName},
        #{acntDiv},
        #{acntDivName},
        #{useYn},
        #{remark},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{inputYn},
        #{description},
        #{sortCode},
        #{preYn}
    </sql>

    <insert id="insertGsSlipAcnt">
        /* com.neofect.gts.core.services.gs.repository.GsSlipAcntRepository_.insertGsSlipAcnt */


        INSERT INTO GTS2016.GS_SLIP_ACNT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

