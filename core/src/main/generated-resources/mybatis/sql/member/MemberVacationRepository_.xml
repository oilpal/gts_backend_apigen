<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.member.repository.MemberVacationRepository_">

    <resultMap id="simpleMemberVacationResult_" type="com.neofect.gts.core.services.member.domain.MemberVacation">
        <!-- 휴가원 ID -->
        <id     property="id" column="VACATION_ID"/>
        <!-- 사원번호 -->
        <result property="memberId" column="MEMBER_ID"/>
        <!-- 휴가년도 -->
        <result property="year" column="YEAR"/>
        <!-- 승인여부 -->
        <result property="okYn" column="OK_YN"/>
        <!-- 부서명 -->
        <result property="deptName" column="DEPT_NAME"/>
        <!-- 직급명 -->
        <result property="gubunDivName" column="GUBUN_DIV_NAME"/>
        <!-- 휴가종류 -->
        <result property="vacationDiv" column="VACATION_DIV"/>
        <!-- 휴가종류 명칭 -->
        <result property="vacationDivName" column="VACATION_DIV_NAME"/>
        <!-- 휴가사유 -->
        <result property="vacationReason" column="VACATION_REASON"/>
        <!-- 휴가기간 -->
        <result property="vacationPeriod" column="VACATION_PERIOD"/>
        <!-- 휴가일수 합계 -->
        <result property="vacationTotalDays" column="VACATION_TOTAL_DAYS"/>
        <!-- 비상연락처 -->
        <result property="emergencyTel" column="EMERGENCY_TEL"/>
        <!-- 업무 대리인 -->
        <result property="proxyMemberId" column="PROXY_MEMBER_ID"/>
        <!-- 신청일자 -->
        <result property="applyDate" column="APPLY_DATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleMemberVacationCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}VACATION_ID IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}VACATION_ID = #{id}
        </if>
        <if test="memberId != null and memberId != ''">
            AND ${_alias}MEMBER_ID = #{memberId}
        </if>
        <if test="year != null and year != ''">
            AND ${_alias}YEAR = #{year}
        </if>
        <if test="okYn != null and okYn != ''">
            AND ${_alias}OK_YN = #{okYn}
        </if>
        <if test="deptName != null and deptName != ''">
            AND ${_alias}DEPT_NAME = #{deptName}
        </if>
        <if test="gubunDivName != null and gubunDivName != ''">
            AND ${_alias}GUBUN_DIV_NAME = #{gubunDivName}
        </if>
        <if test="vacationDiv != null and vacationDiv != ''">
            AND ${_alias}VACATION_DIV = #{vacationDiv}
        </if>
        <if test="vacationDivName != null and vacationDivName != ''">
            AND ${_alias}VACATION_DIV_NAME = #{vacationDivName}
        </if>
        <if test="vacationReason != null and vacationReason != ''">
            AND ${_alias}VACATION_REASON = #{vacationReason}
        </if>
        <if test="vacationPeriod != null and vacationPeriod != ''">
            AND ${_alias}VACATION_PERIOD = #{vacationPeriod}
        </if>
        <if test="vacationTotalDays != null">
            AND ${_alias}VACATION_TOTAL_DAYS = #{vacationTotalDays}
        </if>
        <if test="emergencyTel != null and emergencyTel != ''">
            AND ${_alias}EMERGENCY_TEL = #{emergencyTel}
        </if>
        <if test="proxyMemberId != null and proxyMemberId != ''">
            AND ${_alias}PROXY_MEMBER_ID = #{proxyMemberId}
        </if>
        <if test="applyDate != null and applyDate.enabled == true">
            <if test="applyDate.from != null and applyDate.from != ''">
            AND ${_alias}APPLY_DATE >= TO_DATE(#{applyDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="applyDate.to != null and applyDate.to != ''">
            AND ${_alias}APPLY_DATE <![CDATA[ < ]]> TO_DATE(#{applyDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}VACATION_ID AS ${_asPrefix}VACATION_ID, ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}YEAR AS ${_asPrefix}YEAR, ${_alias}OK_YN AS ${_asPrefix}OK_YN, ${_alias}DEPT_NAME AS ${_asPrefix}DEPT_NAME, ${_alias}GUBUN_DIV_NAME AS ${_asPrefix}GUBUN_DIV_NAME, ${_alias}VACATION_DIV AS ${_asPrefix}VACATION_DIV, ${_alias}VACATION_DIV_NAME AS ${_asPrefix}VACATION_DIV_NAME, ${_alias}VACATION_REASON AS ${_asPrefix}VACATION_REASON, ${_alias}VACATION_PERIOD AS ${_asPrefix}VACATION_PERIOD, ${_alias}VACATION_TOTAL_DAYS AS ${_asPrefix}VACATION_TOTAL_DAYS, ${_alias}EMERGENCY_TEL AS ${_asPrefix}EMERGENCY_TEL, ${_alias}PROXY_MEMBER_ID AS ${_asPrefix}PROXY_MEMBER_ID, ${_alias}APPLY_DATE AS ${_asPrefix}APPLY_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}VACATION_ID, ${_alias}MEMBER_ID, ${_alias}YEAR, ${_alias}OK_YN, ${_alias}DEPT_NAME, ${_alias}GUBUN_DIV_NAME, ${_alias}VACATION_DIV, ${_alias}VACATION_DIV_NAME, ${_alias}VACATION_REASON, ${_alias}VACATION_PERIOD, ${_alias}VACATION_TOTAL_DAYS, ${_alias}EMERGENCY_TEL, ${_alias}PROXY_MEMBER_ID, ${_alias}APPLY_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}YEAR AS ${_asPrefix}YEAR, ${_alias}OK_YN AS ${_asPrefix}OK_YN, ${_alias}DEPT_NAME AS ${_asPrefix}DEPT_NAME, ${_alias}GUBUN_DIV_NAME AS ${_asPrefix}GUBUN_DIV_NAME, ${_alias}VACATION_DIV AS ${_asPrefix}VACATION_DIV, ${_alias}VACATION_DIV_NAME AS ${_asPrefix}VACATION_DIV_NAME, ${_alias}VACATION_REASON AS ${_asPrefix}VACATION_REASON, ${_alias}VACATION_PERIOD AS ${_asPrefix}VACATION_PERIOD, ${_alias}VACATION_TOTAL_DAYS AS ${_asPrefix}VACATION_TOTAL_DAYS, ${_alias}EMERGENCY_TEL AS ${_asPrefix}EMERGENCY_TEL, ${_alias}PROXY_MEMBER_ID AS ${_asPrefix}PROXY_MEMBER_ID, ${_alias}APPLY_DATE AS ${_asPrefix}APPLY_DATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}MEMBER_ID, ${_alias}YEAR, ${_alias}OK_YN, ${_alias}DEPT_NAME, ${_alias}GUBUN_DIV_NAME, ${_alias}VACATION_DIV, ${_alias}VACATION_DIV_NAME, ${_alias}VACATION_REASON, ${_alias}VACATION_PERIOD, ${_alias}VACATION_TOTAL_DAYS, ${_alias}EMERGENCY_TEL, ${_alias}PROXY_MEMBER_ID, ${_alias}APPLY_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}VACATION_ID, ${_alias}MEMBER_ID, ${_alias}YEAR, ${_alias}OK_YN, ${_alias}DEPT_NAME, ${_alias}GUBUN_DIV_NAME, ${_alias}VACATION_DIV, ${_alias}VACATION_DIV_NAME, ${_alias}VACATION_REASON, ${_alias}VACATION_PERIOD, ${_alias}VACATION_TOTAL_DAYS, ${_alias}EMERGENCY_TEL, ${_alias}PROXY_MEMBER_ID, ${_alias}APPLY_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}MEMBER_ID, ${_alias}YEAR, ${_alias}OK_YN, ${_alias}DEPT_NAME, ${_alias}GUBUN_DIV_NAME, ${_alias}VACATION_DIV, ${_alias}VACATION_DIV_NAME, ${_alias}VACATION_REASON, ${_alias}VACATION_PERIOD, ${_alias}VACATION_TOTAL_DAYS, ${_alias}EMERGENCY_TEL, ${_alias}PROXY_MEMBER_ID, ${_alias}APPLY_DATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetMemberVacation" parameterType="long" resultMap="simpleMemberVacationResult_">
        /* com.neofect.gts.core.services.member.repository.MemberVacationRepository_.simpleGetMemberVacation */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.MEMBER_VACATION
        WHERE
        VACATION_ID = #{id}
	</select>

    <select id="simpleListMemberVacationCnt" resultType="int">
        /* com.neofect.gts.core.services.member.repository.MemberVacationRepository_.simpleListMemberVacationCnt */

        SELECT COUNT(*)
        FROM GTS2016.MEMBER_VACATION
        <include refid="simpleMemberVacationCondition_" />
    </select>

    <select id="simpleListMemberVacation" resultMap="simpleMemberVacationResult_">
        /* com.neofect.gts.core.services.member.repository.MemberVacationRepository_.simpleListMemberVacation */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.MEMBER_VACATION
        <include refid="simpleMemberVacationCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="memberId != null and memberId != ''">
            ${_alias}MEMBER_ID = #{memberId},
        </if>
        <if test="year != null and year != ''">
            ${_alias}YEAR = #{year},
        </if>
        <if test="okYn != null and okYn != ''">
            ${_alias}OK_YN = #{okYn},
        </if>
        <if test="deptName != null and deptName != ''">
            ${_alias}DEPT_NAME = #{deptName},
        </if>
        <if test="gubunDivName != null and gubunDivName != ''">
            ${_alias}GUBUN_DIV_NAME = #{gubunDivName},
        </if>
        <if test="vacationDiv != null and vacationDiv != ''">
            ${_alias}VACATION_DIV = #{vacationDiv},
        </if>
        <if test="vacationDivName != null and vacationDivName != ''">
            ${_alias}VACATION_DIV_NAME = #{vacationDivName},
        </if>
        <if test="vacationReason != null and vacationReason != ''">
            ${_alias}VACATION_REASON = #{vacationReason},
        </if>
        <if test="vacationPeriod != null and vacationPeriod != ''">
            ${_alias}VACATION_PERIOD = #{vacationPeriod},
        </if>
        <if test="vacationTotalDays != null">
            ${_alias}VACATION_TOTAL_DAYS = #{vacationTotalDays},
        </if>
        <if test="emergencyTel != null and emergencyTel != ''">
            ${_alias}EMERGENCY_TEL = #{emergencyTel},
        </if>
        <if test="proxyMemberId != null and proxyMemberId != ''">
            ${_alias}PROXY_MEMBER_ID = #{proxyMemberId},
        </if>
        <if test="applyDate != null">
            ${_alias}APPLY_DATE = #{applyDate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateMemberVacation" parameterType="com.neofect.gts.core.services.member.domain.MemberVacation">
        /* com.neofect.gts.core.services.member.repository.MemberVacationRepository_.updateMemberVacation */

        UPDATE GTS2016.MEMBER_VACATION
        SET
             MEMBER_ID = #{memberId}
            , YEAR = #{year}
            , OK_YN = #{okYn}
            , DEPT_NAME = #{deptName}
            , GUBUN_DIV_NAME = #{gubunDivName}
            , VACATION_DIV = #{vacationDiv}
            , VACATION_DIV_NAME = #{vacationDivName}
            , VACATION_REASON = #{vacationReason}
            , VACATION_PERIOD = #{vacationPeriod}
            , VACATION_TOTAL_DAYS = #{vacationTotalDays}
            , EMERGENCY_TEL = #{emergencyTel}
            , PROXY_MEMBER_ID = #{proxyMemberId}
            , APPLY_DATE = #{applyDate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            VACATION_ID = #{id}
    </update>

    <update id="updateMemberVacationDynamic" parameterType="com.neofect.gts.core.services.member.domain.MemberVacation">
        /* com.neofect.gts.core.services.member.repository.MemberVacationRepository_.updateMemberVacationDynamic */

        UPDATE GTS2016.MEMBER_VACATION
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            VACATION_ID = #{id}
    </update>

    <delete id="deleteMemberVacation" parameterType="long">
        /* com.neofect.gts.core.services.member.repository.MemberVacationRepository_.deleteMemberVacation */

        DELETE FROM GTS2016.MEMBER_VACATION
        WHERE
            VACATION_ID = #{id}
    </delete>

    <sql id="insert_values_">

        #{memberId},
        #{year},
        #{okYn},
        #{deptName},
        #{gubunDivName},
        #{vacationDiv},
        #{vacationDivName},
        #{vacationReason},
        #{vacationPeriod},
        #{vacationTotalDays},
        #{emergencyTel},
        #{proxyMemberId},
        #{applyDate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertMemberVacation">
        /* com.neofect.gts.core.services.member.repository.MemberVacationRepository_.insertMemberVacation */


        INSERT INTO GTS2016.MEMBER_VACATION
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

