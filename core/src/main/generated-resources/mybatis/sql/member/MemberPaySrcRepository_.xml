<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_">

    <resultMap id="simpleMemberPaySrcResult_" type="com.neofect.gts.core.services.member.domain.MemberPaySrc">
        <!-- 사번 -->
        <id     property="memberId" column="MEMBER_ID"/>
        <!-- 지사코드 -->
        <id     property="deptId" column="DEPT_ID"/>
        <!-- 기준연월 -->
        <id     property="yyyymm" column="YYYYMM"/>
        <!-- 근무형태(1: 방문요양, 2: 방문요양(가족), 3: 목욕) -->
        <id     property="workType" column="WORK_TYPE"/>
        <!-- 계약총시급 -->
        <result property="payTotal" column="PAY_TOTAL"/>
        <!-- 기본시금 -->
        <result property="payBasic" column="PAY_BASIC"/>
        <!-- 주휴시급 -->
        <result property="payWeek" column="PAY_WEEK"/>
        <!-- 연차시급 -->
        <result property="payVacation" column="PAY_VACATION"/>
        <!-- 기타수당시 -->
        <result property="payEtc" column="PAY_ETC"/>
        <!-- 처우개선비시급(최대10만원) -->
        <result property="payIncentive" column="PAY_INCENTIVE"/>
        <!-- 기본근로시간 -->
        <result property="hourBasic" column="HOUR_BASIC"/>
        <!-- 소정근로외 -->
        <result property="hourExtra" column="HOUR_EXTRA"/>
        <!-- 야간근로 -->
        <result property="hourNight" column="HOUR_NIGHT"/>
        <!-- 휴일근로 -->
        <result property="hourHoliday" column="HOUR_HOLIDAY"/>
        <!-- 총근로시간 -->
        <result property="hourTotal" column="HOUR_TOTAL"/>
        <!-- 처우개선비 -->
        <result property="amtIncentive" column="AMT_INCENTIVE"/>
        <!-- 기본급 -->
        <result property="amtBasic" column="AMT_BASIC"/>
        <!-- 주휴수당 -->
        <result property="amtWeek" column="AMT_WEEK"/>
        <!-- 연차수당 -->
        <result property="amtVacation" column="AMT_VACATION"/>
        <!-- 소정근로외 -->
        <result property="amtExtra" column="AMT_EXTRA"/>
        <!-- 야간근로수당 -->
        <result property="amtNight" column="AMT_NIGHT"/>
        <!-- 휴일근로수당 -->
        <result property="amtHoliday" column="AMT_HOLIDAY"/>
        <!-- 특별수당 -->
        <result property="amtEtc" column="AMT_ETC"/>
        
        <result property="amtSpecial" column="AMT_SPECIAL"/>
        
        <result property="remark" column="REMARK"/>
        <!-- 근무일수 -->
        <result property="workDays" column="WORK_DAYS"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
    </resultMap>

    <sql id="simpleMemberPaySrcCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="memberIds != null and !memberIds.isEmpty()">
            AND ${_alias}MEMBER_ID IN <foreach collection="memberIds" item="memberIdValue" open="(" close=")" separator=",">#{ memberIdValue }</foreach>
        </if>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="yyyymms != null and !yyyymms.isEmpty()">
            AND ${_alias}YYYYMM IN <foreach collection="yyyymms" item="yyyymmValue" open="(" close=")" separator=",">#{ yyyymmValue }</foreach>
        </if>
        <if test="workTypes != null and !workTypes.isEmpty()">
            AND ${_alias}WORK_TYPE IN <foreach collection="workTypes" item="workTypeValue" open="(" close=")" separator=",">#{ workTypeValue }</foreach>
        </if>
        <if test="memberId != null and memberId != ''">
            AND ${_alias}MEMBER_ID = #{memberId}
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="yyyymm != null and yyyymm != ''">
            AND ${_alias}YYYYMM = #{yyyymm}
        </if>
        <if test="workType != null and workType != ''">
            AND ${_alias}WORK_TYPE = #{workType}
        </if>
        <if test="payTotal != null">
            AND ${_alias}PAY_TOTAL = #{payTotal}
        </if>
        <if test="payBasic != null">
            AND ${_alias}PAY_BASIC = #{payBasic}
        </if>
        <if test="payWeek != null">
            AND ${_alias}PAY_WEEK = #{payWeek}
        </if>
        <if test="payVacation != null">
            AND ${_alias}PAY_VACATION = #{payVacation}
        </if>
        <if test="payEtc != null">
            AND ${_alias}PAY_ETC = #{payEtc}
        </if>
        <if test="payIncentive != null">
            AND ${_alias}PAY_INCENTIVE = #{payIncentive}
        </if>
        <if test="hourBasic != null">
            AND ${_alias}HOUR_BASIC = #{hourBasic}
        </if>
        <if test="hourExtra != null">
            AND ${_alias}HOUR_EXTRA = #{hourExtra}
        </if>
        <if test="hourNight != null">
            AND ${_alias}HOUR_NIGHT = #{hourNight}
        </if>
        <if test="hourHoliday != null">
            AND ${_alias}HOUR_HOLIDAY = #{hourHoliday}
        </if>
        <if test="hourTotal != null">
            AND ${_alias}HOUR_TOTAL = #{hourTotal}
        </if>
        <if test="amtIncentive != null">
            AND ${_alias}AMT_INCENTIVE = #{amtIncentive}
        </if>
        <if test="amtBasic != null">
            AND ${_alias}AMT_BASIC = #{amtBasic}
        </if>
        <if test="amtWeek != null">
            AND ${_alias}AMT_WEEK = #{amtWeek}
        </if>
        <if test="amtVacation != null">
            AND ${_alias}AMT_VACATION = #{amtVacation}
        </if>
        <if test="amtExtra != null">
            AND ${_alias}AMT_EXTRA = #{amtExtra}
        </if>
        <if test="amtNight != null">
            AND ${_alias}AMT_NIGHT = #{amtNight}
        </if>
        <if test="amtHoliday != null">
            AND ${_alias}AMT_HOLIDAY = #{amtHoliday}
        </if>
        <if test="amtEtc != null">
            AND ${_alias}AMT_ETC = #{amtEtc}
        </if>
        <if test="amtSpecial != null">
            AND ${_alias}AMT_SPECIAL = #{amtSpecial}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="workDays != null">
            AND ${_alias}WORK_DAYS = #{workDays}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate.enabled == true">
            <if test="rowUpdateDate.from != null and rowUpdateDate.from != ''">
            AND ${_alias}ROW_UPDATE_DATE >= TO_DATE(#{rowUpdateDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowUpdateDate.to != null and rowUpdateDate.to != ''">
            AND ${_alias}ROW_UPDATE_DATE <![CDATA[ < ]]> TO_DATE(#{rowUpdateDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}YYYYMM AS ${_asPrefix}YYYYMM, ${_alias}WORK_TYPE AS ${_asPrefix}WORK_TYPE, ${_alias}PAY_TOTAL AS ${_asPrefix}PAY_TOTAL, ${_alias}PAY_BASIC AS ${_asPrefix}PAY_BASIC, ${_alias}PAY_WEEK AS ${_asPrefix}PAY_WEEK, ${_alias}PAY_VACATION AS ${_asPrefix}PAY_VACATION, ${_alias}PAY_ETC AS ${_asPrefix}PAY_ETC, ${_alias}PAY_INCENTIVE AS ${_asPrefix}PAY_INCENTIVE, ${_alias}HOUR_BASIC AS ${_asPrefix}HOUR_BASIC, ${_alias}HOUR_EXTRA AS ${_asPrefix}HOUR_EXTRA, ${_alias}HOUR_NIGHT AS ${_asPrefix}HOUR_NIGHT, ${_alias}HOUR_HOLIDAY AS ${_asPrefix}HOUR_HOLIDAY, ${_alias}HOUR_TOTAL AS ${_asPrefix}HOUR_TOTAL, ${_alias}AMT_INCENTIVE AS ${_asPrefix}AMT_INCENTIVE, ${_alias}AMT_BASIC AS ${_asPrefix}AMT_BASIC, ${_alias}AMT_WEEK AS ${_asPrefix}AMT_WEEK, ${_alias}AMT_VACATION AS ${_asPrefix}AMT_VACATION, ${_alias}AMT_EXTRA AS ${_asPrefix}AMT_EXTRA, ${_alias}AMT_NIGHT AS ${_asPrefix}AMT_NIGHT, ${_alias}AMT_HOLIDAY AS ${_asPrefix}AMT_HOLIDAY, ${_alias}AMT_ETC AS ${_asPrefix}AMT_ETC, ${_alias}AMT_SPECIAL AS ${_asPrefix}AMT_SPECIAL, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}WORK_DAYS AS ${_asPrefix}WORK_DAYS, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}MEMBER_ID, ${_alias}DEPT_ID, ${_alias}YYYYMM, ${_alias}WORK_TYPE, ${_alias}PAY_TOTAL, ${_alias}PAY_BASIC, ${_alias}PAY_WEEK, ${_alias}PAY_VACATION, ${_alias}PAY_ETC, ${_alias}PAY_INCENTIVE, ${_alias}HOUR_BASIC, ${_alias}HOUR_EXTRA, ${_alias}HOUR_NIGHT, ${_alias}HOUR_HOLIDAY, ${_alias}HOUR_TOTAL, ${_alias}AMT_INCENTIVE, ${_alias}AMT_BASIC, ${_alias}AMT_WEEK, ${_alias}AMT_VACATION, ${_alias}AMT_EXTRA, ${_alias}AMT_NIGHT, ${_alias}AMT_HOLIDAY, ${_alias}AMT_ETC, ${_alias}AMT_SPECIAL, ${_alias}REMARK, ${_alias}WORK_DAYS, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}PAY_TOTAL AS ${_asPrefix}PAY_TOTAL, ${_alias}PAY_BASIC AS ${_asPrefix}PAY_BASIC, ${_alias}PAY_WEEK AS ${_asPrefix}PAY_WEEK, ${_alias}PAY_VACATION AS ${_asPrefix}PAY_VACATION, ${_alias}PAY_ETC AS ${_asPrefix}PAY_ETC, ${_alias}PAY_INCENTIVE AS ${_asPrefix}PAY_INCENTIVE, ${_alias}HOUR_BASIC AS ${_asPrefix}HOUR_BASIC, ${_alias}HOUR_EXTRA AS ${_asPrefix}HOUR_EXTRA, ${_alias}HOUR_NIGHT AS ${_asPrefix}HOUR_NIGHT, ${_alias}HOUR_HOLIDAY AS ${_asPrefix}HOUR_HOLIDAY, ${_alias}HOUR_TOTAL AS ${_asPrefix}HOUR_TOTAL, ${_alias}AMT_INCENTIVE AS ${_asPrefix}AMT_INCENTIVE, ${_alias}AMT_BASIC AS ${_asPrefix}AMT_BASIC, ${_alias}AMT_WEEK AS ${_asPrefix}AMT_WEEK, ${_alias}AMT_VACATION AS ${_asPrefix}AMT_VACATION, ${_alias}AMT_EXTRA AS ${_asPrefix}AMT_EXTRA, ${_alias}AMT_NIGHT AS ${_asPrefix}AMT_NIGHT, ${_alias}AMT_HOLIDAY AS ${_asPrefix}AMT_HOLIDAY, ${_alias}AMT_ETC AS ${_asPrefix}AMT_ETC, ${_alias}AMT_SPECIAL AS ${_asPrefix}AMT_SPECIAL, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}WORK_DAYS AS ${_asPrefix}WORK_DAYS, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP        </when>
        <otherwise>
            ${_alias}PAY_TOTAL, ${_alias}PAY_BASIC, ${_alias}PAY_WEEK, ${_alias}PAY_VACATION, ${_alias}PAY_ETC, ${_alias}PAY_INCENTIVE, ${_alias}HOUR_BASIC, ${_alias}HOUR_EXTRA, ${_alias}HOUR_NIGHT, ${_alias}HOUR_HOLIDAY, ${_alias}HOUR_TOTAL, ${_alias}AMT_INCENTIVE, ${_alias}AMT_BASIC, ${_alias}AMT_WEEK, ${_alias}AMT_VACATION, ${_alias}AMT_EXTRA, ${_alias}AMT_NIGHT, ${_alias}AMT_HOLIDAY, ${_alias}AMT_ETC, ${_alias}AMT_SPECIAL, ${_alias}REMARK, ${_alias}WORK_DAYS, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}MEMBER_ID, ${_alias}DEPT_ID, ${_alias}YYYYMM, ${_alias}WORK_TYPE, ${_alias}PAY_TOTAL, ${_alias}PAY_BASIC, ${_alias}PAY_WEEK, ${_alias}PAY_VACATION, ${_alias}PAY_ETC, ${_alias}PAY_INCENTIVE, ${_alias}HOUR_BASIC, ${_alias}HOUR_EXTRA, ${_alias}HOUR_NIGHT, ${_alias}HOUR_HOLIDAY, ${_alias}HOUR_TOTAL, ${_alias}AMT_INCENTIVE, ${_alias}AMT_BASIC, ${_alias}AMT_WEEK, ${_alias}AMT_VACATION, ${_alias}AMT_EXTRA, ${_alias}AMT_NIGHT, ${_alias}AMT_HOLIDAY, ${_alias}AMT_ETC, ${_alias}AMT_SPECIAL, ${_alias}REMARK, ${_alias}WORK_DAYS, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}PAY_TOTAL, ${_alias}PAY_BASIC, ${_alias}PAY_WEEK, ${_alias}PAY_VACATION, ${_alias}PAY_ETC, ${_alias}PAY_INCENTIVE, ${_alias}HOUR_BASIC, ${_alias}HOUR_EXTRA, ${_alias}HOUR_NIGHT, ${_alias}HOUR_HOLIDAY, ${_alias}HOUR_TOTAL, ${_alias}AMT_INCENTIVE, ${_alias}AMT_BASIC, ${_alias}AMT_WEEK, ${_alias}AMT_VACATION, ${_alias}AMT_EXTRA, ${_alias}AMT_NIGHT, ${_alias}AMT_HOLIDAY, ${_alias}AMT_ETC, ${_alias}AMT_SPECIAL, ${_alias}REMARK, ${_alias}WORK_DAYS, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP    </sql>

    <select id="simpleGetMemberPaySrc" parameterType="long" resultMap="simpleMemberPaySrcResult_">
        /* com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_.simpleGetMemberPaySrc */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.MEMBER_PAY_SRC
        WHERE
        MEMBER_ID = #{memberId}
        AND DEPT_ID = #{deptId}
        AND YYYYMM = #{yyyymm}
        AND WORK_TYPE = #{workType}
	</select>

    <select id="simpleListMemberPaySrcCnt" resultType="int">
        /* com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_.simpleListMemberPaySrcCnt */

        SELECT COUNT(*)
        FROM GTS2016.MEMBER_PAY_SRC
        <include refid="simpleMemberPaySrcCondition_" />
    </select>

    <select id="simpleListMemberPaySrc" resultMap="simpleMemberPaySrcResult_">
        /* com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_.simpleListMemberPaySrc */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.MEMBER_PAY_SRC
        <include refid="simpleMemberPaySrcCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="payTotal != null">
            ${_alias}PAY_TOTAL = #{payTotal},
        </if>
        <if test="payBasic != null">
            ${_alias}PAY_BASIC = #{payBasic},
        </if>
        <if test="payWeek != null">
            ${_alias}PAY_WEEK = #{payWeek},
        </if>
        <if test="payVacation != null">
            ${_alias}PAY_VACATION = #{payVacation},
        </if>
        <if test="payEtc != null">
            ${_alias}PAY_ETC = #{payEtc},
        </if>
        <if test="payIncentive != null">
            ${_alias}PAY_INCENTIVE = #{payIncentive},
        </if>
        <if test="hourBasic != null">
            ${_alias}HOUR_BASIC = #{hourBasic},
        </if>
        <if test="hourExtra != null">
            ${_alias}HOUR_EXTRA = #{hourExtra},
        </if>
        <if test="hourNight != null">
            ${_alias}HOUR_NIGHT = #{hourNight},
        </if>
        <if test="hourHoliday != null">
            ${_alias}HOUR_HOLIDAY = #{hourHoliday},
        </if>
        <if test="hourTotal != null">
            ${_alias}HOUR_TOTAL = #{hourTotal},
        </if>
        <if test="amtIncentive != null">
            ${_alias}AMT_INCENTIVE = #{amtIncentive},
        </if>
        <if test="amtBasic != null">
            ${_alias}AMT_BASIC = #{amtBasic},
        </if>
        <if test="amtWeek != null">
            ${_alias}AMT_WEEK = #{amtWeek},
        </if>
        <if test="amtVacation != null">
            ${_alias}AMT_VACATION = #{amtVacation},
        </if>
        <if test="amtExtra != null">
            ${_alias}AMT_EXTRA = #{amtExtra},
        </if>
        <if test="amtNight != null">
            ${_alias}AMT_NIGHT = #{amtNight},
        </if>
        <if test="amtHoliday != null">
            ${_alias}AMT_HOLIDAY = #{amtHoliday},
        </if>
        <if test="amtEtc != null">
            ${_alias}AMT_ETC = #{amtEtc},
        </if>
        <if test="amtSpecial != null">
            ${_alias}AMT_SPECIAL = #{amtSpecial},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="workDays != null">
            ${_alias}WORK_DAYS = #{workDays},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
    </sql>

    <update id="updateMemberPaySrc" parameterType="com.neofect.gts.core.services.member.domain.MemberPaySrc">
        /* com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_.updateMemberPaySrc */

        UPDATE GTS2016.MEMBER_PAY_SRC
        SET
             PAY_TOTAL = #{payTotal}
            , PAY_BASIC = #{payBasic}
            , PAY_WEEK = #{payWeek}
            , PAY_VACATION = #{payVacation}
            , PAY_ETC = #{payEtc}
            , PAY_INCENTIVE = #{payIncentive}
            , HOUR_BASIC = #{hourBasic}
            , HOUR_EXTRA = #{hourExtra}
            , HOUR_NIGHT = #{hourNight}
            , HOUR_HOLIDAY = #{hourHoliday}
            , HOUR_TOTAL = #{hourTotal}
            , AMT_INCENTIVE = #{amtIncentive}
            , AMT_BASIC = #{amtBasic}
            , AMT_WEEK = #{amtWeek}
            , AMT_VACATION = #{amtVacation}
            , AMT_EXTRA = #{amtExtra}
            , AMT_NIGHT = #{amtNight}
            , AMT_HOLIDAY = #{amtHoliday}
            , AMT_ETC = #{amtEtc}
            , AMT_SPECIAL = #{amtSpecial}
            , REMARK = #{remark}
            , WORK_DAYS = #{workDays}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
        WHERE
            MEMBER_ID = #{memberId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND WORK_TYPE = #{workType}
    </update>

    <update id="updateMemberPaySrcDynamic" parameterType="com.neofect.gts.core.services.member.domain.MemberPaySrc">
        /* com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_.updateMemberPaySrcDynamic */

        UPDATE GTS2016.MEMBER_PAY_SRC
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            MEMBER_ID = #{memberId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND WORK_TYPE = #{workType}
    </update>

    <delete id="deleteMemberPaySrc" parameterType="long">
        /* com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_.deleteMemberPaySrc */

        DELETE FROM GTS2016.MEMBER_PAY_SRC
        WHERE
            MEMBER_ID = #{memberId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND WORK_TYPE = #{workType}
    </delete>

    <sql id="insert_values_">

        #{payTotal},
        #{payBasic},
        #{payWeek},
        #{payVacation},
        #{payEtc},
        #{payIncentive},
        #{hourBasic},
        #{hourExtra},
        #{hourNight},
        #{hourHoliday},
        #{hourTotal},
        #{amtIncentive},
        #{amtBasic},
        #{amtWeek},
        #{amtVacation},
        #{amtExtra},
        #{amtNight},
        #{amtHoliday},
        #{amtEtc},
        #{amtSpecial},
        #{remark},
        #{workDays},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp}
    </sql>

    <insert id="insertMemberPaySrc">
        /* com.neofect.gts.core.services.member.repository.MemberPaySrcRepository_.insertMemberPaySrc */


        INSERT INTO GTS2016.MEMBER_PAY_SRC
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

