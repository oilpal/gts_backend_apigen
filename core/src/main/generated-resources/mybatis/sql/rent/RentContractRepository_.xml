<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.rent.repository.RentContractRepository_">

    <resultMap id="simpleRentContractResult_" type="com.neofect.gts.core.services.rent.domain.RentContract">
        <!-- 지사ID -->
        <id     property="deptId" column="DEPT_ID"/>
        <!-- 계약ID -->
        <id     property="rId" column="R_ID"/>
        <!-- 대여구분 -->
        <result property="leaseDiv" column="LEASE_DIV"/>
        <!-- 처리지사ID -->
        <result property="pdeptId" column="PDEPT_ID"/>
        
        <result property="custId" column="CUST_ID"/>
        <!-- 거래처코드 -->
        <result property="custCode" column="CUST_CODE"/>
        <!-- 거래처명 -->
        <result property="custName" column="CUST_NAME"/>
        <!-- 품목ID -->
        <result property="productId" column="PRODUCT_ID"/>
        <!-- 수량 -->
        <result property="qty" column="QTY"/>
        <!-- 단가 -->
        <result property="damt" column="DAMT"/>
        <!-- 금액 -->
        <result property="amt" column="AMT"/>
        <!-- 공급가액 -->
        <result property="supplyAmt" column="SUPPLY_AMT"/>
        <!-- 부가세액 -->
        <result property="vatAmt" column="VAT_AMT"/>
        <!-- 적요 -->
        <result property="remark" column="REMARK"/>
        <!-- 고객구분코드 -->
        <result property="custGubunDiv" column="CUST_GUBUN_DIV"/>
        <!-- 고객등급코드 -->
        <result property="custLevelDiv" column="CUST_LEVEL_DIV"/>
        <!-- 적요요율률 -->
        <result property="appRateDiv" column="APP_RATE_DIV"/>
        <!-- 경감구분코드 -->
        <result property="reductionDiv" column="REDUCTION_DIV"/>
        <!-- 요양인정번호 -->
        <result property="manageNo" column="MANAGE_NO"/>
        <!-- 장기요양결과 -->
        <result property="longtermDiv" column="LONGTERM_DIV"/>
        <!-- 서비스개시일 -->
        <result property="startDate" column="START_DATE"/>
        <!-- 서비스종료일 -->
        <result property="endDate" column="END_DATE"/>
        <!-- 본인부담금 -->
        <result property="payAmt" column="PAY_AMT"/>
        <!-- 청구금액 -->
        <result property="reqAmt" column="REQ_AMT"/>
        <!-- 월잔여요양비용 -->
        <result property="remainAmt" column="REMAIN_AMT"/>
        <!-- 보장기관코드 -->
        <result property="manageOfficeDiv" column="MANAGE_OFFICE_DIV"/>
        <!-- 카드사용여부 -->
        <result property="cardYn" column="CARD_YN"/>
        <!-- 반납일 -->
        <result property="returnDate" column="RETURN_DATE"/>
        <!-- 반납확인사번 -->
        <result property="mmemberId" column="MMEMBER_ID"/>
        <!-- 소개사번 -->
        <result property="introId" column="INTRO_ID"/>
        <!-- 소개율 -->
        <result property="introRate" column="INTRO_RATE"/>
        <!-- 임대료지급기준 -->
        <result property="leasepayDiv" column="LEASEPAY_DIV"/>
        <!-- 임대료지급완료여부   Y 완료 -->
        <result property="leaspayYn" column="LEASPAY_YN"/>
        <!-- 대여요청일 -->
        <result property="reqDate" column="REQ_DATE"/>
        <!-- 납품예정일 -->
        <result property="outDate" column="OUT_DATE"/>
        <!-- 계약여부 -->
        <result property="contYn" column="CONT_YN"/>
        
        <result property="productCode" column="PRODUCT_CODE"/>
        
        <result property="productName" column="PRODUCT_NAME"/>
        
        <result property="reqYn" column="REQ_YN"/>
        
        <result property="modelName" column="MODEL_NAME"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 배송지우편번호 -->
        <result property="nplaceZipcode" column="NPLACE_ZIPCODE"/>
        <!-- 배송지주소 -->
        <result property="nplace" column="NPLACE"/>
        <!-- 배송지주소2 -->
        <result property="nplaceAddr2" column="NPLACE_ADDR2"/>
        <!-- 수취인 -->
        <result property="nplaceName" column="NPLACE_NAME"/>
        <!-- 배송지 연락처 -->
        <result property="nplaceTel" column="NPLACE_TEL"/>
        <!-- 해지사유 -->
        <result property="cancelReason" column="CANCEL_REASON"/>
    </resultMap>

    <sql id="simpleRentContractCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="rIds != null and !rIds.isEmpty()">
            AND ${_alias}R_ID IN <foreach collection="rIds" item="rIdValue" open="(" close=")" separator=",">#{ rIdValue }</foreach>
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="rId != null">
            AND ${_alias}R_ID = #{rId}
        </if>
        <if test="leaseDiv != null and leaseDiv != ''">
            AND ${_alias}LEASE_DIV = #{leaseDiv}
        </if>
        <if test="pdeptId != null and pdeptId != ''">
            AND ${_alias}PDEPT_ID = #{pdeptId}
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="custCode != null and custCode != ''">
            AND ${_alias}CUST_CODE = #{custCode}
        </if>
        <if test="custName != null and custName != ''">
            AND ${_alias}CUST_NAME = #{custName}
        </if>
        <if test="productId != null">
            AND ${_alias}PRODUCT_ID = #{productId}
        </if>
        <if test="qty != null">
            AND ${_alias}QTY = #{qty}
        </if>
        <if test="damt != null">
            AND ${_alias}DAMT = #{damt}
        </if>
        <if test="amt != null">
            AND ${_alias}AMT = #{amt}
        </if>
        <if test="supplyAmt != null">
            AND ${_alias}SUPPLY_AMT = #{supplyAmt}
        </if>
        <if test="vatAmt != null">
            AND ${_alias}VAT_AMT = #{vatAmt}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="custGubunDiv != null and custGubunDiv != ''">
            AND ${_alias}CUST_GUBUN_DIV = #{custGubunDiv}
        </if>
        <if test="custLevelDiv != null and custLevelDiv != ''">
            AND ${_alias}CUST_LEVEL_DIV = #{custLevelDiv}
        </if>
        <if test="appRateDiv != null and appRateDiv != ''">
            AND ${_alias}APP_RATE_DIV = #{appRateDiv}
        </if>
        <if test="reductionDiv != null and reductionDiv != ''">
            AND ${_alias}REDUCTION_DIV = #{reductionDiv}
        </if>
        <if test="manageNo != null and manageNo != ''">
            AND ${_alias}MANAGE_NO = #{manageNo}
        </if>
        <if test="longtermDiv != null and longtermDiv != ''">
            AND ${_alias}LONGTERM_DIV = #{longtermDiv}
        </if>
        <if test="startDate != null and startDate.enabled == true">
            <if test="startDate.from != null and startDate.from != ''">
            AND ${_alias}START_DATE >= TO_DATE(#{startDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="startDate.to != null and startDate.to != ''">
            AND ${_alias}START_DATE <![CDATA[ < ]]> TO_DATE(#{startDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="endDate != null and endDate.enabled == true">
            <if test="endDate.from != null and endDate.from != ''">
            AND ${_alias}END_DATE >= TO_DATE(#{endDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="endDate.to != null and endDate.to != ''">
            AND ${_alias}END_DATE <![CDATA[ < ]]> TO_DATE(#{endDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="payAmt != null">
            AND ${_alias}PAY_AMT = #{payAmt}
        </if>
        <if test="reqAmt != null">
            AND ${_alias}REQ_AMT = #{reqAmt}
        </if>
        <if test="remainAmt != null">
            AND ${_alias}REMAIN_AMT = #{remainAmt}
        </if>
        <if test="manageOfficeDiv != null and manageOfficeDiv != ''">
            AND ${_alias}MANAGE_OFFICE_DIV = #{manageOfficeDiv}
        </if>
        <if test="cardYn != null and cardYn != ''">
            AND ${_alias}CARD_YN = #{cardYn}
        </if>
        <if test="returnDate != null and returnDate.enabled == true">
            <if test="returnDate.from != null and returnDate.from != ''">
            AND ${_alias}RETURN_DATE >= TO_DATE(#{returnDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="returnDate.to != null and returnDate.to != ''">
            AND ${_alias}RETURN_DATE <![CDATA[ < ]]> TO_DATE(#{returnDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="mmemberId != null and mmemberId != ''">
            AND ${_alias}MMEMBER_ID = #{mmemberId}
        </if>
        <if test="introId != null and introId != ''">
            AND ${_alias}INTRO_ID = #{introId}
        </if>
        <if test="introRate != null">
            AND ${_alias}INTRO_RATE = #{introRate}
        </if>
        <if test="leasepayDiv != null and leasepayDiv != ''">
            AND ${_alias}LEASEPAY_DIV = #{leasepayDiv}
        </if>
        <if test="leaspayYn != null and leaspayYn != ''">
            AND ${_alias}LEASPAY_YN = #{leaspayYn}
        </if>
        <if test="reqDate != null and reqDate.enabled == true">
            <if test="reqDate.from != null and reqDate.from != ''">
            AND ${_alias}REQ_DATE >= TO_DATE(#{reqDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="reqDate.to != null and reqDate.to != ''">
            AND ${_alias}REQ_DATE <![CDATA[ < ]]> TO_DATE(#{reqDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="outDate != null and outDate.enabled == true">
            <if test="outDate.from != null and outDate.from != ''">
            AND ${_alias}OUT_DATE >= TO_DATE(#{outDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="outDate.to != null and outDate.to != ''">
            AND ${_alias}OUT_DATE <![CDATA[ < ]]> TO_DATE(#{outDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="contYn != null and contYn != ''">
            AND ${_alias}CONT_YN = #{contYn}
        </if>
        <if test="productCode != null and productCode != ''">
            AND ${_alias}PRODUCT_CODE = #{productCode}
        </if>
        <if test="productName != null and productName != ''">
            AND ${_alias}PRODUCT_NAME = #{productName}
        </if>
        <if test="reqYn != null and reqYn != ''">
            AND ${_alias}REQ_YN = #{reqYn}
        </if>
        <if test="modelName != null and modelName != ''">
            AND ${_alias}MODEL_NAME = #{modelName}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="nplaceZipcode != null and nplaceZipcode != ''">
            AND ${_alias}NPLACE_ZIPCODE = #{nplaceZipcode}
        </if>
        <if test="nplace != null and nplace != ''">
            AND ${_alias}NPLACE = #{nplace}
        </if>
        <if test="nplaceAddr2 != null and nplaceAddr2 != ''">
            AND ${_alias}NPLACE_ADDR2 = #{nplaceAddr2}
        </if>
        <if test="nplaceName != null and nplaceName != ''">
            AND ${_alias}NPLACE_NAME = #{nplaceName}
        </if>
        <if test="nplaceTel != null and nplaceTel != ''">
            AND ${_alias}NPLACE_TEL = #{nplaceTel}
        </if>
        <if test="cancelReason != null and cancelReason != ''">
            AND ${_alias}CANCEL_REASON = #{cancelReason}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}R_ID AS ${_asPrefix}R_ID, ${_alias}LEASE_DIV AS ${_asPrefix}LEASE_DIV, ${_alias}PDEPT_ID AS ${_asPrefix}PDEPT_ID, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}QTY AS ${_asPrefix}QTY, ${_alias}DAMT AS ${_asPrefix}DAMT, ${_alias}AMT AS ${_asPrefix}AMT, ${_alias}SUPPLY_AMT AS ${_asPrefix}SUPPLY_AMT, ${_alias}VAT_AMT AS ${_asPrefix}VAT_AMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}CUST_GUBUN_DIV AS ${_asPrefix}CUST_GUBUN_DIV, ${_alias}CUST_LEVEL_DIV AS ${_asPrefix}CUST_LEVEL_DIV, ${_alias}APP_RATE_DIV AS ${_asPrefix}APP_RATE_DIV, ${_alias}REDUCTION_DIV AS ${_asPrefix}REDUCTION_DIV, ${_alias}MANAGE_NO AS ${_asPrefix}MANAGE_NO, ${_alias}LONGTERM_DIV AS ${_asPrefix}LONGTERM_DIV, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}REMAIN_AMT AS ${_asPrefix}REMAIN_AMT, ${_alias}MANAGE_OFFICE_DIV AS ${_asPrefix}MANAGE_OFFICE_DIV, ${_alias}CARD_YN AS ${_asPrefix}CARD_YN, ${_alias}RETURN_DATE AS ${_asPrefix}RETURN_DATE, ${_alias}MMEMBER_ID AS ${_asPrefix}MMEMBER_ID, ${_alias}INTRO_ID AS ${_asPrefix}INTRO_ID, ${_alias}INTRO_RATE AS ${_asPrefix}INTRO_RATE, ${_alias}LEASEPAY_DIV AS ${_asPrefix}LEASEPAY_DIV, ${_alias}LEASPAY_YN AS ${_asPrefix}LEASPAY_YN, ${_alias}REQ_DATE AS ${_asPrefix}REQ_DATE, ${_alias}OUT_DATE AS ${_asPrefix}OUT_DATE, ${_alias}CONT_YN AS ${_asPrefix}CONT_YN, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}REQ_YN AS ${_asPrefix}REQ_YN, ${_alias}MODEL_NAME AS ${_asPrefix}MODEL_NAME, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}NPLACE_ZIPCODE AS ${_asPrefix}NPLACE_ZIPCODE, ${_alias}NPLACE AS ${_asPrefix}NPLACE, ${_alias}NPLACE_ADDR2 AS ${_asPrefix}NPLACE_ADDR2, ${_alias}NPLACE_NAME AS ${_asPrefix}NPLACE_NAME, ${_alias}NPLACE_TEL AS ${_asPrefix}NPLACE_TEL, ${_alias}CANCEL_REASON AS ${_asPrefix}CANCEL_REASON        </when>
        <otherwise>
            ${_alias}DEPT_ID, ${_alias}R_ID, ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}CUST_GUBUN_DIV, ${_alias}CUST_LEVEL_DIV, ${_alias}APP_RATE_DIV, ${_alias}REDUCTION_DIV, ${_alias}MANAGE_NO, ${_alias}LONGTERM_DIV, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}MANAGE_OFFICE_DIV, ${_alias}CARD_YN, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}INTRO_ID, ${_alias}INTRO_RATE, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}REQ_DATE, ${_alias}OUT_DATE, ${_alias}CONT_YN, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}REQ_YN, ${_alias}MODEL_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}NPLACE_ZIPCODE, ${_alias}NPLACE, ${_alias}NPLACE_ADDR2, ${_alias}NPLACE_NAME, ${_alias}NPLACE_TEL, ${_alias}CANCEL_REASON        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}LEASE_DIV AS ${_asPrefix}LEASE_DIV, ${_alias}PDEPT_ID AS ${_asPrefix}PDEPT_ID, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}CUST_CODE AS ${_asPrefix}CUST_CODE, ${_alias}CUST_NAME AS ${_asPrefix}CUST_NAME, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}QTY AS ${_asPrefix}QTY, ${_alias}DAMT AS ${_asPrefix}DAMT, ${_alias}AMT AS ${_asPrefix}AMT, ${_alias}SUPPLY_AMT AS ${_asPrefix}SUPPLY_AMT, ${_alias}VAT_AMT AS ${_asPrefix}VAT_AMT, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}CUST_GUBUN_DIV AS ${_asPrefix}CUST_GUBUN_DIV, ${_alias}CUST_LEVEL_DIV AS ${_asPrefix}CUST_LEVEL_DIV, ${_alias}APP_RATE_DIV AS ${_asPrefix}APP_RATE_DIV, ${_alias}REDUCTION_DIV AS ${_asPrefix}REDUCTION_DIV, ${_alias}MANAGE_NO AS ${_asPrefix}MANAGE_NO, ${_alias}LONGTERM_DIV AS ${_asPrefix}LONGTERM_DIV, ${_alias}START_DATE AS ${_asPrefix}START_DATE, ${_alias}END_DATE AS ${_asPrefix}END_DATE, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}REMAIN_AMT AS ${_asPrefix}REMAIN_AMT, ${_alias}MANAGE_OFFICE_DIV AS ${_asPrefix}MANAGE_OFFICE_DIV, ${_alias}CARD_YN AS ${_asPrefix}CARD_YN, ${_alias}RETURN_DATE AS ${_asPrefix}RETURN_DATE, ${_alias}MMEMBER_ID AS ${_asPrefix}MMEMBER_ID, ${_alias}INTRO_ID AS ${_asPrefix}INTRO_ID, ${_alias}INTRO_RATE AS ${_asPrefix}INTRO_RATE, ${_alias}LEASEPAY_DIV AS ${_asPrefix}LEASEPAY_DIV, ${_alias}LEASPAY_YN AS ${_asPrefix}LEASPAY_YN, ${_alias}REQ_DATE AS ${_asPrefix}REQ_DATE, ${_alias}OUT_DATE AS ${_asPrefix}OUT_DATE, ${_alias}CONT_YN AS ${_asPrefix}CONT_YN, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}REQ_YN AS ${_asPrefix}REQ_YN, ${_alias}MODEL_NAME AS ${_asPrefix}MODEL_NAME, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}NPLACE_ZIPCODE AS ${_asPrefix}NPLACE_ZIPCODE, ${_alias}NPLACE AS ${_asPrefix}NPLACE, ${_alias}NPLACE_ADDR2 AS ${_asPrefix}NPLACE_ADDR2, ${_alias}NPLACE_NAME AS ${_asPrefix}NPLACE_NAME, ${_alias}NPLACE_TEL AS ${_asPrefix}NPLACE_TEL, ${_alias}CANCEL_REASON AS ${_asPrefix}CANCEL_REASON        </when>
        <otherwise>
            ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}CUST_GUBUN_DIV, ${_alias}CUST_LEVEL_DIV, ${_alias}APP_RATE_DIV, ${_alias}REDUCTION_DIV, ${_alias}MANAGE_NO, ${_alias}LONGTERM_DIV, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}MANAGE_OFFICE_DIV, ${_alias}CARD_YN, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}INTRO_ID, ${_alias}INTRO_RATE, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}REQ_DATE, ${_alias}OUT_DATE, ${_alias}CONT_YN, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}REQ_YN, ${_alias}MODEL_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}NPLACE_ZIPCODE, ${_alias}NPLACE, ${_alias}NPLACE_ADDR2, ${_alias}NPLACE_NAME, ${_alias}NPLACE_TEL, ${_alias}CANCEL_REASON        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}DEPT_ID, ${_alias}R_ID, ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}CUST_GUBUN_DIV, ${_alias}CUST_LEVEL_DIV, ${_alias}APP_RATE_DIV, ${_alias}REDUCTION_DIV, ${_alias}MANAGE_NO, ${_alias}LONGTERM_DIV, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}MANAGE_OFFICE_DIV, ${_alias}CARD_YN, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}INTRO_ID, ${_alias}INTRO_RATE, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}REQ_DATE, ${_alias}OUT_DATE, ${_alias}CONT_YN, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}REQ_YN, ${_alias}MODEL_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}NPLACE_ZIPCODE, ${_alias}NPLACE, ${_alias}NPLACE_ADDR2, ${_alias}NPLACE_NAME, ${_alias}NPLACE_TEL, ${_alias}CANCEL_REASON    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}LEASE_DIV, ${_alias}PDEPT_ID, ${_alias}CUST_ID, ${_alias}CUST_CODE, ${_alias}CUST_NAME, ${_alias}PRODUCT_ID, ${_alias}QTY, ${_alias}DAMT, ${_alias}AMT, ${_alias}SUPPLY_AMT, ${_alias}VAT_AMT, ${_alias}REMARK, ${_alias}CUST_GUBUN_DIV, ${_alias}CUST_LEVEL_DIV, ${_alias}APP_RATE_DIV, ${_alias}REDUCTION_DIV, ${_alias}MANAGE_NO, ${_alias}LONGTERM_DIV, ${_alias}START_DATE, ${_alias}END_DATE, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}MANAGE_OFFICE_DIV, ${_alias}CARD_YN, ${_alias}RETURN_DATE, ${_alias}MMEMBER_ID, ${_alias}INTRO_ID, ${_alias}INTRO_RATE, ${_alias}LEASEPAY_DIV, ${_alias}LEASPAY_YN, ${_alias}REQ_DATE, ${_alias}OUT_DATE, ${_alias}CONT_YN, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}REQ_YN, ${_alias}MODEL_NAME, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}NPLACE_ZIPCODE, ${_alias}NPLACE, ${_alias}NPLACE_ADDR2, ${_alias}NPLACE_NAME, ${_alias}NPLACE_TEL, ${_alias}CANCEL_REASON    </sql>

    <select id="simpleGetRentContract" parameterType="long" resultMap="simpleRentContractResult_">
        /* com.neofect.gts.core.services.rent.repository.RentContractRepository_.simpleGetRentContract */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.RENT_CONTRACT
        WHERE
        DEPT_ID = #{deptId}
        AND R_ID = #{rId}
	</select>

    <select id="simpleListRentContractCnt" resultType="int">
        /* com.neofect.gts.core.services.rent.repository.RentContractRepository_.simpleListRentContractCnt */

        SELECT COUNT(*)
        FROM GTS2016.RENT_CONTRACT
        <include refid="simpleRentContractCondition_" />
    </select>

    <select id="simpleListRentContract" resultMap="simpleRentContractResult_">
        /* com.neofect.gts.core.services.rent.repository.RentContractRepository_.simpleListRentContract */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.RENT_CONTRACT
        <include refid="simpleRentContractCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="leaseDiv != null and leaseDiv != ''">
            ${_alias}LEASE_DIV = #{leaseDiv},
        </if>
        <if test="pdeptId != null and pdeptId != ''">
            ${_alias}PDEPT_ID = #{pdeptId},
        </if>
        <if test="custId != null">
            ${_alias}CUST_ID = #{custId},
        </if>
        <if test="custCode != null and custCode != ''">
            ${_alias}CUST_CODE = #{custCode},
        </if>
        <if test="custName != null and custName != ''">
            ${_alias}CUST_NAME = #{custName},
        </if>
        <if test="productId != null">
            ${_alias}PRODUCT_ID = #{productId},
        </if>
        <if test="qty != null">
            ${_alias}QTY = #{qty},
        </if>
        <if test="damt != null">
            ${_alias}DAMT = #{damt},
        </if>
        <if test="amt != null">
            ${_alias}AMT = #{amt},
        </if>
        <if test="supplyAmt != null">
            ${_alias}SUPPLY_AMT = #{supplyAmt},
        </if>
        <if test="vatAmt != null">
            ${_alias}VAT_AMT = #{vatAmt},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="custGubunDiv != null and custGubunDiv != ''">
            ${_alias}CUST_GUBUN_DIV = #{custGubunDiv},
        </if>
        <if test="custLevelDiv != null and custLevelDiv != ''">
            ${_alias}CUST_LEVEL_DIV = #{custLevelDiv},
        </if>
        <if test="appRateDiv != null and appRateDiv != ''">
            ${_alias}APP_RATE_DIV = #{appRateDiv},
        </if>
        <if test="reductionDiv != null and reductionDiv != ''">
            ${_alias}REDUCTION_DIV = #{reductionDiv},
        </if>
        <if test="manageNo != null and manageNo != ''">
            ${_alias}MANAGE_NO = #{manageNo},
        </if>
        <if test="longtermDiv != null and longtermDiv != ''">
            ${_alias}LONGTERM_DIV = #{longtermDiv},
        </if>
        <if test="startDate != null">
            ${_alias}START_DATE = #{startDate},
        </if>
        <if test="endDate != null">
            ${_alias}END_DATE = #{endDate},
        </if>
        <if test="payAmt != null">
            ${_alias}PAY_AMT = #{payAmt},
        </if>
        <if test="reqAmt != null">
            ${_alias}REQ_AMT = #{reqAmt},
        </if>
        <if test="remainAmt != null">
            ${_alias}REMAIN_AMT = #{remainAmt},
        </if>
        <if test="manageOfficeDiv != null and manageOfficeDiv != ''">
            ${_alias}MANAGE_OFFICE_DIV = #{manageOfficeDiv},
        </if>
        <if test="cardYn != null and cardYn != ''">
            ${_alias}CARD_YN = #{cardYn},
        </if>
        <if test="returnDate != null">
            ${_alias}RETURN_DATE = #{returnDate},
        </if>
        <if test="mmemberId != null and mmemberId != ''">
            ${_alias}MMEMBER_ID = #{mmemberId},
        </if>
        <if test="introId != null and introId != ''">
            ${_alias}INTRO_ID = #{introId},
        </if>
        <if test="introRate != null">
            ${_alias}INTRO_RATE = #{introRate},
        </if>
        <if test="leasepayDiv != null and leasepayDiv != ''">
            ${_alias}LEASEPAY_DIV = #{leasepayDiv},
        </if>
        <if test="leaspayYn != null and leaspayYn != ''">
            ${_alias}LEASPAY_YN = #{leaspayYn},
        </if>
        <if test="reqDate != null">
            ${_alias}REQ_DATE = #{reqDate},
        </if>
        <if test="outDate != null">
            ${_alias}OUT_DATE = #{outDate},
        </if>
        <if test="contYn != null and contYn != ''">
            ${_alias}CONT_YN = #{contYn},
        </if>
        <if test="productCode != null and productCode != ''">
            ${_alias}PRODUCT_CODE = #{productCode},
        </if>
        <if test="productName != null and productName != ''">
            ${_alias}PRODUCT_NAME = #{productName},
        </if>
        <if test="reqYn != null and reqYn != ''">
            ${_alias}REQ_YN = #{reqYn},
        </if>
        <if test="modelName != null and modelName != ''">
            ${_alias}MODEL_NAME = #{modelName},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="nplaceZipcode != null and nplaceZipcode != ''">
            ${_alias}NPLACE_ZIPCODE = #{nplaceZipcode},
        </if>
        <if test="nplace != null and nplace != ''">
            ${_alias}NPLACE = #{nplace},
        </if>
        <if test="nplaceAddr2 != null and nplaceAddr2 != ''">
            ${_alias}NPLACE_ADDR2 = #{nplaceAddr2},
        </if>
        <if test="nplaceName != null and nplaceName != ''">
            ${_alias}NPLACE_NAME = #{nplaceName},
        </if>
        <if test="nplaceTel != null and nplaceTel != ''">
            ${_alias}NPLACE_TEL = #{nplaceTel},
        </if>
        <if test="cancelReason != null and cancelReason != ''">
            ${_alias}CANCEL_REASON = #{cancelReason},
        </if>
    </sql>

    <update id="updateRentContract" parameterType="com.neofect.gts.core.services.rent.domain.RentContract">
        /* com.neofect.gts.core.services.rent.repository.RentContractRepository_.updateRentContract */

        UPDATE GTS2016.RENT_CONTRACT
        SET
             LEASE_DIV = #{leaseDiv}
            , PDEPT_ID = #{pdeptId}
            , CUST_ID = #{custId}
            , CUST_CODE = #{custCode}
            , CUST_NAME = #{custName}
            , PRODUCT_ID = #{productId}
            , QTY = #{qty}
            , DAMT = #{damt}
            , AMT = #{amt}
            , SUPPLY_AMT = #{supplyAmt}
            , VAT_AMT = #{vatAmt}
            , REMARK = #{remark}
            , CUST_GUBUN_DIV = #{custGubunDiv}
            , CUST_LEVEL_DIV = #{custLevelDiv}
            , APP_RATE_DIV = #{appRateDiv}
            , REDUCTION_DIV = #{reductionDiv}
            , MANAGE_NO = #{manageNo}
            , LONGTERM_DIV = #{longtermDiv}
            , START_DATE = #{startDate}
            , END_DATE = #{endDate}
            , PAY_AMT = #{payAmt}
            , REQ_AMT = #{reqAmt}
            , REMAIN_AMT = #{remainAmt}
            , MANAGE_OFFICE_DIV = #{manageOfficeDiv}
            , CARD_YN = #{cardYn}
            , RETURN_DATE = #{returnDate}
            , MMEMBER_ID = #{mmemberId}
            , INTRO_ID = #{introId}
            , INTRO_RATE = #{introRate}
            , LEASEPAY_DIV = #{leasepayDiv}
            , LEASPAY_YN = #{leaspayYn}
            , REQ_DATE = #{reqDate}
            , OUT_DATE = #{outDate}
            , CONT_YN = #{contYn}
            , PRODUCT_CODE = #{productCode}
            , PRODUCT_NAME = #{productName}
            , REQ_YN = #{reqYn}
            , MODEL_NAME = #{modelName}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , NPLACE_ZIPCODE = #{nplaceZipcode}
            , NPLACE = #{nplace}
            , NPLACE_ADDR2 = #{nplaceAddr2}
            , NPLACE_NAME = #{nplaceName}
            , NPLACE_TEL = #{nplaceTel}
            , CANCEL_REASON = #{cancelReason}
        WHERE
            DEPT_ID = #{deptId}
            AND R_ID = #{rId}
    </update>

    <update id="updateRentContractDynamic" parameterType="com.neofect.gts.core.services.rent.domain.RentContract">
        /* com.neofect.gts.core.services.rent.repository.RentContractRepository_.updateRentContractDynamic */

        UPDATE GTS2016.RENT_CONTRACT
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            DEPT_ID = #{deptId}
            AND R_ID = #{rId}
    </update>

    <delete id="deleteRentContract" parameterType="long">
        /* com.neofect.gts.core.services.rent.repository.RentContractRepository_.deleteRentContract */

        DELETE FROM GTS2016.RENT_CONTRACT
        WHERE
            DEPT_ID = #{deptId}
            AND R_ID = #{rId}
    </delete>

    <sql id="insert_values_">

        #{leaseDiv},
        #{pdeptId},
        #{custId},
        #{custCode},
        #{custName},
        #{productId},
        #{qty},
        #{damt},
        #{amt},
        #{supplyAmt},
        #{vatAmt},
        #{remark},
        #{custGubunDiv},
        #{custLevelDiv},
        #{appRateDiv},
        #{reductionDiv},
        #{manageNo},
        #{longtermDiv},
        #{startDate},
        #{endDate},
        #{payAmt},
        #{reqAmt},
        #{remainAmt},
        #{manageOfficeDiv},
        #{cardYn},
        #{returnDate},
        #{mmemberId},
        #{introId},
        #{introRate},
        #{leasepayDiv},
        #{leaspayYn},
        #{reqDate},
        #{outDate},
        #{contYn},
        #{productCode},
        #{productName},
        #{reqYn},
        #{modelName},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{nplaceZipcode},
        #{nplace},
        #{nplaceAddr2},
        #{nplaceName},
        #{nplaceTel},
        #{cancelReason}
    </sql>

    <insert id="insertRentContract">
        /* com.neofect.gts.core.services.rent.repository.RentContractRepository_.insertRentContract */


        INSERT INTO GTS2016.RENT_CONTRACT
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

