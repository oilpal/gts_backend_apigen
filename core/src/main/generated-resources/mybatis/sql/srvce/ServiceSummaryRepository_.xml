<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_">

    <resultMap id="simpleServiceSummaryResult_" type="com.neofect.gts.core.services.srvce.domain.ServiceSummary">
        
        <id     property="custId" column="CUST_ID"/>
        
        <id     property="deptId" column="DEPT_ID"/>
        
        <id     property="yyyymm" column="YYYYMM"/>
        
        <id     property="seq" column="SEQ"/>
        
        <result property="stime" column="STIME"/>
        
        <result property="smin" column="SMIN"/>
        
        <result property="etime" column="ETIME"/>
        
        <result property="emin" column="EMIN"/>
        
        <result property="productId" column="PRODUCT_ID"/>
        
        <result property="serviceAmt" column="SERVICE_AMT"/>
        
        <result property="serviceDiv" column="SERVICE_DIV"/>
        
        <result property="productCode" column="PRODUCT_CODE"/>
        
        <result property="productName" column="PRODUCT_NAME"/>
        
        <result property="custLevel" column="CUST_LEVEL"/>
        
        <result property="appRate" column="APP_RATE"/>
        
        <result property="serviceCnt" column="SERVICE_CNT"/>
        
        <result property="totalAmt" column="TOTAL_AMT"/>
        
        <result property="serviceDays" column="SERVICE_DAYS"/>
        
        <result property="totalBAmt" column="TOTAL_B_AMT"/>
        
        <result property="memberId" column="MEMBER_ID"/>
        
        <result property="serviceYn" column="SERVICE_YN"/>
    </resultMap>

    <sql id="simpleServiceSummaryCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="custIds != null and !custIds.isEmpty()">
            AND ${_alias}CUST_ID IN <foreach collection="custIds" item="custIdValue" open="(" close=")" separator=",">#{ custIdValue }</foreach>
        </if>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="yyyymms != null and !yyyymms.isEmpty()">
            AND ${_alias}YYYYMM IN <foreach collection="yyyymms" item="yyyymmValue" open="(" close=")" separator=",">#{ yyyymmValue }</foreach>
        </if>
        <if test="seqs != null and !seqs.isEmpty()">
            AND ${_alias}SEQ IN <foreach collection="seqs" item="seqValue" open="(" close=")" separator=",">#{ seqValue }</foreach>
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="yyyymm != null and yyyymm != ''">
            AND ${_alias}YYYYMM = #{yyyymm}
        </if>
        <if test="seq != null">
            AND ${_alias}SEQ = #{seq}
        </if>
        <if test="stime != null and stime != ''">
            AND ${_alias}STIME = #{stime}
        </if>
        <if test="smin != null and smin != ''">
            AND ${_alias}SMIN = #{smin}
        </if>
        <if test="etime != null and etime != ''">
            AND ${_alias}ETIME = #{etime}
        </if>
        <if test="emin != null and emin != ''">
            AND ${_alias}EMIN = #{emin}
        </if>
        <if test="productId != null">
            AND ${_alias}PRODUCT_ID = #{productId}
        </if>
        <if test="serviceAmt != null">
            AND ${_alias}SERVICE_AMT = #{serviceAmt}
        </if>
        <if test="serviceDiv != null and serviceDiv != ''">
            AND ${_alias}SERVICE_DIV = #{serviceDiv}
        </if>
        <if test="productCode != null and productCode != ''">
            AND ${_alias}PRODUCT_CODE = #{productCode}
        </if>
        <if test="productName != null and productName != ''">
            AND ${_alias}PRODUCT_NAME = #{productName}
        </if>
        <if test="custLevel != null and custLevel != ''">
            AND ${_alias}CUST_LEVEL = #{custLevel}
        </if>
        <if test="appRate != null and appRate != ''">
            AND ${_alias}APP_RATE = #{appRate}
        </if>
        <if test="serviceCnt != null">
            AND ${_alias}SERVICE_CNT = #{serviceCnt}
        </if>
        <if test="totalAmt != null">
            AND ${_alias}TOTAL_AMT = #{totalAmt}
        </if>
        <if test="serviceDays != null and serviceDays != ''">
            AND ${_alias}SERVICE_DAYS = #{serviceDays}
        </if>
        <if test="totalBAmt != null">
            AND ${_alias}TOTAL_B_AMT = #{totalBAmt}
        </if>
        <if test="memberId != null and memberId != ''">
            AND ${_alias}MEMBER_ID = #{memberId}
        </if>
        <if test="serviceYn != null and serviceYn != ''">
            AND ${_alias}SERVICE_YN = #{serviceYn}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}YYYYMM AS ${_asPrefix}YYYYMM, ${_alias}SEQ AS ${_asPrefix}SEQ, ${_alias}STIME AS ${_asPrefix}STIME, ${_alias}SMIN AS ${_asPrefix}SMIN, ${_alias}ETIME AS ${_asPrefix}ETIME, ${_alias}EMIN AS ${_asPrefix}EMIN, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}SERVICE_DIV AS ${_asPrefix}SERVICE_DIV, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}CUST_LEVEL AS ${_asPrefix}CUST_LEVEL, ${_alias}APP_RATE AS ${_asPrefix}APP_RATE, ${_alias}SERVICE_CNT AS ${_asPrefix}SERVICE_CNT, ${_alias}TOTAL_AMT AS ${_asPrefix}TOTAL_AMT, ${_alias}SERVICE_DAYS AS ${_asPrefix}SERVICE_DAYS, ${_alias}TOTAL_B_AMT AS ${_asPrefix}TOTAL_B_AMT, ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}SERVICE_YN AS ${_asPrefix}SERVICE_YN        </when>
        <otherwise>
            ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}YYYYMM, ${_alias}SEQ, ${_alias}STIME, ${_alias}SMIN, ${_alias}ETIME, ${_alias}EMIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}SERVICE_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}CUST_LEVEL, ${_alias}APP_RATE, ${_alias}SERVICE_CNT, ${_alias}TOTAL_AMT, ${_alias}SERVICE_DAYS, ${_alias}TOTAL_B_AMT, ${_alias}MEMBER_ID, ${_alias}SERVICE_YN        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}STIME AS ${_asPrefix}STIME, ${_alias}SMIN AS ${_asPrefix}SMIN, ${_alias}ETIME AS ${_asPrefix}ETIME, ${_alias}EMIN AS ${_asPrefix}EMIN, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}SERVICE_DIV AS ${_asPrefix}SERVICE_DIV, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}CUST_LEVEL AS ${_asPrefix}CUST_LEVEL, ${_alias}APP_RATE AS ${_asPrefix}APP_RATE, ${_alias}SERVICE_CNT AS ${_asPrefix}SERVICE_CNT, ${_alias}TOTAL_AMT AS ${_asPrefix}TOTAL_AMT, ${_alias}SERVICE_DAYS AS ${_asPrefix}SERVICE_DAYS, ${_alias}TOTAL_B_AMT AS ${_asPrefix}TOTAL_B_AMT, ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}SERVICE_YN AS ${_asPrefix}SERVICE_YN        </when>
        <otherwise>
            ${_alias}STIME, ${_alias}SMIN, ${_alias}ETIME, ${_alias}EMIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}SERVICE_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}CUST_LEVEL, ${_alias}APP_RATE, ${_alias}SERVICE_CNT, ${_alias}TOTAL_AMT, ${_alias}SERVICE_DAYS, ${_alias}TOTAL_B_AMT, ${_alias}MEMBER_ID, ${_alias}SERVICE_YN        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}YYYYMM, ${_alias}SEQ, ${_alias}STIME, ${_alias}SMIN, ${_alias}ETIME, ${_alias}EMIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}SERVICE_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}CUST_LEVEL, ${_alias}APP_RATE, ${_alias}SERVICE_CNT, ${_alias}TOTAL_AMT, ${_alias}SERVICE_DAYS, ${_alias}TOTAL_B_AMT, ${_alias}MEMBER_ID, ${_alias}SERVICE_YN    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}STIME, ${_alias}SMIN, ${_alias}ETIME, ${_alias}EMIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}SERVICE_DIV, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}CUST_LEVEL, ${_alias}APP_RATE, ${_alias}SERVICE_CNT, ${_alias}TOTAL_AMT, ${_alias}SERVICE_DAYS, ${_alias}TOTAL_B_AMT, ${_alias}MEMBER_ID, ${_alias}SERVICE_YN    </sql>

    <select id="simpleGetServiceSummary" parameterType="long" resultMap="simpleServiceSummaryResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_.simpleGetServiceSummary */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SERVICE_SUMMARY
        WHERE
        CUST_ID = #{custId}
        AND DEPT_ID = #{deptId}
        AND YYYYMM = #{yyyymm}
        AND SEQ = #{seq}
	</select>

    <select id="simpleListServiceSummaryCnt" resultType="int">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_.simpleListServiceSummaryCnt */

        SELECT COUNT(*)
        FROM GTS2016.SERVICE_SUMMARY
        <include refid="simpleServiceSummaryCondition_" />
    </select>

    <select id="simpleListServiceSummary" resultMap="simpleServiceSummaryResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_.simpleListServiceSummary */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SERVICE_SUMMARY
        <include refid="simpleServiceSummaryCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="stime != null and stime != ''">
            ${_alias}STIME = #{stime},
        </if>
        <if test="smin != null and smin != ''">
            ${_alias}SMIN = #{smin},
        </if>
        <if test="etime != null and etime != ''">
            ${_alias}ETIME = #{etime},
        </if>
        <if test="emin != null and emin != ''">
            ${_alias}EMIN = #{emin},
        </if>
        <if test="productId != null">
            ${_alias}PRODUCT_ID = #{productId},
        </if>
        <if test="serviceAmt != null">
            ${_alias}SERVICE_AMT = #{serviceAmt},
        </if>
        <if test="serviceDiv != null and serviceDiv != ''">
            ${_alias}SERVICE_DIV = #{serviceDiv},
        </if>
        <if test="productCode != null and productCode != ''">
            ${_alias}PRODUCT_CODE = #{productCode},
        </if>
        <if test="productName != null and productName != ''">
            ${_alias}PRODUCT_NAME = #{productName},
        </if>
        <if test="custLevel != null and custLevel != ''">
            ${_alias}CUST_LEVEL = #{custLevel},
        </if>
        <if test="appRate != null and appRate != ''">
            ${_alias}APP_RATE = #{appRate},
        </if>
        <if test="serviceCnt != null">
            ${_alias}SERVICE_CNT = #{serviceCnt},
        </if>
        <if test="totalAmt != null">
            ${_alias}TOTAL_AMT = #{totalAmt},
        </if>
        <if test="serviceDays != null and serviceDays != ''">
            ${_alias}SERVICE_DAYS = #{serviceDays},
        </if>
        <if test="totalBAmt != null">
            ${_alias}TOTAL_B_AMT = #{totalBAmt},
        </if>
        <if test="memberId != null and memberId != ''">
            ${_alias}MEMBER_ID = #{memberId},
        </if>
        <if test="serviceYn != null and serviceYn != ''">
            ${_alias}SERVICE_YN = #{serviceYn},
        </if>
    </sql>

    <update id="updateServiceSummary" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSummary">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_.updateServiceSummary */

        UPDATE GTS2016.SERVICE_SUMMARY
        SET
             STIME = #{stime}
            , SMIN = #{smin}
            , ETIME = #{etime}
            , EMIN = #{emin}
            , PRODUCT_ID = #{productId}
            , SERVICE_AMT = #{serviceAmt}
            , SERVICE_DIV = #{serviceDiv}
            , PRODUCT_CODE = #{productCode}
            , PRODUCT_NAME = #{productName}
            , CUST_LEVEL = #{custLevel}
            , APP_RATE = #{appRate}
            , SERVICE_CNT = #{serviceCnt}
            , TOTAL_AMT = #{totalAmt}
            , SERVICE_DAYS = #{serviceDays}
            , TOTAL_B_AMT = #{totalBAmt}
            , MEMBER_ID = #{memberId}
            , SERVICE_YN = #{serviceYn}
        WHERE
            CUST_ID = #{custId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND SEQ = #{seq}
    </update>

    <update id="updateServiceSummaryDynamic" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSummary">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_.updateServiceSummaryDynamic */

        UPDATE GTS2016.SERVICE_SUMMARY
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            CUST_ID = #{custId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND SEQ = #{seq}
    </update>

    <delete id="deleteServiceSummary" parameterType="long">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_.deleteServiceSummary */

        DELETE FROM GTS2016.SERVICE_SUMMARY
        WHERE
            CUST_ID = #{custId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND SEQ = #{seq}
    </delete>

    <sql id="insert_values_">

        #{stime},
        #{smin},
        #{etime},
        #{emin},
        #{productId},
        #{serviceAmt},
        #{serviceDiv},
        #{productCode},
        #{productName},
        #{custLevel},
        #{appRate},
        #{serviceCnt},
        #{totalAmt},
        #{serviceDays},
        #{totalBAmt},
        #{memberId},
        #{serviceYn}
    </sql>

    <insert id="insertServiceSummary">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummaryRepository_.insertServiceSummary */


        INSERT INTO GTS2016.SERVICE_SUMMARY
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

