<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_">

    <resultMap id="simpleServiceSupplyScheduleResult_" type="com.neofect.gts.core.services.srvce.domain.ServiceSupplySchedule">
        <!-- 고객ID -->
        <id     property="custId" column="CUST_ID"/>
        <!-- 계약순차 -->
        <id     property="contSeq" column="CONT_SEQ"/>
        <!-- 순번 -->
        <id     property="contItem" column="CONT_ITEM"/>
        <!-- 요일구분 -->
        <result property="weekDiv" column="WEEK_DIV"/>
        <!-- 시작시간 -->
        <result property="startTimeDiv" column="START_TIME_DIV"/>
        <!-- 시작분 -->
        <result property="startMinDiv" column="START_MIN_DIV"/>
        <!-- 종료시간 -->
        <result property="endTimeDiv" column="END_TIME_DIV"/>
        <!-- 종료분 -->
        <result property="endMinDiv" column="END_MIN_DIV"/>
        <!-- 담당자1 -->
        <result property="memberId1" column="MEMBER_ID1"/>
        <!-- 담당자2 -->
        <result property="memberId2" column="MEMBER_ID2"/>
        <!-- 품목ID -->
        <result property="productId" column="PRODUCT_ID"/>
        <!-- 품목코드 -->
        <result property="productCode" column="PRODUCT_CODE"/>
        <!-- 품목명 -->
        <result property="productName" column="PRODUCT_NAME"/>
        <!-- 급여수가 -->
        <result property="serviceAmt" column="SERVICE_AMT"/>
        <!-- 이인서비스구분   Y:이인서비스 N:일인서비스 -->
        <result property="dupliserviceYn" column="DUPLISERVICE_YN"/>
        <!-- 일괄생성여부 -->
        <result property="batchYn" column="BATCH_YN"/>
        <!-- 비고 -->
        <result property="remark" column="REMARK"/>
        
        <result property="payAmt" column="PAY_AMT"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        
        <result property="amt1" column="AMT_1"/>
        
        <result property="amt2" column="AMT_2"/>
        
        <result property="amt3" column="AMT_3"/>
        
        <result property="min1" column="MIN_1"/>
        
        <result property="min2" column="MIN_2"/>
        
        <result property="min3" column="MIN_3"/>
    </resultMap>

    <sql id="simpleServiceSupplyScheduleCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="custIds != null and !custIds.isEmpty()">
            AND ${_alias}CUST_ID IN <foreach collection="custIds" item="custIdValue" open="(" close=")" separator=",">#{ custIdValue }</foreach>
        </if>
        <if test="contSeqs != null and !contSeqs.isEmpty()">
            AND ${_alias}CONT_SEQ IN <foreach collection="contSeqs" item="contSeqValue" open="(" close=")" separator=",">#{ contSeqValue }</foreach>
        </if>
        <if test="contItems != null and !contItems.isEmpty()">
            AND ${_alias}CONT_ITEM IN <foreach collection="contItems" item="contItemValue" open="(" close=")" separator=",">#{ contItemValue }</foreach>
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="contSeq != null">
            AND ${_alias}CONT_SEQ = #{contSeq}
        </if>
        <if test="contItem != null">
            AND ${_alias}CONT_ITEM = #{contItem}
        </if>
        <if test="weekDiv != null and weekDiv != ''">
            AND ${_alias}WEEK_DIV = #{weekDiv}
        </if>
        <if test="startTimeDiv != null and startTimeDiv != ''">
            AND ${_alias}START_TIME_DIV = #{startTimeDiv}
        </if>
        <if test="startMinDiv != null and startMinDiv != ''">
            AND ${_alias}START_MIN_DIV = #{startMinDiv}
        </if>
        <if test="endTimeDiv != null and endTimeDiv != ''">
            AND ${_alias}END_TIME_DIV = #{endTimeDiv}
        </if>
        <if test="endMinDiv != null and endMinDiv != ''">
            AND ${_alias}END_MIN_DIV = #{endMinDiv}
        </if>
        <if test="memberId1 != null and memberId1 != ''">
            AND ${_alias}MEMBER_ID1 = #{memberId1}
        </if>
        <if test="memberId2 != null and memberId2 != ''">
            AND ${_alias}MEMBER_ID2 = #{memberId2}
        </if>
        <if test="productId != null">
            AND ${_alias}PRODUCT_ID = #{productId}
        </if>
        <if test="productCode != null and productCode != ''">
            AND ${_alias}PRODUCT_CODE = #{productCode}
        </if>
        <if test="productName != null and productName != ''">
            AND ${_alias}PRODUCT_NAME = #{productName}
        </if>
        <if test="serviceAmt != null">
            AND ${_alias}SERVICE_AMT = #{serviceAmt}
        </if>
        <if test="dupliserviceYn != null and dupliserviceYn != ''">
            AND ${_alias}DUPLISERVICE_YN = #{dupliserviceYn}
        </if>
        <if test="batchYn != null and batchYn != ''">
            AND ${_alias}BATCH_YN = #{batchYn}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="payAmt != null">
            AND ${_alias}PAY_AMT = #{payAmt}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="amt1 != null">
            AND ${_alias}AMT_1 = #{amt1}
        </if>
        <if test="amt2 != null">
            AND ${_alias}AMT_2 = #{amt2}
        </if>
        <if test="amt3 != null">
            AND ${_alias}AMT_3 = #{amt3}
        </if>
        <if test="min1 != null">
            AND ${_alias}MIN_1 = #{min1}
        </if>
        <if test="min2 != null">
            AND ${_alias}MIN_2 = #{min2}
        </if>
        <if test="min3 != null">
            AND ${_alias}MIN_3 = #{min3}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}CONT_SEQ AS ${_asPrefix}CONT_SEQ, ${_alias}CONT_ITEM AS ${_asPrefix}CONT_ITEM, ${_alias}WEEK_DIV AS ${_asPrefix}WEEK_DIV, ${_alias}START_TIME_DIV AS ${_asPrefix}START_TIME_DIV, ${_alias}START_MIN_DIV AS ${_asPrefix}START_MIN_DIV, ${_alias}END_TIME_DIV AS ${_asPrefix}END_TIME_DIV, ${_alias}END_MIN_DIV AS ${_asPrefix}END_MIN_DIV, ${_alias}MEMBER_ID1 AS ${_asPrefix}MEMBER_ID1, ${_alias}MEMBER_ID2 AS ${_asPrefix}MEMBER_ID2, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}DUPLISERVICE_YN AS ${_asPrefix}DUPLISERVICE_YN, ${_alias}BATCH_YN AS ${_asPrefix}BATCH_YN, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}AMT_1 AS ${_asPrefix}AMT_1, ${_alias}AMT_2 AS ${_asPrefix}AMT_2, ${_alias}AMT_3 AS ${_asPrefix}AMT_3, ${_alias}MIN_1 AS ${_asPrefix}MIN_1, ${_alias}MIN_2 AS ${_asPrefix}MIN_2, ${_alias}MIN_3 AS ${_asPrefix}MIN_3        </when>
        <otherwise>
            ${_alias}CUST_ID, ${_alias}CONT_SEQ, ${_alias}CONT_ITEM, ${_alias}WEEK_DIV, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}MEMBER_ID1, ${_alias}MEMBER_ID2, ${_alias}PRODUCT_ID, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}SERVICE_AMT, ${_alias}DUPLISERVICE_YN, ${_alias}BATCH_YN, ${_alias}REMARK, ${_alias}PAY_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}MIN_1, ${_alias}MIN_2, ${_alias}MIN_3        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}WEEK_DIV AS ${_asPrefix}WEEK_DIV, ${_alias}START_TIME_DIV AS ${_asPrefix}START_TIME_DIV, ${_alias}START_MIN_DIV AS ${_asPrefix}START_MIN_DIV, ${_alias}END_TIME_DIV AS ${_asPrefix}END_TIME_DIV, ${_alias}END_MIN_DIV AS ${_asPrefix}END_MIN_DIV, ${_alias}MEMBER_ID1 AS ${_asPrefix}MEMBER_ID1, ${_alias}MEMBER_ID2 AS ${_asPrefix}MEMBER_ID2, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}PRODUCT_CODE AS ${_asPrefix}PRODUCT_CODE, ${_alias}PRODUCT_NAME AS ${_asPrefix}PRODUCT_NAME, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}DUPLISERVICE_YN AS ${_asPrefix}DUPLISERVICE_YN, ${_alias}BATCH_YN AS ${_asPrefix}BATCH_YN, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}AMT_1 AS ${_asPrefix}AMT_1, ${_alias}AMT_2 AS ${_asPrefix}AMT_2, ${_alias}AMT_3 AS ${_asPrefix}AMT_3, ${_alias}MIN_1 AS ${_asPrefix}MIN_1, ${_alias}MIN_2 AS ${_asPrefix}MIN_2, ${_alias}MIN_3 AS ${_asPrefix}MIN_3        </when>
        <otherwise>
            ${_alias}WEEK_DIV, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}MEMBER_ID1, ${_alias}MEMBER_ID2, ${_alias}PRODUCT_ID, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}SERVICE_AMT, ${_alias}DUPLISERVICE_YN, ${_alias}BATCH_YN, ${_alias}REMARK, ${_alias}PAY_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}MIN_1, ${_alias}MIN_2, ${_alias}MIN_3        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}CUST_ID, ${_alias}CONT_SEQ, ${_alias}CONT_ITEM, ${_alias}WEEK_DIV, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}MEMBER_ID1, ${_alias}MEMBER_ID2, ${_alias}PRODUCT_ID, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}SERVICE_AMT, ${_alias}DUPLISERVICE_YN, ${_alias}BATCH_YN, ${_alias}REMARK, ${_alias}PAY_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}MIN_1, ${_alias}MIN_2, ${_alias}MIN_3    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}WEEK_DIV, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}MEMBER_ID1, ${_alias}MEMBER_ID2, ${_alias}PRODUCT_ID, ${_alias}PRODUCT_CODE, ${_alias}PRODUCT_NAME, ${_alias}SERVICE_AMT, ${_alias}DUPLISERVICE_YN, ${_alias}BATCH_YN, ${_alias}REMARK, ${_alias}PAY_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}MIN_1, ${_alias}MIN_2, ${_alias}MIN_3    </sql>

    <select id="simpleGetServiceSupplySchedule" parameterType="long" resultMap="simpleServiceSupplyScheduleResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.simpleGetServiceSupplySchedule */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SERVICE_SUPPLY_SCHEDULE
        WHERE
        CUST_ID = #{custId}
        AND CONT_SEQ = #{contSeq}
        AND CONT_ITEM = #{contItem}
	</select>

    <select id="simpleListServiceSupplyScheduleCnt" resultType="int">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.simpleListServiceSupplyScheduleCnt */

        SELECT COUNT(*)
        FROM GTS2016.SERVICE_SUPPLY_SCHEDULE
        <include refid="simpleServiceSupplyScheduleCondition_" />
    </select>

    <select id="simpleListServiceSupplySchedule" resultMap="simpleServiceSupplyScheduleResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.simpleListServiceSupplySchedule */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SERVICE_SUPPLY_SCHEDULE
        <include refid="simpleServiceSupplyScheduleCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="weekDiv != null and weekDiv != ''">
            ${_alias}WEEK_DIV = #{weekDiv},
        </if>
        <if test="startTimeDiv != null and startTimeDiv != ''">
            ${_alias}START_TIME_DIV = #{startTimeDiv},
        </if>
        <if test="startMinDiv != null and startMinDiv != ''">
            ${_alias}START_MIN_DIV = #{startMinDiv},
        </if>
        <if test="endTimeDiv != null and endTimeDiv != ''">
            ${_alias}END_TIME_DIV = #{endTimeDiv},
        </if>
        <if test="endMinDiv != null and endMinDiv != ''">
            ${_alias}END_MIN_DIV = #{endMinDiv},
        </if>
        <if test="memberId1 != null and memberId1 != ''">
            ${_alias}MEMBER_ID1 = #{memberId1},
        </if>
        <if test="memberId2 != null and memberId2 != ''">
            ${_alias}MEMBER_ID2 = #{memberId2},
        </if>
        <if test="productId != null">
            ${_alias}PRODUCT_ID = #{productId},
        </if>
        <if test="productCode != null and productCode != ''">
            ${_alias}PRODUCT_CODE = #{productCode},
        </if>
        <if test="productName != null and productName != ''">
            ${_alias}PRODUCT_NAME = #{productName},
        </if>
        <if test="serviceAmt != null">
            ${_alias}SERVICE_AMT = #{serviceAmt},
        </if>
        <if test="dupliserviceYn != null and dupliserviceYn != ''">
            ${_alias}DUPLISERVICE_YN = #{dupliserviceYn},
        </if>
        <if test="batchYn != null and batchYn != ''">
            ${_alias}BATCH_YN = #{batchYn},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="payAmt != null">
            ${_alias}PAY_AMT = #{payAmt},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="amt1 != null">
            ${_alias}AMT_1 = #{amt1},
        </if>
        <if test="amt2 != null">
            ${_alias}AMT_2 = #{amt2},
        </if>
        <if test="amt3 != null">
            ${_alias}AMT_3 = #{amt3},
        </if>
        <if test="min1 != null">
            ${_alias}MIN_1 = #{min1},
        </if>
        <if test="min2 != null">
            ${_alias}MIN_2 = #{min2},
        </if>
        <if test="min3 != null">
            ${_alias}MIN_3 = #{min3},
        </if>
    </sql>

    <update id="updateServiceSupplySchedule" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSupplySchedule">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.updateServiceSupplySchedule */

        UPDATE GTS2016.SERVICE_SUPPLY_SCHEDULE
        SET
             WEEK_DIV = #{weekDiv}
            , START_TIME_DIV = #{startTimeDiv}
            , START_MIN_DIV = #{startMinDiv}
            , END_TIME_DIV = #{endTimeDiv}
            , END_MIN_DIV = #{endMinDiv}
            , MEMBER_ID1 = #{memberId1}
            , MEMBER_ID2 = #{memberId2}
            , PRODUCT_ID = #{productId}
            , PRODUCT_CODE = #{productCode}
            , PRODUCT_NAME = #{productName}
            , SERVICE_AMT = #{serviceAmt}
            , DUPLISERVICE_YN = #{dupliserviceYn}
            , BATCH_YN = #{batchYn}
            , REMARK = #{remark}
            , PAY_AMT = #{payAmt}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , AMT_1 = #{amt1}
            , AMT_2 = #{amt2}
            , AMT_3 = #{amt3}
            , MIN_1 = #{min1}
            , MIN_2 = #{min2}
            , MIN_3 = #{min3}
        WHERE
            CUST_ID = #{custId}
            AND CONT_SEQ = #{contSeq}
            AND CONT_ITEM = #{contItem}
    </update>

    <update id="updateServiceSupplyScheduleDynamic" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSupplySchedule">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.updateServiceSupplyScheduleDynamic */

        UPDATE GTS2016.SERVICE_SUPPLY_SCHEDULE
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            CUST_ID = #{custId}
            AND CONT_SEQ = #{contSeq}
            AND CONT_ITEM = #{contItem}
    </update>

    <delete id="deleteServiceSupplySchedule" parameterType="long">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.deleteServiceSupplySchedule */

        DELETE FROM GTS2016.SERVICE_SUPPLY_SCHEDULE
        WHERE
            CUST_ID = #{custId}
            AND CONT_SEQ = #{contSeq}
            AND CONT_ITEM = #{contItem}
    </delete>

    <sql id="insert_values_">

        #{weekDiv},
        #{startTimeDiv},
        #{startMinDiv},
        #{endTimeDiv},
        #{endMinDiv},
        #{memberId1},
        #{memberId2},
        #{productId},
        #{productCode},
        #{productName},
        #{serviceAmt},
        #{dupliserviceYn},
        #{batchYn},
        #{remark},
        #{payAmt},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{amt1},
        #{amt2},
        #{amt3},
        #{min1},
        #{min2},
        #{min3}
    </sql>

    <insert id="insertServiceSupplySchedule">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.insertServiceSupplySchedule */


        INSERT INTO GTS2016.SERVICE_SUPPLY_SCHEDULE
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

