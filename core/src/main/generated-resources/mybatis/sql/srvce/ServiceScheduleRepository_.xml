<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_">

    <resultMap id="simpleServiceScheduleResult_" type="com.neofect.gts.core.services.srvce.domain.ServiceSchedule">
        <!-- 스케쥴ID -->
        <id     property="id" column="S_ID"/>
        <!-- 지사ID -->
        <result property="deptId" column="DEPT_ID"/>
        <!-- 사번 -->
        <result property="memberId" column="MEMBER_ID"/>
        <!-- 예정일자 -->
        <result property="planDate" column="PLAN_DATE"/>
        <!-- 시작시간 -->
        <result property="startTimeDiv" column="START_TIME_DIV"/>
        <!-- 시작분 -->
        <result property="startMinDiv" column="START_MIN_DIV"/>
        <!-- 종료시간 -->
        <result property="endTimeDiv" column="END_TIME_DIV"/>
        <!-- 종료분 -->
        <result property="endMinDiv" column="END_MIN_DIV"/>
        <!-- 서비스분수 -->
        <result property="serviceMin" column="SERVICE_MIN"/>
        <!-- 서비스코드 -->
        <result property="productId" column="PRODUCT_ID"/>
        <!-- 서비스단가 -->
        <result property="serviceAmt" column="SERVICE_AMT"/>
        <!-- 본인부담금 -->
        <result property="payAmt" column="PAY_AMT"/>
        <!-- 청구금 -->
        <result property="reqAmt" column="REQ_AMT"/>
        
        <result property="remainAmt" column="REMAIN_AMT"/>
        <!-- 고객ID -->
        <result property="custId" column="CUST_ID"/>
        <!-- 비고 -->
        <result property="remark" column="REMARK"/>
        <!-- 제공 1, 미제공 0 -->
        <result property="serviceYn" column="SERVICE_YN"/>
        <!-- 피대행자사번 -->
        <result property="wonMemberId" column="WON_MEMBER_ID"/>
        <!-- 고객불만사항 -->
        <result property="complainMemo" column="COMPLAIN_MEMO"/>
        <!-- 요양보호사메모 -->
        <result property="carerMemo" column="CARER_MEMO"/>
        <!-- 입력자ID -->
        <result property="enterId" column="ENTER_ID"/>
        <!-- 입력일자 -->
        <result property="enterDate" column="ENTER_DATE"/>
        <!-- 수정자ID -->
        <result property="editId" column="EDIT_ID"/>
        <!-- 수정일자 -->
        <result property="editDate" column="EDIT_DATE"/>
        <!-- SMS발송여부 최초 N, 발송시 Y 자료수정/삭제시 N세팅 -->
        <result property="smsYn" column="SMS_YN"/>
        <!-- T임시(금액계산필요)    I 입력(금액계산완료)    (사용안함,  U 수정    D 취소 ) -->
        <result property="status" column="STATUS"/>
        <!-- Y 확인  N 미확인 -->
        <result property="carerMemoyn" column="CARER_MEMOYN"/>
        <!-- 요양사메모확인일 -->
        <result property="carerDate" column="CARER_DATE"/>
        <!-- Y 확인  N 미확인 -->
        <result property="deptMemoyn" column="DEPT_MEMOYN"/>
        <!-- 지사장메모확인일 -->
        <result property="deptDate" column="DEPT_DATE"/>
        <!-- 서비스미제공구분 -->
        <result property="serviceYnDiv" column="SERVICE_YN_DIV"/>
        <!-- 서비스미제공사유 -->
        <result property="serviceRemark" column="SERVICE_REMARK"/>
        <!-- 2인서비스여부 -->
        <result property="dupliserviceYn" column="DUPLISERVICE_YN"/>
        
        <result property="contSeq" column="CONT_SEQ"/>
        
        <result property="discountAmt" column="DISCOUNT_AMT"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 서비스분수_일반 -->
        <result property="serviceMin1" column="SERVICE_MIN_1"/>
        <!-- 서비스분수_야간(20%) -->
        <result property="serviceMin2" column="SERVICE_MIN_2"/>
        <!-- 서비스분수_심야(30%) -->
        <result property="serviceMin3" column="SERVICE_MIN_3"/>
        <!-- 기본 서비스 단가 -->
        <result property="serviceCost" column="SERVICE_COST"/>
        <!-- 서비스 수가(일반) -->
        <result property="amt1" column="AMT_1"/>
        <!-- 서비스 수가(야간할증) -->
        <result property="amt2" column="AMT_2"/>
        <!-- 서비스 수가(심야할증) -->
        <result property="amt3" column="AMT_3"/>
        <!-- 가족케어여부 -->
        <result property="familyYn" column="FAMILY_YN"/>
        <!-- 가족관계(0100, 처) 처일때 제약조건 있음 -->
        <result property="familyRef" column="FAMILY_REF"/>
        <!-- 수가인정(분) -->
        <result property="minReal" column="MIN_REAL"/>
        <!-- 2인서비스순번 -->
        <result property="dupliserviceSeq" column="DUPLISERVICE_SEQ"/>
    </resultMap>

    <sql id="simpleServiceScheduleCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="ids != null and !ids.isEmpty()">
            AND ${_alias}S_ID IN <foreach collection="ids" item="idValue" open="(" close=")" separator=",">#{ idValue }</foreach>
        </if>
        <if test="id != null">
            AND ${_alias}S_ID = #{id}
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="memberId != null and memberId != ''">
            AND ${_alias}MEMBER_ID = #{memberId}
        </if>
        <if test="planDate != null and planDate.enabled == true">
            <if test="planDate.from != null and planDate.from != ''">
            AND ${_alias}PLAN_DATE >= TO_DATE(#{planDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="planDate.to != null and planDate.to != ''">
            AND ${_alias}PLAN_DATE <![CDATA[ < ]]> TO_DATE(#{planDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="startTimeDiv != null and startTimeDiv != ''">
            AND ${_alias}START_TIME_DIV = #{startTimeDiv}
        </if>
        <if test="startMinDiv != null and startMinDiv != ''">
            AND ${_alias}START_MIN_DIV = #{startMinDiv}
        </if>
        <if test="endTimeDiv != null and endTimeDiv != ''">
            AND ${_alias}END_TIME_DIV = #{endTimeDiv}
        </if>
        <if test="endMinDiv != null and endMinDiv != ''">
            AND ${_alias}END_MIN_DIV = #{endMinDiv}
        </if>
        <if test="serviceMin != null and serviceMin != ''">
            AND ${_alias}SERVICE_MIN = #{serviceMin}
        </if>
        <if test="productId != null">
            AND ${_alias}PRODUCT_ID = #{productId}
        </if>
        <if test="serviceAmt != null">
            AND ${_alias}SERVICE_AMT = #{serviceAmt}
        </if>
        <if test="payAmt != null">
            AND ${_alias}PAY_AMT = #{payAmt}
        </if>
        <if test="reqAmt != null">
            AND ${_alias}REQ_AMT = #{reqAmt}
        </if>
        <if test="remainAmt != null">
            AND ${_alias}REMAIN_AMT = #{remainAmt}
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="remark != null and remark != ''">
            AND ${_alias}REMARK = #{remark}
        </if>
        <if test="serviceYn != null and serviceYn != ''">
            AND ${_alias}SERVICE_YN = #{serviceYn}
        </if>
        <if test="wonMemberId != null and wonMemberId != ''">
            AND ${_alias}WON_MEMBER_ID = #{wonMemberId}
        </if>
        <if test="complainMemo != null and complainMemo != ''">
            AND ${_alias}COMPLAIN_MEMO = #{complainMemo}
        </if>
        <if test="carerMemo != null and carerMemo != ''">
            AND ${_alias}CARER_MEMO = #{carerMemo}
        </if>
        <if test="enterId != null and enterId != ''">
            AND ${_alias}ENTER_ID = #{enterId}
        </if>
        <if test="enterDate != null and enterDate.enabled == true">
            <if test="enterDate.from != null and enterDate.from != ''">
            AND ${_alias}ENTER_DATE >= TO_DATE(#{enterDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="enterDate.to != null and enterDate.to != ''">
            AND ${_alias}ENTER_DATE <![CDATA[ < ]]> TO_DATE(#{enterDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="editId != null and editId != ''">
            AND ${_alias}EDIT_ID = #{editId}
        </if>
        <if test="editDate != null and editDate.enabled == true">
            <if test="editDate.from != null and editDate.from != ''">
            AND ${_alias}EDIT_DATE >= TO_DATE(#{editDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="editDate.to != null and editDate.to != ''">
            AND ${_alias}EDIT_DATE <![CDATA[ < ]]> TO_DATE(#{editDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="smsYn != null and smsYn != ''">
            AND ${_alias}SMS_YN = #{smsYn}
        </if>
        <if test="status != null and status != ''">
            AND ${_alias}STATUS = #{status}
        </if>
        <if test="carerMemoyn != null and carerMemoyn != ''">
            AND ${_alias}CARER_MEMOYN = #{carerMemoyn}
        </if>
        <if test="carerDate != null and carerDate.enabled == true">
            <if test="carerDate.from != null and carerDate.from != ''">
            AND ${_alias}CARER_DATE >= TO_DATE(#{carerDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="carerDate.to != null and carerDate.to != ''">
            AND ${_alias}CARER_DATE <![CDATA[ < ]]> TO_DATE(#{carerDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="deptMemoyn != null and deptMemoyn != ''">
            AND ${_alias}DEPT_MEMOYN = #{deptMemoyn}
        </if>
        <if test="deptDate != null and deptDate.enabled == true">
            <if test="deptDate.from != null and deptDate.from != ''">
            AND ${_alias}DEPT_DATE >= TO_DATE(#{deptDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="deptDate.to != null and deptDate.to != ''">
            AND ${_alias}DEPT_DATE <![CDATA[ < ]]> TO_DATE(#{deptDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="serviceYnDiv != null and serviceYnDiv != ''">
            AND ${_alias}SERVICE_YN_DIV = #{serviceYnDiv}
        </if>
        <if test="serviceRemark != null and serviceRemark != ''">
            AND ${_alias}SERVICE_REMARK = #{serviceRemark}
        </if>
        <if test="dupliserviceYn != null and dupliserviceYn != ''">
            AND ${_alias}DUPLISERVICE_YN = #{dupliserviceYn}
        </if>
        <if test="contSeq != null">
            AND ${_alias}CONT_SEQ = #{contSeq}
        </if>
        <if test="discountAmt != null">
            AND ${_alias}DISCOUNT_AMT = #{discountAmt}
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="serviceMin1 != null">
            AND ${_alias}SERVICE_MIN_1 = #{serviceMin1}
        </if>
        <if test="serviceMin2 != null">
            AND ${_alias}SERVICE_MIN_2 = #{serviceMin2}
        </if>
        <if test="serviceMin3 != null">
            AND ${_alias}SERVICE_MIN_3 = #{serviceMin3}
        </if>
        <if test="serviceCost != null">
            AND ${_alias}SERVICE_COST = #{serviceCost}
        </if>
        <if test="amt1 != null">
            AND ${_alias}AMT_1 = #{amt1}
        </if>
        <if test="amt2 != null">
            AND ${_alias}AMT_2 = #{amt2}
        </if>
        <if test="amt3 != null">
            AND ${_alias}AMT_3 = #{amt3}
        </if>
        <if test="familyYn != null and familyYn != ''">
            AND ${_alias}FAMILY_YN = #{familyYn}
        </if>
        <if test="familyRef != null and familyRef != ''">
            AND ${_alias}FAMILY_REF = #{familyRef}
        </if>
        <if test="minReal != null">
            AND ${_alias}MIN_REAL = #{minReal}
        </if>
        <if test="dupliserviceSeq != null">
            AND ${_alias}DUPLISERVICE_SEQ = #{dupliserviceSeq}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}S_ID AS ${_asPrefix}S_ID, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}PLAN_DATE AS ${_asPrefix}PLAN_DATE, ${_alias}START_TIME_DIV AS ${_asPrefix}START_TIME_DIV, ${_alias}START_MIN_DIV AS ${_asPrefix}START_MIN_DIV, ${_alias}END_TIME_DIV AS ${_asPrefix}END_TIME_DIV, ${_alias}END_MIN_DIV AS ${_asPrefix}END_MIN_DIV, ${_alias}SERVICE_MIN AS ${_asPrefix}SERVICE_MIN, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}REMAIN_AMT AS ${_asPrefix}REMAIN_AMT, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}SERVICE_YN AS ${_asPrefix}SERVICE_YN, ${_alias}WON_MEMBER_ID AS ${_asPrefix}WON_MEMBER_ID, ${_alias}COMPLAIN_MEMO AS ${_asPrefix}COMPLAIN_MEMO, ${_alias}CARER_MEMO AS ${_asPrefix}CARER_MEMO, ${_alias}ENTER_ID AS ${_asPrefix}ENTER_ID, ${_alias}ENTER_DATE AS ${_asPrefix}ENTER_DATE, ${_alias}EDIT_ID AS ${_asPrefix}EDIT_ID, ${_alias}EDIT_DATE AS ${_asPrefix}EDIT_DATE, ${_alias}SMS_YN AS ${_asPrefix}SMS_YN, ${_alias}STATUS AS ${_asPrefix}STATUS, ${_alias}CARER_MEMOYN AS ${_asPrefix}CARER_MEMOYN, ${_alias}CARER_DATE AS ${_asPrefix}CARER_DATE, ${_alias}DEPT_MEMOYN AS ${_asPrefix}DEPT_MEMOYN, ${_alias}DEPT_DATE AS ${_asPrefix}DEPT_DATE, ${_alias}SERVICE_YN_DIV AS ${_asPrefix}SERVICE_YN_DIV, ${_alias}SERVICE_REMARK AS ${_asPrefix}SERVICE_REMARK, ${_alias}DUPLISERVICE_YN AS ${_asPrefix}DUPLISERVICE_YN, ${_alias}CONT_SEQ AS ${_asPrefix}CONT_SEQ, ${_alias}DISCOUNT_AMT AS ${_asPrefix}DISCOUNT_AMT, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}SERVICE_MIN_1 AS ${_asPrefix}SERVICE_MIN_1, ${_alias}SERVICE_MIN_2 AS ${_asPrefix}SERVICE_MIN_2, ${_alias}SERVICE_MIN_3 AS ${_asPrefix}SERVICE_MIN_3, ${_alias}SERVICE_COST AS ${_asPrefix}SERVICE_COST, ${_alias}AMT_1 AS ${_asPrefix}AMT_1, ${_alias}AMT_2 AS ${_asPrefix}AMT_2, ${_alias}AMT_3 AS ${_asPrefix}AMT_3, ${_alias}FAMILY_YN AS ${_asPrefix}FAMILY_YN, ${_alias}FAMILY_REF AS ${_asPrefix}FAMILY_REF, ${_alias}MIN_REAL AS ${_asPrefix}MIN_REAL, ${_alias}DUPLISERVICE_SEQ AS ${_asPrefix}DUPLISERVICE_SEQ        </when>
        <otherwise>
            ${_alias}S_ID, ${_alias}DEPT_ID, ${_alias}MEMBER_ID, ${_alias}PLAN_DATE, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}SERVICE_MIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}CUST_ID, ${_alias}REMARK, ${_alias}SERVICE_YN, ${_alias}WON_MEMBER_ID, ${_alias}COMPLAIN_MEMO, ${_alias}CARER_MEMO, ${_alias}ENTER_ID, ${_alias}ENTER_DATE, ${_alias}EDIT_ID, ${_alias}EDIT_DATE, ${_alias}SMS_YN, ${_alias}STATUS, ${_alias}CARER_MEMOYN, ${_alias}CARER_DATE, ${_alias}DEPT_MEMOYN, ${_alias}DEPT_DATE, ${_alias}SERVICE_YN_DIV, ${_alias}SERVICE_REMARK, ${_alias}DUPLISERVICE_YN, ${_alias}CONT_SEQ, ${_alias}DISCOUNT_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}SERVICE_MIN_1, ${_alias}SERVICE_MIN_2, ${_alias}SERVICE_MIN_3, ${_alias}SERVICE_COST, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}FAMILY_YN, ${_alias}FAMILY_REF, ${_alias}MIN_REAL, ${_alias}DUPLISERVICE_SEQ        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}MEMBER_ID AS ${_asPrefix}MEMBER_ID, ${_alias}PLAN_DATE AS ${_asPrefix}PLAN_DATE, ${_alias}START_TIME_DIV AS ${_asPrefix}START_TIME_DIV, ${_alias}START_MIN_DIV AS ${_asPrefix}START_MIN_DIV, ${_alias}END_TIME_DIV AS ${_asPrefix}END_TIME_DIV, ${_alias}END_MIN_DIV AS ${_asPrefix}END_MIN_DIV, ${_alias}SERVICE_MIN AS ${_asPrefix}SERVICE_MIN, ${_alias}PRODUCT_ID AS ${_asPrefix}PRODUCT_ID, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}REMAIN_AMT AS ${_asPrefix}REMAIN_AMT, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}REMARK AS ${_asPrefix}REMARK, ${_alias}SERVICE_YN AS ${_asPrefix}SERVICE_YN, ${_alias}WON_MEMBER_ID AS ${_asPrefix}WON_MEMBER_ID, ${_alias}COMPLAIN_MEMO AS ${_asPrefix}COMPLAIN_MEMO, ${_alias}CARER_MEMO AS ${_asPrefix}CARER_MEMO, ${_alias}ENTER_ID AS ${_asPrefix}ENTER_ID, ${_alias}ENTER_DATE AS ${_asPrefix}ENTER_DATE, ${_alias}EDIT_ID AS ${_asPrefix}EDIT_ID, ${_alias}EDIT_DATE AS ${_asPrefix}EDIT_DATE, ${_alias}SMS_YN AS ${_asPrefix}SMS_YN, ${_alias}STATUS AS ${_asPrefix}STATUS, ${_alias}CARER_MEMOYN AS ${_asPrefix}CARER_MEMOYN, ${_alias}CARER_DATE AS ${_asPrefix}CARER_DATE, ${_alias}DEPT_MEMOYN AS ${_asPrefix}DEPT_MEMOYN, ${_alias}DEPT_DATE AS ${_asPrefix}DEPT_DATE, ${_alias}SERVICE_YN_DIV AS ${_asPrefix}SERVICE_YN_DIV, ${_alias}SERVICE_REMARK AS ${_asPrefix}SERVICE_REMARK, ${_alias}DUPLISERVICE_YN AS ${_asPrefix}DUPLISERVICE_YN, ${_alias}CONT_SEQ AS ${_asPrefix}CONT_SEQ, ${_alias}DISCOUNT_AMT AS ${_asPrefix}DISCOUNT_AMT, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}SERVICE_MIN_1 AS ${_asPrefix}SERVICE_MIN_1, ${_alias}SERVICE_MIN_2 AS ${_asPrefix}SERVICE_MIN_2, ${_alias}SERVICE_MIN_3 AS ${_asPrefix}SERVICE_MIN_3, ${_alias}SERVICE_COST AS ${_asPrefix}SERVICE_COST, ${_alias}AMT_1 AS ${_asPrefix}AMT_1, ${_alias}AMT_2 AS ${_asPrefix}AMT_2, ${_alias}AMT_3 AS ${_asPrefix}AMT_3, ${_alias}FAMILY_YN AS ${_asPrefix}FAMILY_YN, ${_alias}FAMILY_REF AS ${_asPrefix}FAMILY_REF, ${_alias}MIN_REAL AS ${_asPrefix}MIN_REAL, ${_alias}DUPLISERVICE_SEQ AS ${_asPrefix}DUPLISERVICE_SEQ        </when>
        <otherwise>
            ${_alias}DEPT_ID, ${_alias}MEMBER_ID, ${_alias}PLAN_DATE, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}SERVICE_MIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}CUST_ID, ${_alias}REMARK, ${_alias}SERVICE_YN, ${_alias}WON_MEMBER_ID, ${_alias}COMPLAIN_MEMO, ${_alias}CARER_MEMO, ${_alias}ENTER_ID, ${_alias}ENTER_DATE, ${_alias}EDIT_ID, ${_alias}EDIT_DATE, ${_alias}SMS_YN, ${_alias}STATUS, ${_alias}CARER_MEMOYN, ${_alias}CARER_DATE, ${_alias}DEPT_MEMOYN, ${_alias}DEPT_DATE, ${_alias}SERVICE_YN_DIV, ${_alias}SERVICE_REMARK, ${_alias}DUPLISERVICE_YN, ${_alias}CONT_SEQ, ${_alias}DISCOUNT_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}SERVICE_MIN_1, ${_alias}SERVICE_MIN_2, ${_alias}SERVICE_MIN_3, ${_alias}SERVICE_COST, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}FAMILY_YN, ${_alias}FAMILY_REF, ${_alias}MIN_REAL, ${_alias}DUPLISERVICE_SEQ        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}S_ID, ${_alias}DEPT_ID, ${_alias}MEMBER_ID, ${_alias}PLAN_DATE, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}SERVICE_MIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}CUST_ID, ${_alias}REMARK, ${_alias}SERVICE_YN, ${_alias}WON_MEMBER_ID, ${_alias}COMPLAIN_MEMO, ${_alias}CARER_MEMO, ${_alias}ENTER_ID, ${_alias}ENTER_DATE, ${_alias}EDIT_ID, ${_alias}EDIT_DATE, ${_alias}SMS_YN, ${_alias}STATUS, ${_alias}CARER_MEMOYN, ${_alias}CARER_DATE, ${_alias}DEPT_MEMOYN, ${_alias}DEPT_DATE, ${_alias}SERVICE_YN_DIV, ${_alias}SERVICE_REMARK, ${_alias}DUPLISERVICE_YN, ${_alias}CONT_SEQ, ${_alias}DISCOUNT_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}SERVICE_MIN_1, ${_alias}SERVICE_MIN_2, ${_alias}SERVICE_MIN_3, ${_alias}SERVICE_COST, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}FAMILY_YN, ${_alias}FAMILY_REF, ${_alias}MIN_REAL, ${_alias}DUPLISERVICE_SEQ    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}DEPT_ID, ${_alias}MEMBER_ID, ${_alias}PLAN_DATE, ${_alias}START_TIME_DIV, ${_alias}START_MIN_DIV, ${_alias}END_TIME_DIV, ${_alias}END_MIN_DIV, ${_alias}SERVICE_MIN, ${_alias}PRODUCT_ID, ${_alias}SERVICE_AMT, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REMAIN_AMT, ${_alias}CUST_ID, ${_alias}REMARK, ${_alias}SERVICE_YN, ${_alias}WON_MEMBER_ID, ${_alias}COMPLAIN_MEMO, ${_alias}CARER_MEMO, ${_alias}ENTER_ID, ${_alias}ENTER_DATE, ${_alias}EDIT_ID, ${_alias}EDIT_DATE, ${_alias}SMS_YN, ${_alias}STATUS, ${_alias}CARER_MEMOYN, ${_alias}CARER_DATE, ${_alias}DEPT_MEMOYN, ${_alias}DEPT_DATE, ${_alias}SERVICE_YN_DIV, ${_alias}SERVICE_REMARK, ${_alias}DUPLISERVICE_YN, ${_alias}CONT_SEQ, ${_alias}DISCOUNT_AMT, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}SERVICE_MIN_1, ${_alias}SERVICE_MIN_2, ${_alias}SERVICE_MIN_3, ${_alias}SERVICE_COST, ${_alias}AMT_1, ${_alias}AMT_2, ${_alias}AMT_3, ${_alias}FAMILY_YN, ${_alias}FAMILY_REF, ${_alias}MIN_REAL, ${_alias}DUPLISERVICE_SEQ    </sql>

    <select id="simpleGetServiceSchedule" parameterType="long" resultMap="simpleServiceScheduleResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_.simpleGetServiceSchedule */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SERVICE_SCHEDULE
        WHERE
        S_ID = #{id}
	</select>

    <select id="simpleListServiceScheduleCnt" resultType="int">
        /* com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_.simpleListServiceScheduleCnt */

        SELECT COUNT(*)
        FROM GTS2016.SERVICE_SCHEDULE
        <include refid="simpleServiceScheduleCondition_" />
    </select>

    <select id="simpleListServiceSchedule" resultMap="simpleServiceScheduleResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_.simpleListServiceSchedule */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SERVICE_SCHEDULE
        <include refid="simpleServiceScheduleCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="deptId != null and deptId != ''">
            ${_alias}DEPT_ID = #{deptId},
        </if>
        <if test="memberId != null and memberId != ''">
            ${_alias}MEMBER_ID = #{memberId},
        </if>
        <if test="planDate != null">
            ${_alias}PLAN_DATE = #{planDate},
        </if>
        <if test="startTimeDiv != null and startTimeDiv != ''">
            ${_alias}START_TIME_DIV = #{startTimeDiv},
        </if>
        <if test="startMinDiv != null and startMinDiv != ''">
            ${_alias}START_MIN_DIV = #{startMinDiv},
        </if>
        <if test="endTimeDiv != null and endTimeDiv != ''">
            ${_alias}END_TIME_DIV = #{endTimeDiv},
        </if>
        <if test="endMinDiv != null and endMinDiv != ''">
            ${_alias}END_MIN_DIV = #{endMinDiv},
        </if>
        <if test="serviceMin != null and serviceMin != ''">
            ${_alias}SERVICE_MIN = #{serviceMin},
        </if>
        <if test="productId != null">
            ${_alias}PRODUCT_ID = #{productId},
        </if>
        <if test="serviceAmt != null">
            ${_alias}SERVICE_AMT = #{serviceAmt},
        </if>
        <if test="payAmt != null">
            ${_alias}PAY_AMT = #{payAmt},
        </if>
        <if test="reqAmt != null">
            ${_alias}REQ_AMT = #{reqAmt},
        </if>
        <if test="remainAmt != null">
            ${_alias}REMAIN_AMT = #{remainAmt},
        </if>
        <if test="custId != null">
            ${_alias}CUST_ID = #{custId},
        </if>
        <if test="remark != null and remark != ''">
            ${_alias}REMARK = #{remark},
        </if>
        <if test="serviceYn != null and serviceYn != ''">
            ${_alias}SERVICE_YN = #{serviceYn},
        </if>
        <if test="wonMemberId != null and wonMemberId != ''">
            ${_alias}WON_MEMBER_ID = #{wonMemberId},
        </if>
        <if test="complainMemo != null and complainMemo != ''">
            ${_alias}COMPLAIN_MEMO = #{complainMemo},
        </if>
        <if test="carerMemo != null and carerMemo != ''">
            ${_alias}CARER_MEMO = #{carerMemo},
        </if>
        <if test="enterId != null and enterId != ''">
            ${_alias}ENTER_ID = #{enterId},
        </if>
        <if test="enterDate != null">
            ${_alias}ENTER_DATE = #{enterDate},
        </if>
        <if test="editId != null and editId != ''">
            ${_alias}EDIT_ID = #{editId},
        </if>
        <if test="editDate != null">
            ${_alias}EDIT_DATE = #{editDate},
        </if>
        <if test="smsYn != null and smsYn != ''">
            ${_alias}SMS_YN = #{smsYn},
        </if>
        <if test="status != null and status != ''">
            ${_alias}STATUS = #{status},
        </if>
        <if test="carerMemoyn != null and carerMemoyn != ''">
            ${_alias}CARER_MEMOYN = #{carerMemoyn},
        </if>
        <if test="carerDate != null">
            ${_alias}CARER_DATE = #{carerDate},
        </if>
        <if test="deptMemoyn != null and deptMemoyn != ''">
            ${_alias}DEPT_MEMOYN = #{deptMemoyn},
        </if>
        <if test="deptDate != null">
            ${_alias}DEPT_DATE = #{deptDate},
        </if>
        <if test="serviceYnDiv != null and serviceYnDiv != ''">
            ${_alias}SERVICE_YN_DIV = #{serviceYnDiv},
        </if>
        <if test="serviceRemark != null and serviceRemark != ''">
            ${_alias}SERVICE_REMARK = #{serviceRemark},
        </if>
        <if test="dupliserviceYn != null and dupliserviceYn != ''">
            ${_alias}DUPLISERVICE_YN = #{dupliserviceYn},
        </if>
        <if test="contSeq != null">
            ${_alias}CONT_SEQ = #{contSeq},
        </if>
        <if test="discountAmt != null">
            ${_alias}DISCOUNT_AMT = #{discountAmt},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="serviceMin1 != null">
            ${_alias}SERVICE_MIN_1 = #{serviceMin1},
        </if>
        <if test="serviceMin2 != null">
            ${_alias}SERVICE_MIN_2 = #{serviceMin2},
        </if>
        <if test="serviceMin3 != null">
            ${_alias}SERVICE_MIN_3 = #{serviceMin3},
        </if>
        <if test="serviceCost != null">
            ${_alias}SERVICE_COST = #{serviceCost},
        </if>
        <if test="amt1 != null">
            ${_alias}AMT_1 = #{amt1},
        </if>
        <if test="amt2 != null">
            ${_alias}AMT_2 = #{amt2},
        </if>
        <if test="amt3 != null">
            ${_alias}AMT_3 = #{amt3},
        </if>
        <if test="familyYn != null and familyYn != ''">
            ${_alias}FAMILY_YN = #{familyYn},
        </if>
        <if test="familyRef != null and familyRef != ''">
            ${_alias}FAMILY_REF = #{familyRef},
        </if>
        <if test="minReal != null">
            ${_alias}MIN_REAL = #{minReal},
        </if>
        <if test="dupliserviceSeq != null">
            ${_alias}DUPLISERVICE_SEQ = #{dupliserviceSeq},
        </if>
    </sql>

    <update id="updateServiceSchedule" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSchedule">
        /* com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_.updateServiceSchedule */

        UPDATE GTS2016.SERVICE_SCHEDULE
        SET
             DEPT_ID = #{deptId}
            , MEMBER_ID = #{memberId}
            , PLAN_DATE = #{planDate}
            , START_TIME_DIV = #{startTimeDiv}
            , START_MIN_DIV = #{startMinDiv}
            , END_TIME_DIV = #{endTimeDiv}
            , END_MIN_DIV = #{endMinDiv}
            , SERVICE_MIN = #{serviceMin}
            , PRODUCT_ID = #{productId}
            , SERVICE_AMT = #{serviceAmt}
            , PAY_AMT = #{payAmt}
            , REQ_AMT = #{reqAmt}
            , REMAIN_AMT = #{remainAmt}
            , CUST_ID = #{custId}
            , REMARK = #{remark}
            , SERVICE_YN = #{serviceYn}
            , WON_MEMBER_ID = #{wonMemberId}
            , COMPLAIN_MEMO = #{complainMemo}
            , CARER_MEMO = #{carerMemo}
            , ENTER_ID = #{enterId}
            , ENTER_DATE = #{enterDate}
            , EDIT_ID = #{editId}
            , EDIT_DATE = #{editDate}
            , SMS_YN = #{smsYn}
            , STATUS = #{status}
            , CARER_MEMOYN = #{carerMemoyn}
            , CARER_DATE = #{carerDate}
            , DEPT_MEMOYN = #{deptMemoyn}
            , DEPT_DATE = #{deptDate}
            , SERVICE_YN_DIV = #{serviceYnDiv}
            , SERVICE_REMARK = #{serviceRemark}
            , DUPLISERVICE_YN = #{dupliserviceYn}
            , CONT_SEQ = #{contSeq}
            , DISCOUNT_AMT = #{discountAmt}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , SERVICE_MIN_1 = #{serviceMin1}
            , SERVICE_MIN_2 = #{serviceMin2}
            , SERVICE_MIN_3 = #{serviceMin3}
            , SERVICE_COST = #{serviceCost}
            , AMT_1 = #{amt1}
            , AMT_2 = #{amt2}
            , AMT_3 = #{amt3}
            , FAMILY_YN = #{familyYn}
            , FAMILY_REF = #{familyRef}
            , MIN_REAL = #{minReal}
            , DUPLISERVICE_SEQ = #{dupliserviceSeq}
        WHERE
            S_ID = #{id}
    </update>

    <update id="updateServiceScheduleDynamic" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSchedule">
        /* com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_.updateServiceScheduleDynamic */

        UPDATE GTS2016.SERVICE_SCHEDULE
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            S_ID = #{id}
    </update>

    <delete id="deleteServiceSchedule" parameterType="long">
        /* com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_.deleteServiceSchedule */

        DELETE FROM GTS2016.SERVICE_SCHEDULE
        WHERE
            S_ID = #{id}
    </delete>

    <sql id="insert_values_">

        #{deptId},
        #{memberId},
        #{planDate},
        #{startTimeDiv},
        #{startMinDiv},
        #{endTimeDiv},
        #{endMinDiv},
        #{serviceMin},
        #{productId},
        #{serviceAmt},
        #{payAmt},
        #{reqAmt},
        #{remainAmt},
        #{custId},
        #{remark},
        #{serviceYn},
        #{wonMemberId},
        #{complainMemo},
        #{carerMemo},
        #{enterId},
        #{enterDate},
        #{editId},
        #{editDate},
        #{smsYn},
        #{status},
        #{carerMemoyn},
        #{carerDate},
        #{deptMemoyn},
        #{deptDate},
        #{serviceYnDiv},
        #{serviceRemark},
        #{dupliserviceYn},
        #{contSeq},
        #{discountAmt},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{serviceMin1},
        #{serviceMin2},
        #{serviceMin3},
        #{serviceCost},
        #{amt1},
        #{amt2},
        #{amt3},
        #{familyYn},
        #{familyRef},
        #{minReal},
        #{dupliserviceSeq}
    </sql>

    <insert id="insertServiceSchedule">
        /* com.neofect.gts.core.services.srvce.repository.ServiceScheduleRepository_.insertServiceSchedule */


        INSERT INTO GTS2016.SERVICE_SCHEDULE
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

