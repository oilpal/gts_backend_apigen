<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_">

    <resultMap id="simpleServicePaySumResult_" type="com.neofect.gts.core.services.srvce.domain.ServicePaySum">
        <!-- 지사ID -->
        <id     property="deptId" column="DEPT_ID"/>
        <!-- 고객ID -->
        <id     property="custId" column="CUST_ID"/>
        <!-- 집계년월 -->
        <id     property="yyyymm" column="YYYYMM"/>
        <!-- 본인부담금 -->
        <result property="payAmt" column="PAY_AMT"/>
        <!-- 청구금 -->
        <result property="reqAmt" column="REQ_AMT"/>
        <!-- 구청청구번호 -->
        <result property="reqNo" column="REQ_NO"/>
        <!-- 구청청구일자 -->
        <result property="reqDate" column="REQ_DATE"/>
        <!-- 구청반제여부 -->
        <result property="reqYn" column="REQ_YN"/>
        <!-- 구청반제일자 -->
        <result property="reqRedate" column="REQ_REDATE"/>
        
        <result property="rowInputEmpNo" column="ROW_INPUT_EMP_NO"/>
        
        <result property="rowInputDate" column="ROW_INPUT_DATE"/>
        
        <result property="rowInputIp" column="ROW_INPUT_IP"/>
        
        <result property="rowUpdateEmpNo" column="ROW_UPDATE_EMP_NO"/>
        
        <result property="rowUpdateDate" column="ROW_UPDATE_DATE"/>
        
        <result property="rowUpdateIp" column="ROW_UPDATE_IP"/>
        <!-- 비급여 금액 -->
        <result property="bpayAmt" column="BPAY_AMT"/>
    </resultMap>

    <sql id="simpleServicePaySumCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="custIds != null and !custIds.isEmpty()">
            AND ${_alias}CUST_ID IN <foreach collection="custIds" item="custIdValue" open="(" close=")" separator=",">#{ custIdValue }</foreach>
        </if>
        <if test="yyyymms != null and !yyyymms.isEmpty()">
            AND ${_alias}YYYYMM IN <foreach collection="yyyymms" item="yyyymmValue" open="(" close=")" separator=",">#{ yyyymmValue }</foreach>
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="yyyymm != null and yyyymm != ''">
            AND ${_alias}YYYYMM = #{yyyymm}
        </if>
        <if test="payAmt != null">
            AND ${_alias}PAY_AMT = #{payAmt}
        </if>
        <if test="reqAmt != null">
            AND ${_alias}REQ_AMT = #{reqAmt}
        </if>
        <if test="reqNo != null and reqNo != ''">
            AND ${_alias}REQ_NO = #{reqNo}
        </if>
        <if test="reqDate != null and reqDate.enabled == true">
            <if test="reqDate.from != null and reqDate.from != ''">
            AND ${_alias}REQ_DATE >= TO_DATE(#{reqDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="reqDate.to != null and reqDate.to != ''">
            AND ${_alias}REQ_DATE <![CDATA[ < ]]> TO_DATE(#{reqDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="reqYn != null and reqYn != ''">
            AND ${_alias}REQ_YN = #{reqYn}
        </if>
        <if test="reqRedate != null and reqRedate.enabled == true">
            <if test="reqRedate.from != null and reqRedate.from != ''">
            AND ${_alias}REQ_REDATE >= TO_DATE(#{reqRedate.from}, 'YYYY.MM.DD')
            </if>
            <if test="reqRedate.to != null and reqRedate.to != ''">
            AND ${_alias}REQ_REDATE <![CDATA[ < ]]> TO_DATE(#{reqRedate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            AND ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo}
        </if>
        <if test="rowInputDate != null and rowInputDate.enabled == true">
            <if test="rowInputDate.from != null and rowInputDate.from != ''">
            AND ${_alias}ROW_INPUT_DATE >= TO_DATE(#{rowInputDate.from}, 'YYYY.MM.DD')
            </if>
            <if test="rowInputDate.to != null and rowInputDate.to != ''">
            AND ${_alias}ROW_INPUT_DATE <![CDATA[ < ]]> TO_DATE(#{rowInputDate.to}, 'YYYY.MM.DD') + (INTERVAL '1' DAY)
            </if>
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            AND ${_alias}ROW_INPUT_IP = #{rowInputIp}
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            AND ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            AND ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate}
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            AND ${_alias}ROW_UPDATE_IP = #{rowUpdateIp}
        </if>
        <if test="bpayAmt != null">
            AND ${_alias}BPAY_AMT = #{bpayAmt}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}YYYYMM AS ${_asPrefix}YYYYMM, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}REQ_NO AS ${_asPrefix}REQ_NO, ${_alias}REQ_DATE AS ${_asPrefix}REQ_DATE, ${_alias}REQ_YN AS ${_asPrefix}REQ_YN, ${_alias}REQ_REDATE AS ${_asPrefix}REQ_REDATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}BPAY_AMT AS ${_asPrefix}BPAY_AMT        </when>
        <otherwise>
            ${_alias}DEPT_ID, ${_alias}CUST_ID, ${_alias}YYYYMM, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REQ_NO, ${_alias}REQ_DATE, ${_alias}REQ_YN, ${_alias}REQ_REDATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}BPAY_AMT        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}REQ_NO AS ${_asPrefix}REQ_NO, ${_alias}REQ_DATE AS ${_asPrefix}REQ_DATE, ${_alias}REQ_YN AS ${_asPrefix}REQ_YN, ${_alias}REQ_REDATE AS ${_asPrefix}REQ_REDATE, ${_alias}ROW_INPUT_EMP_NO AS ${_asPrefix}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE AS ${_asPrefix}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP AS ${_asPrefix}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO AS ${_asPrefix}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE AS ${_asPrefix}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP AS ${_asPrefix}ROW_UPDATE_IP, ${_alias}BPAY_AMT AS ${_asPrefix}BPAY_AMT        </when>
        <otherwise>
            ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REQ_NO, ${_alias}REQ_DATE, ${_alias}REQ_YN, ${_alias}REQ_REDATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}BPAY_AMT        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}DEPT_ID, ${_alias}CUST_ID, ${_alias}YYYYMM, ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REQ_NO, ${_alias}REQ_DATE, ${_alias}REQ_YN, ${_alias}REQ_REDATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}BPAY_AMT    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}PAY_AMT, ${_alias}REQ_AMT, ${_alias}REQ_NO, ${_alias}REQ_DATE, ${_alias}REQ_YN, ${_alias}REQ_REDATE, ${_alias}ROW_INPUT_EMP_NO, ${_alias}ROW_INPUT_DATE, ${_alias}ROW_INPUT_IP, ${_alias}ROW_UPDATE_EMP_NO, ${_alias}ROW_UPDATE_DATE, ${_alias}ROW_UPDATE_IP, ${_alias}BPAY_AMT    </sql>

    <select id="simpleGetServicePaySum" parameterType="long" resultMap="simpleServicePaySumResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_.simpleGetServicePaySum */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SERVICE_PAY_SUM
        WHERE
        DEPT_ID = #{deptId}
        AND CUST_ID = #{custId}
        AND YYYYMM = #{yyyymm}
	</select>

    <select id="simpleListServicePaySumCnt" resultType="int">
        /* com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_.simpleListServicePaySumCnt */

        SELECT COUNT(*)
        FROM GTS2016.SERVICE_PAY_SUM
        <include refid="simpleServicePaySumCondition_" />
    </select>

    <select id="simpleListServicePaySum" resultMap="simpleServicePaySumResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_.simpleListServicePaySum */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SERVICE_PAY_SUM
        <include refid="simpleServicePaySumCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="payAmt != null">
            ${_alias}PAY_AMT = #{payAmt},
        </if>
        <if test="reqAmt != null">
            ${_alias}REQ_AMT = #{reqAmt},
        </if>
        <if test="reqNo != null and reqNo != ''">
            ${_alias}REQ_NO = #{reqNo},
        </if>
        <if test="reqDate != null">
            ${_alias}REQ_DATE = #{reqDate},
        </if>
        <if test="reqYn != null and reqYn != ''">
            ${_alias}REQ_YN = #{reqYn},
        </if>
        <if test="reqRedate != null">
            ${_alias}REQ_REDATE = #{reqRedate},
        </if>
        <if test="rowInputEmpNo != null and rowInputEmpNo != ''">
            ${_alias}ROW_INPUT_EMP_NO = #{rowInputEmpNo},
        </if>
        <if test="rowInputDate != null">
            ${_alias}ROW_INPUT_DATE = #{rowInputDate},
        </if>
        <if test="rowInputIp != null and rowInputIp != ''">
            ${_alias}ROW_INPUT_IP = #{rowInputIp},
        </if>
        <if test="rowUpdateEmpNo != null and rowUpdateEmpNo != ''">
            ${_alias}ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo},
        </if>
        <if test="rowUpdateDate != null and rowUpdateDate != ''">
            ${_alias}ROW_UPDATE_DATE = #{rowUpdateDate},
        </if>
        <if test="rowUpdateIp != null and rowUpdateIp != ''">
            ${_alias}ROW_UPDATE_IP = #{rowUpdateIp},
        </if>
        <if test="bpayAmt != null">
            ${_alias}BPAY_AMT = #{bpayAmt},
        </if>
    </sql>

    <update id="updateServicePaySum" parameterType="com.neofect.gts.core.services.srvce.domain.ServicePaySum">
        /* com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_.updateServicePaySum */

        UPDATE GTS2016.SERVICE_PAY_SUM
        SET
             PAY_AMT = #{payAmt}
            , REQ_AMT = #{reqAmt}
            , REQ_NO = #{reqNo}
            , REQ_DATE = #{reqDate}
            , REQ_YN = #{reqYn}
            , REQ_REDATE = #{reqRedate}
            , ROW_INPUT_EMP_NO = #{rowInputEmpNo}
            , ROW_INPUT_DATE = #{rowInputDate}
            , ROW_INPUT_IP = #{rowInputIp}
            , ROW_UPDATE_EMP_NO = #{rowUpdateEmpNo}
            , ROW_UPDATE_DATE = #{rowUpdateDate}
            , ROW_UPDATE_IP = #{rowUpdateIp}
            , BPAY_AMT = #{bpayAmt}
        WHERE
            DEPT_ID = #{deptId}
            AND CUST_ID = #{custId}
            AND YYYYMM = #{yyyymm}
    </update>

    <update id="updateServicePaySumDynamic" parameterType="com.neofect.gts.core.services.srvce.domain.ServicePaySum">
        /* com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_.updateServicePaySumDynamic */

        UPDATE GTS2016.SERVICE_PAY_SUM
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            DEPT_ID = #{deptId}
            AND CUST_ID = #{custId}
            AND YYYYMM = #{yyyymm}
    </update>

    <delete id="deleteServicePaySum" parameterType="long">
        /* com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_.deleteServicePaySum */

        DELETE FROM GTS2016.SERVICE_PAY_SUM
        WHERE
            DEPT_ID = #{deptId}
            AND CUST_ID = #{custId}
            AND YYYYMM = #{yyyymm}
    </delete>

    <sql id="insert_values_">

        #{payAmt},
        #{reqAmt},
        #{reqNo},
        #{reqDate},
        #{reqYn},
        #{reqRedate},
        #{rowInputEmpNo},
        #{rowInputDate},
        #{rowInputIp},
        #{rowUpdateEmpNo},
        #{rowUpdateDate},
        #{rowUpdateIp},
        #{bpayAmt}
    </sql>

    <insert id="insertServicePaySum">
        /* com.neofect.gts.core.services.srvce.repository.ServicePaySumRepository_.insertServicePaySum */


        INSERT INTO GTS2016.SERVICE_PAY_SUM
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

