<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/MybatisBase.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_">

    <resultMap id="simpleServiceSummarySumResult_" type="com.neofect.gts.core.services.srvce.domain.ServiceSummarySum">
        
        <id     property="custId" column="CUST_ID"/>
        
        <id     property="deptId" column="DEPT_ID"/>
        
        <id     property="yyyymm" column="YYYYMM"/>
        
        <id     property="seq" column="SEQ"/>
        
        <result property="serviceDiv" column="SERVICE_DIV"/>
        
        <result property="serviceAmt" column="SERVICE_AMT"/>
        
        <result property="reqAmt" column="REQ_AMT"/>
        
        <result property="payAmt" column="PAY_AMT"/>
        
        <result property="bAmt" column="B_AMT"/>
        
        <result property="payBAmt" column="PAY_B_AMT"/>
    </resultMap>

    <sql id="simpleServiceSummarySumCondition_">
        <where>
            <include refid="conditions_" />
        </where>
    </sql>

    <sql id="conditions_">
        <include refid="Common.bindAlias"/>
        <if test="custIds != null and !custIds.isEmpty()">
            AND ${_alias}CUST_ID IN <foreach collection="custIds" item="custIdValue" open="(" close=")" separator=",">#{ custIdValue }</foreach>
        </if>
        <if test="deptIds != null and !deptIds.isEmpty()">
            AND ${_alias}DEPT_ID IN <foreach collection="deptIds" item="deptIdValue" open="(" close=")" separator=",">#{ deptIdValue }</foreach>
        </if>
        <if test="yyyymms != null and !yyyymms.isEmpty()">
            AND ${_alias}YYYYMM IN <foreach collection="yyyymms" item="yyyymmValue" open="(" close=")" separator=",">#{ yyyymmValue }</foreach>
        </if>
        <if test="seqs != null and !seqs.isEmpty()">
            AND ${_alias}SEQ IN <foreach collection="seqs" item="seqValue" open="(" close=")" separator=",">#{ seqValue }</foreach>
        </if>
        <if test="custId != null">
            AND ${_alias}CUST_ID = #{custId}
        </if>
        <if test="deptId != null and deptId != ''">
            AND ${_alias}DEPT_ID = #{deptId}
        </if>
        <if test="yyyymm != null and yyyymm != ''">
            AND ${_alias}YYYYMM = #{yyyymm}
        </if>
        <if test="seq != null">
            AND ${_alias}SEQ = #{seq}
        </if>
        <if test="serviceDiv != null and serviceDiv != ''">
            AND ${_alias}SERVICE_DIV = #{serviceDiv}
        </if>
        <if test="serviceAmt != null">
            AND ${_alias}SERVICE_AMT = #{serviceAmt}
        </if>
        <if test="reqAmt != null">
            AND ${_alias}REQ_AMT = #{reqAmt}
        </if>
        <if test="payAmt != null">
            AND ${_alias}PAY_AMT = #{payAmt}
        </if>
        <if test="bAmt != null">
            AND ${_alias}B_AMT = #{bAmt}
        </if>
        <if test="payBAmt != null">
            AND ${_alias}PAY_B_AMT = #{payBAmt}
        </if>
    </sql>

    <sql id="columns_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}CUST_ID AS ${_asPrefix}CUST_ID, ${_alias}DEPT_ID AS ${_asPrefix}DEPT_ID, ${_alias}YYYYMM AS ${_asPrefix}YYYYMM, ${_alias}SEQ AS ${_asPrefix}SEQ, ${_alias}SERVICE_DIV AS ${_asPrefix}SERVICE_DIV, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}B_AMT AS ${_asPrefix}B_AMT, ${_alias}PAY_B_AMT AS ${_asPrefix}PAY_B_AMT        </when>
        <otherwise>
            ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}YYYYMM, ${_alias}SEQ, ${_alias}SERVICE_DIV, ${_alias}SERVICE_AMT, ${_alias}REQ_AMT, ${_alias}PAY_AMT, ${_alias}B_AMT, ${_alias}PAY_B_AMT        </otherwise>
        </choose>
    </sql>

    <sql id="columns_without_id_">
        <include refid="Common.bindAlias"/>
        <include refid="Common.bindAsPrefix"/>

        <choose>
        <when test="'${_asPrefix}' != '' and !'${_asPrefix}'.endsWith('}')">
            ${_alias}SERVICE_DIV AS ${_asPrefix}SERVICE_DIV, ${_alias}SERVICE_AMT AS ${_asPrefix}SERVICE_AMT, ${_alias}REQ_AMT AS ${_asPrefix}REQ_AMT, ${_alias}PAY_AMT AS ${_asPrefix}PAY_AMT, ${_alias}B_AMT AS ${_asPrefix}B_AMT, ${_alias}PAY_B_AMT AS ${_asPrefix}PAY_B_AMT        </when>
        <otherwise>
            ${_alias}SERVICE_DIV, ${_alias}SERVICE_AMT, ${_alias}REQ_AMT, ${_alias}PAY_AMT, ${_alias}B_AMT, ${_alias}PAY_B_AMT        </otherwise>
        </choose>
    </sql>


    <sql id="ins_columns_">
        <include refid="Common.bindAlias"/>
        ${_alias}CUST_ID, ${_alias}DEPT_ID, ${_alias}YYYYMM, ${_alias}SEQ, ${_alias}SERVICE_DIV, ${_alias}SERVICE_AMT, ${_alias}REQ_AMT, ${_alias}PAY_AMT, ${_alias}B_AMT, ${_alias}PAY_B_AMT    </sql>

    <sql id="ins_columns_without_id_">
        <include refid="Common.bindAlias"/>
        ${_alias}SERVICE_DIV, ${_alias}SERVICE_AMT, ${_alias}REQ_AMT, ${_alias}PAY_AMT, ${_alias}B_AMT, ${_alias}PAY_B_AMT    </sql>

    <select id="simpleGetServiceSummarySum" parameterType="long" resultMap="simpleServiceSummarySumResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_.simpleGetServiceSummarySum */

        SELECT
            <include refid="columns_" />
        FROM
            GTS2016.SERVICE_SUMMARY_SUM
        WHERE
        CUST_ID = #{custId}
        AND DEPT_ID = #{deptId}
        AND YYYYMM = #{yyyymm}
        AND SEQ = #{seq}
	</select>

    <select id="simpleListServiceSummarySumCnt" resultType="int">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_.simpleListServiceSummarySumCnt */

        SELECT COUNT(*)
        FROM GTS2016.SERVICE_SUMMARY_SUM
        <include refid="simpleServiceSummarySumCondition_" />
    </select>

    <select id="simpleListServiceSummarySum" resultMap="simpleServiceSummarySumResult_">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_.simpleListServiceSummarySum */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns_" />
        FROM GTS2016.SERVICE_SUMMARY_SUM
        <include refid="simpleServiceSummarySumCondition_" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <sql id="update_dynamic_content_">
        <include refid="Common.bindAlias"/>
        <if test="serviceDiv != null and serviceDiv != ''">
            ${_alias}SERVICE_DIV = #{serviceDiv},
        </if>
        <if test="serviceAmt != null">
            ${_alias}SERVICE_AMT = #{serviceAmt},
        </if>
        <if test="reqAmt != null">
            ${_alias}REQ_AMT = #{reqAmt},
        </if>
        <if test="payAmt != null">
            ${_alias}PAY_AMT = #{payAmt},
        </if>
        <if test="bAmt != null">
            ${_alias}B_AMT = #{bAmt},
        </if>
        <if test="payBAmt != null">
            ${_alias}PAY_B_AMT = #{payBAmt},
        </if>
    </sql>

    <update id="updateServiceSummarySum" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSummarySum">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_.updateServiceSummarySum */

        UPDATE GTS2016.SERVICE_SUMMARY_SUM
        SET
             SERVICE_DIV = #{serviceDiv}
            , SERVICE_AMT = #{serviceAmt}
            , REQ_AMT = #{reqAmt}
            , PAY_AMT = #{payAmt}
            , B_AMT = #{bAmt}
            , PAY_B_AMT = #{payBAmt}
        WHERE
            CUST_ID = #{custId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND SEQ = #{seq}
    </update>

    <update id="updateServiceSummarySumDynamic" parameterType="com.neofect.gts.core.services.srvce.domain.ServiceSummarySum">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_.updateServiceSummarySumDynamic */

        UPDATE GTS2016.SERVICE_SUMMARY_SUM
            <set>
            <include refid="update_dynamic_content_" />
            </set>
        WHERE
            CUST_ID = #{custId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND SEQ = #{seq}
    </update>

    <delete id="deleteServiceSummarySum" parameterType="long">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_.deleteServiceSummarySum */

        DELETE FROM GTS2016.SERVICE_SUMMARY_SUM
        WHERE
            CUST_ID = #{custId}
            AND DEPT_ID = #{deptId}
            AND YYYYMM = #{yyyymm}
            AND SEQ = #{seq}
    </delete>

    <sql id="insert_values_">

        #{serviceDiv},
        #{serviceAmt},
        #{reqAmt},
        #{payAmt},
        #{bAmt},
        #{payBAmt}
    </sql>

    <insert id="insertServiceSummarySum">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSummarySumRepository_.insertServiceSummarySum */


        INSERT INTO GTS2016.SERVICE_SUMMARY_SUM
        (
        <include refid="ins_columns_without_id_" />
        )
        VALUES (
        <include refid="insert_values_" />
        )
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

	</insert>

</mapper>

