<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/Mybatis.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.common.repository.CategoryRepository">
    <!--
        <include refid="columns" /> 대신 <include refid="columns"><property name="_alias" value="b."/></include> 방식으로 alias 를 줄 수 있습니다.
    -->
    <resultMap id="simpleCategoryResult" type="category" extends="com.neofect.gts.core.services.common.repository.CategoryRepository_.simpleCategoryResult_">

    </resultMap>

    <resultMap id="nestedCategoryResult" type="category" extends="simpleCategoryResult">
        <collection property="children" ofType="category" javaType="ArrayList" column="{parentId=CATE_ID}" select="listCategory"/>
    </resultMap>

    <sql id="categoryCondition">
        <where>
            <include refid="com.neofect.gts.core.services.common.repository.CategoryRepository_.conditions_" />
        </where>
    </sql>

    <sql id="columns">
        <include refid="com.neofect.gts.core.services.common.repository.CategoryRepository_.columns_" />
    </sql>

    <select id="getCategory" parameterType="long" resultMap="simpleCategoryResult">
        /* CategoryRepository.getCategory */

        SELECT
            <include refid="columns" />
        FROM
            nv_category
        WHERE
        cate_id = #{id}
	</select>

    <select id="getCategoryByCode" resultMap="nestedCategoryResult">
        /* CategoryRepository.getCategoryByCode */

        SELECT
            <include refid="columns" />
        FROM
            nv_category
        WHERE
            cate_namespace = #{namespace} AND cate_code = #{parentCode}
    </select>

    <select id="listCategoryCnt" resultType="int">
        /* CategoryRepository.listCategoryCnt */

        SELECT COUNT(DISTINCT cate_id )
        FROM nv_category
        <include refid="categoryCondition" />
    </select>

    <select id="listCategory" resultMap="simpleCategoryResult">
        /* CategoryRepository.listCategory */
        SELECT
            <include refid="columns" />
        FROM nv_category
        <include refid="categoryCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <select id="listCategoryIds" resultType="long">
        /* CategoryRepository.listCategoryIds */
        SELECT DISTINCT cate_id  <include refid="Common.sortKeyList"/>
        FROM nv_category
        <include refid="categoryCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
    </select>

    <update id="markAsDelete">
        UPDATE nv_category
        SET
            cate_deleted = true
        WHERE
            cate_id = #{id}
    </update>

</mapper>

