<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/Mybatis.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.user.repository.UserAccountRepository">
    <!--
        <include refid="columns" /> 대신 <include refid="columns"><property name="_alias" value="b."/></include> 방식으로 alias 를 줄 수 있습니다.
    -->
    <resultMap id="simpleUserAccountResult" type="userAccount" extends="com.neofect.gts.core.services.user.repository.UserAccountRepository_.simpleUserAccountResult_">

    </resultMap>

    <sql id="userAccountConditionEx">
        <!--
            add your condition here
         -->
        <include refid="com.neofect.gts.core.services.user.repository.UserAccountRepository_.conditions_" />
    </sql>

    <sql id="userAccountCondition">
        <where>
            <include refid="userAccountConditionEx" />
        </where>
    </sql>

    <sql id="columns">
        <include refid="com.neofect.gts.core.services.user.repository.UserAccountRepository_.columns_" />
    </sql>

    <select id="getUserAccount" parameterType="long" resultMap="simpleUserAccountResult">
        /* UserAccountRepository.getUserAccount */

        SELECT
            <include refid="columns" />
        FROM
            nv_user_account
        WHERE
        acnt_id = #{id}
	</select>

    <select id="listUserAccountCnt" resultType="int">
        /* UserAccountRepository.listUserAccountCnt */

        SELECT COUNT(DISTINCT acnt_id )
        FROM nv_user_account
        <include refid="userAccountCondition" />
    </select>

    <select id="listUserAccount" resultMap="simpleUserAccountResult">
        /* UserAccountRepository.listUserAccount */
        SELECT
            <include refid="columns" />
        FROM nv_user_account
        <include refid="userAccountCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <select id="listUserAccountIds" resultType="long">
        /* UserAccountRepository.listUserAccountIds */
        SELECT DISTINCT acnt_id  <include refid="Common.sortKeyList"/>
        FROM nv_user_account
        <include refid="userAccountCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
    </select>

    <update id="markAsDelete">
        UPDATE nv_user_account
        SET
            acnt_deleted = true
        WHERE
            acnt_id = #{id}
    </update>

    <select id="getUserAccountByLogin" resultMap="simpleUserAccountResult">
        SELECT
            <include refid="columns"><property name="_alias" value="ua."/></include>
        FROM nv_user_account ua
        WHERE acnt_login = #{login}
        AND acnt_deleted = false
        AND acnt_type = #{acntType}
    </select>

</mapper>

