<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/Mybatis.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.user.repository.UserRepository">
    <!--
        <include refid="columns" /> 대신 <include refid="columns"><property name="_alias" value="b."/></include> 방식으로 alias 를 줄 수 있습니다.
    -->
    <resultMap id="simpleUserResult" type="user" extends="com.neofect.gts.core.services.user.repository.UserRepository_.simpleUserResult_">

    </resultMap>

    <resultMap id="userResult" type="user" extends="com.neofect.gts.core.services.user.repository.UserRepository_.simpleUserResult_">
        <association property="account" resultMap="com.neofect.gts.core.services.user.repository.UserAccountRepository.simpleUserAccountResult"/>
    </resultMap>

    <sql id="userConditionEx">
        <include refid="Common.qm">
            <property name="_qm" value="_qm"/>
        </include>

        <!--
            add your condition here
         -->
        <include refid="com.neofect.gts.core.services.user.repository.UserRepository_.conditions_" />
    </sql>
    <sql id="userCondition">
        <where>
            <include refid="userConditionEx">
                <property name="_alias" value="u."/>
            </include>
            <include refid="com.neofect.gts.core.services.user.repository.UserAccountRepository.userAccountConditionEx">
                <property name="_alias" value="ua."/>
            </include>
        </where>
    </sql>

    <sql id="columns">
        <include refid="com.neofect.gts.core.services.user.repository.UserRepository_.columns_" />
    </sql>

    <select id="getUser" parameterType="long" resultMap="userResult">
        /* UserRepository.getUser */

        SELECT
            <include refid="columns" />
            , <include refid="com.neofect.gts.core.services.user.repository.UserAccountRepository.columns"/>
        FROM
            nv_user u JOIN nv_user_account ua on u.user_id = ua.acnt_id
        WHERE
        user_id = #{id}
	</select>

    <select id="listUserCnt" resultType="int">
        /* UserRepository.listUserCnt */

        SELECT COUNT(DISTINCT user_id )
        FROM nv_user u JOIN nv_user_account ua on u.user_id = ua.acnt_id
        <include refid="userCondition" />
    </select>

    <select id="listUser" resultMap="userResult">
        /* UserRepository.listUser */
        SELECT
            <include refid="columns" />
            , <include refid="com.neofect.gts.core.services.user.repository.UserAccountRepository.columns"/>
        FROM nv_user u JOIN nv_user_account ua on u.user_id = ua.acnt_id
        <include refid="userCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
	</select>

    <select id="listUserIds" resultType="long">
        /* UserRepository.listUserIds */
        SELECT DISTINCT user_id  <include refid="Common.sortKeyList"/>
        FROM nv_user u JOIN nv_user_account ua on u.user_id = ua.acnt_id
        <include refid="userCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter"/>
    </select>


</mapper>

