<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by UnvUS.
 ! Copyright(c) 2017 unvus.com All rights reserved.
 ! Template skrull-pack-mybatis:src/main/resources/mybatis/sql/Mybatis.e.vm.xml
 ! Template is part of project: https://git.unvus.com/unvus/opensource/pack-unvus-mybatis
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository">
    <!--
        <include refid="columns" /> 대신 <include refid="columns"><property name="_alias" value="b."/></include> 방식으로 alias 를 줄 수 있습니다.
    -->
    <resultMap id="simpleServiceSupplyScheduleResult" type="serviceSupplySchedule" extends="com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.simpleServiceSupplyScheduleResult_">

    </resultMap>

    <sql id="serviceSupplyScheduleCondition">
        <where>
            <include refid="com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.conditions_" />
        </where>
    </sql>

    <sql id="columns">
        <include refid="com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository_.columns_" />
    </sql>

    <select id="getServiceSupplySchedule" parameterType="long" resultMap="simpleServiceSupplyScheduleResult">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository.getServiceSupplySchedule */

        SELECT
            <include refid="columns" />
        FROM
            GTS2016.SERVICE_SUPPLY_SCHEDULE
        WHERE
        CUST_ID = #{custId}
        AND CONT_SEQ = #{contSeq}
        AND CONT_ITEM = #{contItem}
	</select>

    <select id="listServiceSupplyScheduleCnt" resultType="int">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository.listServiceSupplyScheduleCnt */

        SELECT COUNT(DISTINCT CUST_ID CONT_SEQ CONT_ITEM )
        FROM GTS2016.SERVICE_SUPPLY_SCHEDULE
        <include refid="serviceSupplyScheduleCondition" />
    </select>

    <select id="listServiceSupplySchedule" resultMap="simpleServiceSupplyScheduleResult">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository.listServiceSupplySchedule */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT
            <include refid="columns" />
        FROM GTS2016.SERVICE_SUPPLY_SCHEDULE
        <include refid="serviceSupplyScheduleCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
	</select>

    <select id="listServiceSupplyScheduleIds" resultType="long">
        /* com.neofect.gts.core.services.srvce.repository.ServiceSupplyScheduleRepository.listServiceSupplyScheduleIds */
        <include refid="Common.pagingHeader-oracle"/>
        SELECT DISTINCT CUST_ID CONT_SEQ CONT_ITEM  <include refid="Common.sortKeyList"/>
        FROM GTS2016.SERVICE_SUPPLY_SCHEDULE
        <include refid="serviceSupplyScheduleCondition" />
        <include refid="Common.sort"/>
        <include refid="Common.pagingFooter-oracle"/>
    </select>


</mapper>

